
https://blog.csdn.net/JackSparrow_sjl/article/details/106331553
史上最全linux内核配置--Device drivers


===============================================================================================================
详细介绍内核配置选项及删改情况 
第一部分：全部删除 
Code maturity level options ---> 代码成熟等级选项 
[]Prompt for development and/or incomplete code/drivers 默认情况下是选择的，这将会在设置界面中显示还在开发或者还没有完成的代码与驱动.不选。 
第二部分 ：除以下选项，其它全部删除 
General setup—〉 
System V IPC (IPC:Inter Process Communication)是组系统调用及函数库，它能让程序彼此间同步进行交换信息。某些程序以及DOS模拟环境都需要它。为进程提供通信机制，这将使系统中各进程间有交换信息与保持同步的能力。有些程序只有在选Y的情况下才能运行，所以不用考虑，这里一定要选。 
第三部分：除以下选项，其它全部删除 
Loadable module support ---> 可引导模块支持 建议作为模块加入内核 
[] Enable loadable module support 这个选项可以让你的内核支持模块，模块是什么呢？模块是一小段代码，编译后可在系统内核运行时动态的加入内核，从而为内核增加一些特性或是对某种硬件进行支持。一般一些不常用到的驱动或特性可以编译为模块以减少内核的体积。在运行时可以使用modprobe命令来加载它到内核中去(在不需要时还可以移除它)。一些特性是否编译为模块的原则是，不常使用的，特别是在系统启动时不需要的驱动可以将其编译为模块，如果是一些在系统启动时就要用到的驱动比如说文件系统，系统总线的支持就不要编为模块了，否在无法启动系统。 
[]Automatic kernel module loading 一般情况下，如果我们的内核在某些任务中要使用一些被编译为模块的驱动或特性时，我们要先使用modprobe命令来加载它，内核才能使用。不过，如果你选择了这个选项，在内核需要一些模块时它可以自动调用modprobe命令来加载需要的模块，这是个很棒的特性，当然要选Y喽。 
第四部分：全部删除 
Block layer-----〉块设备 
第五部分：除以下选项，其它全部删除 
Processor type and features ---> 处理器类型 
Subarchitecture Type (PC-compatible) ---> 这选项的主要的目的，是使Linux可以支持多种PC标准，一般我们使用的PC机是遵循所谓IBM兼容结构(pc/at)。这个选项可以让你选择一些其它架构。我们一般选择PC-compatible就可以了。 
Processor family（386） : 它会对每种CPU做最佳化，让它跑的好又快，一般来说，你是什么型号的就选什么型号的就好。我选的是386，这样内核会省下不少空间 
第六部分：除以下选项，其它全部删除 
Power management options (ACPI, APM) ---> 电源管理选项 
[ ] Power Management Debug Support 电源管理的调试信息支持，如果不是要调试内核有关电源管理部份，请不要选择这项。 
ACPI Support ---〉高级电源接口配置支持，如果BIOS支持，建议选上这项 
[]Button 这个选项用于注册基于电源按钮的事件，比如power, sleep等，当你按下按钮时事件将发生，一个守护程序将读取/proc/acpi/event，并执行用户在这些事件上定义的动作比如让系统关机。可以不选择，根据自己的需求。 
第七部分：除以下选项，其它全部删除 
Bus options (PCI, PCMCIA, EISA, MCA, ISA) ---> 总线选项 
[]PCI support 
PCI access mode (Any) ---> PCI外围设备配置，强列建议选Any，系统将优先使用MMConfig，然后使用BIOS，最后使用Direct检测PCI设备。 
第八部分：除以下选项，其它全部删除 
Executable file formats ---> 
Kernel support for ELF binaries ELF是开放平台下最常用的二进制文件，它支持不同的硬件平台。一定要选。 
第九部分：除以下选项，其它全部删除 
Networking 
Networking options ---> 
[]Unix domain sockets 
[]TCP/IP networking 
第十部分：除以下选项，其它全部删除 
Device Drivers --->设备驱动 
Block devices-------〉 
[]Compaq SMART2 support  
[] Compaq Smart Array 5xxx support  
[]Loopback device support 大部分的人这一个选项都选N，因为没有必要。但是如果你要mount iso文件的话，你得选上Y。这个选项的意思是说，可以将一个文件挂成一个文件系统。如果要烧光盘片的，那么您很有可能在把一个文件烧进去之前，看看这个文件是否符合IS09660的文件系统的内容，是否符合您的需求。而且，可以对这个文件系统加以保护。不过，如果您想做到这点的话，您必须有最新的mount程序，版本是在2.5X版以上的。而且如果您希望对这个文件系统加上保护，则您必须有des.1.tar.gz 这个程序。注意：此处与网络无关。建议编译成模块 
[] RAM disk support 
SCSI device support ---> 里面有关于USB支持的，要选择 
[]SCSI device support USB要用，必须选择 
[]legacy /proc/scsi/ support USB要用，必须选择 
[]SCSI disk support USB要用，必须选择 
SCSI Low-level drivers 
[]Serial ATA(SATA) support 
[]Intel PIIX/ICH SATA support  这个必须选择，否则无法产生引导文件 
[]Via SATA support 
Networking device support ---> 这个下面是选网卡驱动，一定要选 
Ethernet(1000mbit)-&#61664;我的电脑是千兆网卡所以就选这个 
[]broadcom Tigon3support 
Input device support ---> 这个里面要设置你的鼠标键盘什么的 
[]Provide legacy /dev/psaux device 
Graphics support ---> 
[]Support for frame buffer devices 支持Frame buffer的，一定要选择 
USB support ---> 
[]USB device filesystem 这个好象是用U盘必须的 
[]EHCI HCD (USB 2.0) support 有usb2.0就选上把，编译成模块 
[]OHCI HCD support 必须选择，编译成模块 
[]UHCI HCD (most Intel and VIA) support 必须选择，编译成模块 
[]USB Mass Storage support 用U盘必须选择 
USB Human Interface Device (full HID) support 里面选择usb鼠标和usb键盘，如果你有一定选上这个必需选 
HID input layer support 应该选择 
/dev/hiddev raw HID device support如果这里有USB键盘和鼠标选项，一定要选择 

第十一部分：除以下选项，其它全部删除 
file systems --->文件系统 
<*> Second extended fs support  
[*] Ext2 extended attributes  
[*] Ext2 POSIX Access Control Lists  
[*] Ext2 Security Labels  
<M> Ext3 journalling file system support  
[*] Ext3 extended attributes  
[*] Ext3 POSIX Access Control Lists  
[*] Ext3 Security Labels 以上这些肯定是要选择的，linux的标准文件系统 
<M> Kernel automounter support 内核自动挂载的，当然要选 
<M> Kernel automounter version 4 support (also supports v3) 当然要选 
DOS/FAT/NT Filesystems --->  
<M> DOS FAT fs support  
<M> MSDOS fs support  
<M> VFAT (Windows-95) fs support  
<M> NTFS file system support 
Native language support&#61664;语言支持，这里就支持英语和汉语就行了，不多说了 
[]NLS ISO 8859-1 必须选择，这个是关于U盘挂载的。 
CD-ROM/DVD Filesystems ---> 这个是关于挂载ISO文件的，用的话就选。 
<*> ISO 9660 CDROM file system support 
第十二部分: 全部删除 
Instrumentation support  
第十三部分：全部删除 
Kernel hacking --->破解核心？可不是当骸客啦，不选 
第十四部分：全部删除 
Security options ---> 
第十五部分：全部删除 
Cryptographic options --->这是核心支持加密的选项 
第十六部分：全部删除 
Library routines ---> 


  

附： 
内核配置 
　　内核配置的方法很多，make config、make xconfig、make menuconfig、make oldconfig等等，它们的功能都是一样的，区别应该从名字上就能看出来，只有make oldconfig是指用系统当前的设置（./.config）作为缺省值。这里用的是make menuconfig。 
　　需要牢记:不必要的驱动越多，内核就越大，不仅运行速度慢、占用内存多，在少数情况下、还会引发其他问题。具体步骤如下： 
首先确定shell是bash。 
然后 
$make menuconfig 
有一些默认的符号其含义如下： 
y：加载 
n：不加载 
m：作为模块加载 

可以配置的选项有以下一些： 
1）code maturity level option 代码成熟度 
prompt for development and/or incomplete code/drivers [N/y/?] 
如果有兴趣测试一下内核中尚未最终完成的某些模块,就选y，否则选N，想知道更详细的信息选？会看到联机帮助（以下？的含义相同）,N大写表示缺省值。 

2）processor type and features 处理器类型及特性 
Processor family（386，486/Cx486，586/K5/5x86/6x86，Pentium/K6/TSC， PPro/6x86MX）[PPro/6x86MX] 
[]内的是缺省值，我们可以根据前面介绍的uname 命令执行的结果选择。此项如果高于386，那么生成的内核在386机器上将不能启动。 
Math emulation（CONFIG_MATH_EMULATION）[N/y/?] 
需要进行协处理器模拟吗？一般的机器都回n。如果机器已经有硬件的协处理器，那么内核仍将使用硬件，而忽略软件的math-emulation，这将使内核变大变慢。 
MTRR（Memory Type Range Register）support（CONFIG_MTRR）[N/y/？] 
在Pentium、Pro/Pentium II类的系统中可以提高图像写入速度。 
Symmetric multi-processing support（CONFIG_SMP）[Y/n/？] 
如果您的机器有多个处理器，就选y。此时要选中下面的Enhanced Real Time Clock Support 

3）loadable model support 可加载模块支持 
Enable loadable module support（CONFIG_MODULES）[Y/n/？] 
最好选y，不然许多仅供动态加载的模块就不能用了。 
Set version information on all symbols for modules（CONFIG_MODVERSIONS）[N/y/？] 
选N 
Kernel module loader（CONFIG_KMOD）[N/y/?] 

4）general setup 一般设置 
Networking support（CONFIG_NET）[Y/n/?] 
选y吧，现在还有几台计算机不用上网呢？ 
PCI support （CONFIG_PCI）[Y/n/?] 
PCI 总线和设备总该有吧。 
PCI access mode（BIOS，Direct，Any）[Any] 
缺省值比较保险，但如果您对您的主板很有信心，就选BIOS。 
PCI quirks （CONFIG_PCI_QUIRKS）[Y/n/?] 
用于修补BIOS中对PCI有影响的BUG，同样，如果您对主板很有信心，就选n。 
Backward-compatible /proc/pci〉（CONFIG_PCI_OLD_PROC）[Y/n/?] 
以前的内核使用/proc/pci，新版内核使用/proc/bus/pci，要保持兼容性就选y。 
MCA support（CONFIG_MCA）[N/y/?] 
查看帮助吧。 
SGI Visual Workstation support（CONFIG_VISWS）[N/y/?] 
您的机器是SGI的吗？是就选y。 
System V IPC（CONFIG_SYSVIPC）[Y/n/?] 
进程间通信函数和系统调用。Linux内核的五大组成部分之一，一定要选。 
BSD Process Accounting（CONFIG_BSD_PROCESS_ACCT）[N/y/?] 
用于启动由内核将进程信息写入文件的用户级系统调用。就看您想不想用它了。 
Sysctl support（CONFIG_SYSCTL）[Y/n/?] 
在内核正在运行的时候修改内核。用8KB空间换取某种方便。别选吧，除非你真的想试试。 
Kernel support for a.out binaries（CONFIG_BINFMT_AOUT）[Y/m/n/?] 
为了能使用以前编译的程序，选y。 
Kernel support for ELF binaries（CONFIG_BINFMT_ELF）[Y/m/n/?] 
为了能使用现在编译的程序，选y。 
Kernel support for MISC binaries（CONFIG_BINFMT_MISC）[Y/m/n/?] 
一般选y，用于支持java等代码的自动执行。 
Parallel port support（CONFIG_PARPORT）[N/y/m/?] 
并口设备，如打印机。 

5）plug and play support 即插即用设备支持 
Plug and Play support （CONFIG_PNP）[N/y/?] 
选y吧。 

6）block devices 块设备 
Normal PC floppy disk support（CONFIG_BLK_DEV_FD）[Y/m/n/?] 
一般的软驱。选y。 
Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support（CONFIG_BLK_DEV_IDE）[Y/m/n/?] 
这几种接口的硬盘、光驱、磁带、软驱。选y。 
Include IDE/ATAPI CDROM support（CONFIG_BLK_DEV_IDECD）[Y/m/n/?] 
CDROM。选y。 

7）networking options 网络选项 
Packet socket （CONFIG_PACHET）[Y/m/n/?] 
按照目前网络发展的状况，选y比较好。当然也可以选其它的。 
Kernel/User netlink socke（CONFIG_NETLINK）[N/y/?] 
内核与用户进程双向通信。选y。 
Network firewalls（CONFIG_FIREWALL）[N/Y/?] 
如果真的需要用防火墙，就选y。 
UNIX domain sockets（confgi_unix）[Y/m/n/?] 
socket 的用处太多了。选y。 
TCP/IP networking（CONFIG_INET）[Y/n/?] 
选y，理由如上一条。 
The IPX protocol （CONFIG_IPX）[N/y/m/?] 
其实并没有那么多人真的需要使用或者学习IPX，所以一般选N。 
Appletalk DDP（CONFIG_ATALK）[N/y/m/?] 
选N，理由同上。 

8）SCSI support SCSI支持，SCSI low-level drives SCSI低级驱动 
根据系统中SCSI设备的实际情况选择。 

9）Networking device support 网络设备支持 
如果用LAN上网，就选择网卡； 
如果用MODEM拨号上网，就要看ISP提供那种服务了，一般都是PPP。 

10）Amateur Radio support 业余收音机支持 
这是什么我不太清楚，所以选N。 

11）ISDN subsystem ISDN子系统 
好像已经有支持ISDN的MODEM了，所以最好先看看自己的MODEM是不是这种，再做选择。 

12）Old CD-ROM dfivers （not SCSI， not IDE） 老式光驱驱动 
一般选N，因为这种设备实在很少见。 

13）Character devices 字符设备 
Virtual terminal（CONFIG_VT）[Y/n/?] 
Linux上一般可以用Alt+F1/F2/F3/F4来切换不同的任务终端，即使在一台计算机上也可以充分使用Linux的多任务能力，一些需要以命令行方式安装合适用的软件如果有虚拟终端的支持就会更方便，因此选y。 
Support for console on virtual terminal（CONFIG_VT_CONSOLE）[Y/n/?] 
选y将支持一个虚拟终端作为控制台。一般为Alt+F1。 
Support for console on serial port（CONFIG_SERIAL）[Y/m/n/?] 
除非真的需要一个串口控制台，否则选n。 
Extended dumb serial driver options（CONFIG_SERIAL_EXTENDED）[N/y/?] 
如果希望使用"dumb"的非标准特性（如HUB6支持），选y，一般选N。 
Non-standard serial port support（CONFIG_SERIAL_NONSTANDARD）[N/y/?] 
非标准串口。一般选N。 
UNIX98 PTY support（CONFIG_UNIX98_PTYS）[Y/n/?] 
PTY指伪终端，一般用户就选n。但如果想用telnet或者xterms作为终端访问主机,并且已经安装了glibc2.1，就可以选y。 
Maximum number of UNIX98 PTYs in use（0-2048）（CONFIG_UNIX98_PTY_COUNT）[256] 
缺省值就可以了。 
Mouse Support（not serial mice）（CONFIG_MOUSE）[Y/n/?] 
PS/2等非串口鼠标选y，否则选N。 

14）Mice 鼠标 
根据自己的鼠标类型选择。 

15）Video for Linux Linux视频 
根据系统中的音/视频捕捉设备选择。 

16）Joystick support 操纵杆 
根据系统中的游戏杆设备选择 

17）Ftape，the floopy tape device driver Ftape设备驱动 
Ftape （QIC-80/Travan）support（CONFIG_FTAPE）[N/y/m/?] 
如果系统中有磁带机，选y。 

18）Filesystems 文件系统 
文件系统的选择要比较仔细，因为其中的一些给某些系统功能提供支持。而且除了proc、ext2等文件系统之外，其它的文件系统（包括下面的网络文件系统）都可以选择为m方式，从而减小内核启动时的体积。 
Quota support（CONFIG_QUOTA）[N/y/?] 
用于给用户划分定量的磁盘空间。如不用此功能就选N。 
DOS FAT fs support（CONFIG_FAT_FS）[N/y/m/?] 
为内核提供FAT支持，多数用户有可能从Linux访问同一系统中的WINDOWS硬盘空间，因此最好选y。 
ISO 9660 CDROM filesystem support（CONFIG_ISO9660_FS）[Y/m/n/?] 
有标准光驱的系统应该选Y。 
Minix fs support（CONFIG_MINIX_FS）[N/y/m/?] 
用于创建启动盘的文件系统，多数应该选y或者m。 
/proc filesystem support（CONFIG_PROC_FS）[Y/n/?] 
虚拟文件系统，必须选Y。 
Second extended fs support（CONFIG_EXT2_FS）[Y/m/n/?] 
Linux标准文件系统，都应该选Y。 

19）Network file systems 网络文件系统 
Coda filesystem support （advanced network fs）（CONFIG_CODA_FS）[N/y/m/?] 
先看帮助再选。 
NFS filesystem support（CONFIG_NFS_FS）[Y/m/n/?] 
选Y或n，能够访问远程NFS文件系统。 
SMB filesystem support（to mount WfW shares etc.）（CONFIG_SMB_FS）[N/y/m/?] 
要访问WINDOWS系统中的共享资源选y。 
NCP filesystem support（to mout NetWare volumes）（CONFIG_NCP_FS）[N/y/m/?] 
如果真的需要访问NetWare文件系统，就选y或者m。 

20）Partion Types 分区类型 
一般用不上；要用请参看帮助。 

21）Console drivers 控制台驱动 
VGA text console（CONFIG_VGA_CONSOLE）[Y/n/?] 
用VGA模式下用文本方式操作Linux，一般选y。 
Video mode selection support（CONFIG_VIDEO_SELECT）[N/y/?] 
大多数系统都不需要这项功能。 

22）Sound 声音 
Sound card support（CONFIG_SOUND）[N/y/m/?] 
如果系统中安装了声卡，就选y（或者m），然后查看帮助。 

23）Kernel　hacking 内核监视 
kernel hacking往往会生成非常大或者非常慢（甚至又大又慢）的内核，甚至会引起内核工作不稳定。如果一定要选，那么也最好不要选其中的"development"、"experimental"、"debugging"项。



==================
六、再说系统引导

1、启动流程：


1、post


2、bootloader(mbr:446,stage2:/boot/grub)


3、kernel+initrd(initramfs)(硬件检测、安装驱动，只读方式挂载根文件系统，执行/sbin/init-->init(5版本/etc/inittab(6版本是/etc/init/*.conf)),通过/etc/inittab设置默认运行级别。


4、执行系统初始化脚本/etc/rc.d/rc.sysinit,按需启动对象级别下的服务，启动终端）


系统的多重引导实际上就是在引导菜单选择的时候，指向不同的引导程序，而这个引导程序可以在不同分区的引导扇区，可以不再MBR中。


由于grub引导文件不支持LVM文件系统，所以在使用lvm进行分区的时候，必须把/boot分区单独分开而不能同根分区在一起。



//
https://blog.csdn.net/lixiangminghate/article/details/55224412?utm_medium=distribute.pc_relevant_right.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase&depth_1-utm_source=distribute.pc_relevant_right.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase

==================================================

1.       进到linux内核源代码目录下cd /home/linux-2.6.16

2.       make clean

 

删除大多数的由编译生成的文件、但会保留内核的配置文件.config。

 

make mrproper

 

删除所有的编译生成的文件，还有内核配置文件，再加上各种备份文件。

 

make distclean

 

mrproper删除的文件，加上编辑备份文件和一些补丁文件。

 

3.       配置内核make menuconfig

 2.5  Linux内核配置选项

下面以最新的Linux 2.6.20内核为例，介绍比较常用的一些Linux内核配置选项，其他选项读者可以参考系统提供的帮助信息。

需要说明的是，在内核配置中，某项选择Y表示把该项选择进内核，选择M则表示把该项编译成模块，选择N则表示不选择进内核。在make menuconfig 下，*表示Y，M表示M，空白表示N。在make xconfig下，√表示Y，·表示M，空白表示N。如果某选项在配置菜单中是可选择的，这并不意味着目标系统就支持该功能，当然大部分供选择的选项是目标系统文持的；同样，配置菜单中没有的选项并不一定就表示目标系统不支持该功能，原因可能是该功能还未在目标系统上测试过，或者是维护人员未将该功能选项加入到各级系统配置文件的config.in中，具体可以查看内核的英文说明。

 2.5.1  General setup

General setup选项为常规安装选项，包括版本信息、虚拟内存、进程间通信、系统调用、审计支持等基本内核配置选项。下面介绍常规安装选项下主要子选项的配置方法。

1）Local version - append to kernel release

在内核后面加上自定义的版本字符串。这些字符在使用uname-a命令时会显示出来。要求字符最多不能超过64位。如果不清楚，则选择N。

2）Automatically append version information to the version string（LOCALVERSION_ AUTO）

自动生成版本信息。这个选项会自动探测内核并且生成相应的版本。在编译时需要有perl及git仓库的支持。在一般情况下，建议选择Y。

3）Support for paging of anonymous memory（swap）

使用交换分区或者交换文件来作为虚拟内存，也就是让计算机好像拥有比实际内存更多的内存空间用来执行很大的程序。Linux中的虚拟内存即SWAP分区，除非不需要SWAP分区，否则这里选择Y。

4）System V IPC（Inter Process Communication，IPC）

System V进程间通信（IPC）支持，许多程序需要这个功能，因此选择Y。中间过程连接是一组功能和系统调用，使得进程能够同步和交换信息。可以用info ipc命令来了解IPC的具体用法。

其中，IPC Namespaces （IPC_NS）子选项表示IPC命名空间，命名空间的作用是区别同名的设备。这个选项也是为不同的服务器提供IPC的多命名，达到一个IPC提供多对象支持的目的。如果不清楚，则选择N。

5）POSIX Message Queues

POSIX（可移植操作系统接口）消息队列是POSIX IPC中的一部分，在通信队列中有较高的优先权来保持通信畅通。如果需要编译和运行在Solaris操作系统上写的 POSIX信息队列程序，则选择Y。同时还需要 mqueue 库来支持这些特性。它是作为一个文件系统存在（mqueue），可以设置它。为保证以后的不同程序的协同稳定。如果不清楚，则选择N。

6）BSD Process Accounting

将进程的统计信息写入文件的用户级系统调用，信息通常包括建立时间、所有者、命令名称、内存使用、控制终端等。如果选择Y，则用户级别的程序就可以通过特殊的系统调用方式来通知内核把进程统计信息记录到一个文件中，当这个进程存在的时候，信息就会被内核记录进文件，这对用户级程序非常有用，所以通常选择Y。

其中，BSD Process Accounting version 3 file forma子选项表示使用新的第三版文件格式，通常选择Y。统计信息将会以新的格式（V3）写入，这格式包含进程ID和父进程。注意这个格式不兼容老版本（V0/V1/V2）的文件格式，所以需要升级相关工具来使用它。

7）Export task/process statistics through netlink（EXPERIMENTAL）

这是一个处于实验阶段的功能，表示通过netlink接口向用户空间导出任务、进程等统计信息，与BSD Process Accounting的不同之处在于这些数据在进程运行的时候就可以通过相关命令访问。如果不清楚，则选择N。

8）UTS Namespaces

UTS（通用终端系统）命名空间支持。它允许容器，比如Vservers利用UTS命名空间来为不同的服务器提供不同的UTS。如果不清楚，则选择N。

9）Auditing support

审计支持，某些内核模块（例如SELinux）需要它，只有同时选择其子项才能对系统调用进行审计。允许审计的下层能够被其他内核子系统使用，比如SELinux，它需要这个来进行登录时的声音和视频输出。没有CONFIG_AUDITSYSCALL时（即下一个选项）无法进行系统调用。

其中，Enable system-call auditing support (AUDITSYSCALL)子选项表示支持对系统调用的审计，允许系统独立地或者通过其他内核的子系统，调用审计支持，比如SELinux。要使用这种审计的文件系统来查看特性，请确保 INOTIFY 已经被设置。这两个选项，要选择Y就都选择，以便调用其他内核。

10）Kernel.config support

把内核的配置信息编译进内核中，以后可以通过scripts/extract-ikconfig脚本来提取这些信息。

这个选项允许.config文件（即编译Linux时的配置文件）编译进内核中。可以通过内核镜像文件kernel image file，用命令script scripts/extract-ikconfig来提取这些配置信息，作为当前内核重编译或者另一个内核编译的参考。如果内核在运行中，可以通过/proc/config.gz文件来读取。

其中Enable access to .config through/proc/config.gz子选项表示可以通过/proc/config.gz 访问当前内核的.config。这两个选项，要选择Y就都选择，以便调用其他内核。

11）Cpuset support

多CPU支持。这个选项可以建立和管理CPU集群，它可以动态地将系统分割在各个CPU和内存节点中，在各个节点是独立运行的，这对大型的系统尤其有效。一般只有在含有大量CPU（大于16个）的SMP系统或NUMA（非一致内存访问）系统才需要它。如果不清楚，则选择N。

12）Kernel->user space relay support（formerly relayfs）

内核系统区和用户区进行传递通信的支持。在某些文件系统上（比如debugfs）提供从内核空间向用户空间传递大量数据的接口。

这个选项在特定的文件系统中提供数据传递接口支持，它可以提供从内核空间到用户空间的大批量的数据传递工具和设施。如果不清楚，则选择N。

13）Initramfs source file(s)

initrd已经被initramfs取代，选N即可。

14）Optimize for size（Look out for broken compilers!）

这个选项将在GCC命令后用“-Os”代替“-O2”参数，编译时优化内核尺寸，以在编译时优化内核尺寸。

警告：某些GCC版本会产生错误的二进制代码。如果有错，请升级GCC。

这是优化内核大小的功能，一般没必要选。因为一个编译好的内核只有7～10MB，如果空间足够就不要冒出问题的风险来优化内核大小。

15）Configure standard kernel features（for small systems）

配置标准的内核特性（为小型系统）。这个选项可以让内核的基本选项和设置无效或者扭曲。这是用于特定环境中的，它允许“非标准”内核。它是为了编译某些特殊用途的内核使用的，例如引导盘系统。通常选这一选项，也不必关心其子选项。

 2.5.2  Loadable module support

Loadable module support即引导模块支持，该选项包括加载模块、卸载模块、模块校验、自动加载模块等引导模块配置相关子选项。本节主要介绍引导模块支持子选项的配置方法。

1）Enable loadable module support

打开可加载模块支持，如果打开它则必须通过make modules_install把内核模块安装在/lib/modules/中。模块是一小段代码，编译后可在系统内核运行时动态地加入内核，从而为内核增加一些特性或是对某种硬件进行支持。一般一些不常用到的驱动或特性可以编译为模块以减少内核的体积。在运行时可以使用modprobe命令来加载它到内核中去（在不需要时还可以移除它）。一些特性是否编译为模块的原则有不常使用的，或是在系统启动时不需要的驱动可以将其编译为模块，如果是一些在系统启动时就要用到的驱动，比如说文件系统，系统总线的支持就不要编为模块，否则无法启动系统。在启动时不用到的功能编成模块是最有效的方式。可以查看MAN手册来了解modprobe、lsmod、modinfo、insmod和rmmod。

如果选择了这项，则需要运行make modules_install命令来把模块添加到/lib/modules/目录下，以便 modprobe 可以找到它们。如果不清楚，则选择Y。

2）Module unloading

允许卸载已经加载的模块。如果选择N，将不能卸载任何模块（有些模块一旦加载就不能卸载，不管是否选择了这个选项）。如果不清楚，则选择Y。

其中，Forced module unloading子选项允许强制卸载正在使用中的模块，即使内核认为这不安全，内核也将会立即移除模块，而不管是否有人在使用它（用rmmod -f命令）。如果不清楚，则选择N。

3）Module versioning support（MODVERSIONS）

允许使用其他内核版本的模块。选这项会添加一些版本信息，来给编译的模块提供独立的特性，以使不同的内核在使用同一模块时区别于它原有的模块。如果不清楚，则选择N。

4）Source checksum for all modules

为所有的模块校验源码，如果不是自己编写内核模块就不需要它。这个功能是为了防止在编译模块时不小心更改了内核模块的源代码但忘记更改版本号而造成版本冲突。如果不清楚，则选择N。

5）Automatic kernel module loading

允许内核通过运行modprobe自动加载模块，比如可以自动解决模块的依赖关系。在一般情况下，如果我们的内核在某些任务中要使用一些被编译为模块的驱动或特性时，我们要先使用modprobe命令来加载它，内核才能使用。如果选择了这个选项，在内核需要一些模块时它可以自动调用modprobe命令来加载需要的模块。如果不清楚，则选择Y。

 2.5.3  Processor type and features

Processor type and features即处理器类型及特性，该模块包括处理器系列、内核抢占模式、抢占式大内核锁、内存模式、使用寄存器参数等处理器配置相关信息。本节介绍其中与嵌入式开发有关的主要子选项的配置方法。

1）Symmetric multi-processing support（SMP）

对称多处理器支持。将支持多个CPU的系统，此时Enhanced Real Time Clock Support选项必须开启，Advanced Power Management选项必须选择N。如果系统只有一个CPU，则选择N。反之，选择Y。如果选择N，内核将会在单个或者多个CPU的机器上运行，但是只会使用一个CPU。如果选择Y，内核可以在很多（但不是所有）单CPU的机器上运行，在这样的机器上选择N，会使内核运行得更快。如果不清楚，则选择N。

2）Processor family

处理器系列。针对嵌入式系统所使用的处理器类型，选取相应的选项。

3）Preemptible kernel

内核抢占模式。一些优先级很高的程序可以先让一些低优先级的程序执行，即使这些程序是在内核态下执行。从而减少内核潜伏期，提高系统的响应。当然在一些特殊的点的内核是不可抢占的，比如内核中的调度程序自身在执行时就是不可被抢占的。这个特性可以提高桌面系统、实时系统的性能。有下面3个选项。

n        No Forced Preemption（Server）：非强迫式抢占。这是传统的Linux抢占式模型，针对于高吞吐量设计。它同样在很多时候会提供很好的响应，但是也可能会有较长的延迟。如果是要建立服务器或者用于科学运算，或者要最大化内核的运算能力而不理会调度上的延迟，则选这项。

n        Voluntary Kernel Preemption（Desktop）：自动式内核抢占。这个选项通过向内核添加更多的“清晰抢占点”来减少内核延迟。这些新的抢占点以降低吞吐量为代价，来降低内核的最大延迟，提供更快的应用程序响应。这通过允许低优先级的进程自动抢占来响应事件，即使进程在内核中进行系统调用。这使得应用程序运行得更“流畅”，即使系统已经是高负荷运转。嵌入式系统里面通常选择N。

n        Preemptible Kernel（Low-Latency Desktop）：可抢占式内核（低延迟桌面）。这个选项通过使所有内核代码（非致命部分）编译为“可抢占”来降低内核延迟。通过允许低优先级进程进行强制抢占来响应事件，即使这些进程正在进行系统调用或者未达到正常的“抢占点”。这使得应用程序运行得更加“流畅”，即使系统已经是高负荷运转。代价是吞吐量降低，内核运行开销增大。嵌入式系统编译内核通常选择Y，这样只有很少的延迟。

其中，Preemptible Kernel子选项提供了最快的响应，适合对实时性要求较高的嵌入式系统。

4）Preempt The Big Kernel Lock

抢占式大内核锁。应用于实时要求高的场合，适合嵌入式系统。这个选项通过让大内核锁变成“可抢占”来降低延迟。构建实时性要求较高的嵌入式系统，通常选择N。

5）Machine Check Exception

机器例外检查。让CPU检测到系统故障时通知内核，以便内核采取相应的措施（如过热关机等）。内核根据问题的严重程度来决定下一步的行为，比如在命令行上打印警告信息或者关机。处理器必须是 Pentium或者更新版本才能支持这个功能。用cat /proc/cpuinfo来检测 CPU是否有mce 标志。

所以使用ARM处理器的嵌入式系统在这里选择N。

6）Memory model

内存模式。一般选Flat Memory（平坦内存模式），Sparse Memory（稀疏内存模式）选项涉及内存热插拔。

7）Use register arguments（REGPARM）

使用寄存器参数。使用-mregparm=3参数编译内核，将前3个参数以寄存器方式进行参数调用，这使 GCC使用更高效的应用程序二进制接口（ABI）来跳过编译时的前3个调用寄存器参数，可以生成更紧凑和高效的代码。如果选择N，这个选项默认的ABI将会使用。如果不清楚，则选择Y。

8）kexec system call（KEXEC）

kexec系统调用。使用此选项可以不必重启而切换到另一个内核。

kexec是一个用来选择N当前内核，然后开启另一个内核的系统调用。它和重启很像，但是它不访问系统固件。由于和重启很像，可以启动任何内核，不仅仅是Linux。kexec这个名字是从exec系统调用来的，它只是一个进程，可以确定硬件是否正确，所以这段代码可能不会正确地进行初始化工作。为慎重起见，在一般情况下，建议选择N。

 2.5.4  Networking support

Networking support即网络支持，该选项配置的是网络协议，内容庞杂，这里就不一一介绍了。只要对网络协议有所了解，应该可以看懂相关帮助文件。如果要开发嵌入式系统能像PC一样使用各类网络协议，则可以使用默认选项，其中，最常用的TCP/IP networking选项当然要选择。

 2.5.5  Device Drivers

Device Drivers即设备驱动，该选项包括内核所支持的各类硬件设备的配置信息。对于嵌入式系统来说，设备驱动配置选项是最重要的步骤之一，下面详细介绍它们。

1）Generic Driver Options

驱动程序通用选项。包括以下几个子选项。

n        Select only drivers that don't need compile-time external firmware：只显示不需要内核对外部设备的固件做map支持的驱动程序，除非有某些怪异硬件，否则要选择Y。

n        Prevent firmware from being built：不编译固件。固件一般是随硬件的驱动程序提供的，仅在更新固件的时候才需要重新编译。建议选择Y。

n        Userspace firmware loading support：提供某些内核之外的模块需要的用户空间固件加载支持，在内核树之外编译的模块可能需要它。如果不清楚，则选择N。

n        Driver Core verbose debug messages：让驱动程序内核在系统日志中产生冗长的调试信息，仅供调试使用。如果不清楚，则选择N。

2）Connector - unified userspace <-> kernelspace linker

统一的用户空间和内核空间连接器，工作在netlink socket协议的顶层。如果不确定，则选择N。

其中，Report process events to userspace子选项表示向用户空间报告进程事件。

3）Memory Technology Devices（MTD）

特殊的存储技术装置，如常用于数码相机或嵌入式系统的闪存卡。如果不清楚，则选择N。

4）Parallel port support

并口支持（传统的打印机接口）。如果不清楚，则选择N。

5）Plug and Play support

支持即插即用，若未选，则应当在BIOS中的“PnP OS”选择N。这里的选项与PCI设备无关。包括以下几个子选项。

n        PnP Debug Messages：该选项仅供调试使用。

n        ISA Plug and Play support：ISA设备支持即插即用。如果不清楚，则选择N。

n        Plug and Play BIOS support：Linux使用Plug and Play BIOS规范v1.0A（1994年）中定义的PnPBIOS自动检测主板上的资源和设备，但是其中的某些特性目前尚未实现，比如，事件通知/扩展坞（Docking Station）信息/ISAPnP服务。如果希望由内核检测主板上的设备并为其分配资源（此时BIOS中的“PnP OS”必须开启）可以选择Y。此外，PnPBIOS还有助于防止主板上的设备与其他总线设备冲突。不过需要注意的是ACPI将会逐渐取代 PnPBIOS（虽然目前两者可以共存），所以如果系统不使用ISA设备并且支持ACPI，建议不要选择Y。将BIOS中的“PnP OS”选择N。

n        Plug and Play BIOS/proc interface：该选项仅供调试使用。如果不清楚，则选择N。

n        Plug and Play ACPI support：让Linux使用PnPACPI自动检测主板上内建的设备并为其分配资源（即使这些设备已被BIOS禁用），它有助于避免设备之间的资源（如中断）冲突。如果不清楚，则选择N。

6）Block devices

块设备。包括以下几个子选项。

n        normal floppy disk support：通用软驱支持。如果嵌入式系统采用这种设备，则选择Y。

n        XT hard disk support：一种老式产品。如果嵌入式系统采用这种设备，则选择Y。

n        Parallel port IDE device support：通过并口与计算机连接的IDE设备。如果嵌入式系统采用这种设备，则选择Y。

n        Compaq SMART2 support：基于Compaq SMART2控制器的磁盘阵列卡。如果嵌入式系统采用这种设备，则选择Y。

n        Compaq Smart Array 5xxx support：基于Compaq SMART控制器的磁盘阵列卡。如果嵌入式系统采用这种设备，则选择Y。

n        Mylex DAC960/DAC1100 PCI RAID Controller support：一种老式产品。如果嵌入式系统采用这种设备，则选择Y。

n        Micro Memory MM5415 Battery Backed RAM support：一种使用电池做后备电源的内存。如果嵌入式系统采用这种设备，则选择Y。

n        Loopback device support：Loopback是指拿文件来模拟块设备，比如可以将一个iso9660镜像文件挂成一个文件系统。如果嵌入式系统采用这种设备，则选择Y。

n        Cryptoloop Support：使用系统提供的加密API对Loopback设备加密，但不能用于日志型文件系统。如果嵌入式系统采用这种设备，则选择Y。

n        Network block device support：让系统成为网络块设备的客户端。如果不清楚，则选择N。

n        Promise SATA SX8 support：基于Promise公司的SATA SX8控制器的RAID卡。如果嵌入式系统采用这种设备，则选择Y。

n        Low Performance USB Block driver：该选项并非表示支持U盘。一般情况下，建议选择N。

n        RAM disk support：内存中的虚拟磁盘，大小固定（由下面的选项决定，也可给内核传递ramdisk_size＝参数来决定），它的功能和代码都比shmem简单许多。如果嵌入式系统采用RAM disk，则选择Y。

n        Default number of RAM disks：默认RAM disk的数量。一般不必修改。

n        Default RAM disk size（kbytes）：默认RAM disk容量。一般不必修改。

n        Default RAM disk block size（bytes）：每一个RAM disk的默认块大小，设为PAGE_SIZE的值时效率最高。

n        Initial RAM filesystem and RAM disk（initramfs/initrd）support：如果启动系统所必须的模块都在内核里，则选择Y。

n        Packet writing on CD/DVD media：CD/DVD刻录支持。如果嵌入式系统采用这种设备，则选择Y。

n        Free buffers for data gathering：用于收集写入数据的缓冲区个数（每个占用64KB内存），在内存运行的情况下，缓冲区越多性能越好。

n        Enable write caching：为CD－R/W设备启用写入缓冲。由于安全性问题，在一般情况下，建议选择Y。

n        ATA over Ethernet support：以太网ATA设备支持。如果嵌入式系统采用这种设备，则选择Y。

7）Misc devices

杂项设备。如果不清楚，则选择N。

8）ATA/ATAPI/MFM/RLL support

SCSI设备通常是IDE硬盘和ATAPI光驱。纯SCSI系统且不使用这些接口可以选择N。

9）SCSI device support

SCSI设备。如果不清楚，则选择N。

10）Serial ATA and Parallel ATA drivers

SATA与PATA设备。如果不清楚，则选择N。

11）Old CD-ROM drivers（not SCSI，not IDE）

老旧的CD-ROM驱动，这种CD-ROM既不使用SCSI接口，也不使用IDE接口。如果不清楚，则选择N。

12）Multi-device support（RAID and LVM）

多设备支持（RAID和LVM）。RAID和LVM的功能是使多个物理设备组建成一个单独的逻辑磁盘。如果不清楚，则选择N。

13）Fusion MPT device support

Fusion MPT设备支持。如果不清楚，则选择N。

14）IEEE 1394（FireWire）support

IEEE 1394（火线）。如果不清楚，则选择N。

15）I2O device support

I2O（智能I/O）设备使用专门的I/O处理器负责中断处理、缓冲存取、数据传输等烦琐任务以减少CPU占用，一般PC的主板上没有。如果不清楚，则选择N。

16）Network device support

网络设备。包含以下子选项。

n        Network device support：网络设备支持，如果要开发的嵌入式系统需要上网，则选择Y。

n        Intermediate Functional Block support：这是一个中间层驱动，可以用来灵活的配置资源共享。如果不清楚，则选择N。

n        Dummy net driver support：哑接口网络，使用SLIP或PPP传输协议（如ADSL用户）的需要它。如果不清楚，则选择N。

n        Bonding driver support：将多个以太网通道绑定为一个，也就是两块网卡具有相同的IP地址并且聚合成一个逻辑链路工作，可以用来实现负载均衡或硬件冗余。如果不清楚，则选择N。

n        EQL（serial line load balancing）support：串行线路的负载均衡。如果有两个MODEM和两条电话线而且用SLIP或PPP协议，该选项可以让你同时使用这两个 MODEM以达到双倍速度（在网络的另一端也要有同样的设备）。如果不清楚，则选择N。

n        Universal TUN/TAP device driver support：TUN/TAP可以为用户空间提供包的接收和发送服务，比如可以用来虚拟一张网卡或点对点通道。如果不清楚，则选择N。

n        General Instruments Surfboard 1000：Surfboard 1000插卡式Cable Medem（ISA接口），一种老式产品。如果不清楚，则选择N。

n        ARCnet devices：一般人没有ARCnet类型的网卡。如果不清楚，则选择N。

n        PHY device support：数据链路层芯片简称为MAC控制器，物理层芯片简称为PHY，通常的网卡把MAC和PHY的功能做到了一颗芯片中，但也有一些仅含PHY的“软网卡”。如果不清楚，则选择N。

n        Ethernet（10/100Mbit）：目前最广泛的10/100MB网卡。如果不清楚，则选择N。

n        Ethernet（1000 Mbit）：目前已成装机主流的1000MB网卡。如果不清楚，则选择N。

n        Ethernet（10000 Mbit）：高速（万兆）网卡。如果不清楚，则选择N。

n        Token Ring devices：令牌环网设备。如果不清楚，则选择N。

n        Wireless LAN（non-hamradio）：无线LAN。如果不清楚，则选择N。

n        PCMCIA network device support：PCMCIA或CardBus网卡。如果不清楚，则选择N。

n        WAN interfaces：WAN接口。如果不清楚，则选择N。

n        ATM drivers：异步传输模式。如果不清楚，则选择N。

n        FDDI driver support：光纤分布式数据接口。如果不清楚，则选择N。

n        HIPPI driver support：HIPPI（高性能并行接口）是一个在短距离内高速传送大量数据的点对点协议。如果不清楚，则选择N。

n        PLIP（parallel port）support：将并口映射成网络设备，这样两台机器即使没有网卡也可以使用并口通过并行线传输IP数据包。如果不清楚，则选择N。

n        PPP（point-to-point protocol）support：点对点协议，PPP已经基本取代SLIP了，若使用ADSL则要选择Y。如果不清楚，则选择N。

n        PPP multilink support：多重链路协议（RFC1990）允许将多个线路（物理的或逻辑的）组合为一个PPP连接以充分利用带宽，这不但需要pppd的支持，还需要ISP的支持。如果不清楚，则选择N。

n        PPP filtering：允许对通过PPP接口的包进行过滤。如果不清楚，则选择N。

n        PPP support for async serial ports：通过标准异步串口（COM1，COM2）使用PPP，比如使用老式的外置MODEM（非同步MODEM或ISDN MODEM）上网。如果不清楚，则选择N。

n        PPP support for sync tty ports：通过同步tty设备（比如SyncLink适配器）使用PPP，常用于高速租用线路（比如T1/E1）。如果不清楚，则选择N。

n        PPP Deflate compression：为PPP提供Deflate（等价于gzip压缩算法）压缩算法支持，需要通信双方的支持才有效。如果不清楚，则选择N。

n        PPP BSD-Compress compression：为PPP提供BSD（等价于LZW压缩算法，没有gzip高效）压缩算法支持，需要通信双方的支持才有效。如果不清楚，则选择N。

n        PPP MPPE compression（encryption）：为PPP提供MPPE加密协议支持，它被用于微软的P2P隧道协议中。如果不清楚，则选择N。

n        PPP over Ethernet：这就是ADSL用户最常见的PPPoE，也就是在以太网上运行的PPP协议。如果不清楚，则选择N。

n        PPP over ATM：在ATM上运行的PPP。如果不清楚，则选择N。

n        SLIP（serial line）support：一个在串行线上（例如电话线）传输IP数据报的TCP/IP协议。小猫一族的通信协议，与宽带用户无关。如果不清楚，则选择N。

n        CSLIP compressed headers：CSLIP协议比SLIP快，它将TCP/IP头（而非数据）进行压缩传送，需要通信双方的支持才有效。如果不清楚，则选择N。

n        Keepalive and linefill：让SLIP驱动支持RELCOM linefill和keepalive监视，这在信号质量比较差的模拟线路上是个好主意。如果不清楚，则选择N。

n        Six bit SLIP encapsulation：这种线路非常罕见，在一般情况下，建议选择N。

n        Fibre Channel driver support：光纤通道。如果不清楚，则选择N。

n        Traffic Shaper：流量整形，已废弃。在一般情况下，建议选择N。

n        Network console logging support：通过网络记录内核信息。如果不清楚，则选择N。

n        Netpoll support for trapping incoming packets：在一般情况下，建议选择N。

n        Netpoll traffic trapping：在一般情况下，建议选择N。

17）ISDN subsystem

综合业务数字网（Integrated Service Digital Network）。如果不清楚，则选择N。

18）Telephony Support

VoIP支持。如果不清楚，则选择N。

19）Input device support

输入设备。包括以下子选项。

n        Generic input layer（needed for keyboard，mouse）：通用输入层，如果是使用键盘鼠标的，则选择Y。如果不清楚，则选择N。

n        Support for memoryless force-feedback devices：游戏玩家使用的力反馈设备。如果不清楚，则选择N。

n        Mouse interface：鼠标接口。如果不清楚，则选择N。

n        Provide legacy/dev/psaux device：仍然支持作为传统的/dev/psaux设备。如果不清楚，则选择N。

n        Horizontal screen resolution：数字化转换器或图形输入板的水平分辨率。如果不清楚，则选择N。

n        Vertical screen resolution：数字化转换器或图形输入板的垂直分辨率。如果不清楚，则选择N。

n        Joystick interface：游戏杆。如果不使用，则选择N。

n        Touchscreen interface：触摸屏。如果不使用，则选择N。

n        Event interface：能够利用/dev/input/eventX来存取输入设备的事件。如果不清楚，则选择N。

n        Event debugging：该选项仅供调试使用。如果不清楚，则选择N。

n        Keyboards：键盘驱动，一般选个AT键盘即可。如果不清楚，则选择N。

n        Mouse：鼠标驱动，一般选个PS/2鼠标即可。如果不清楚，则选择N。

n        Joysticks：游戏杆驱动。如果不使用，则选择N。

n        Touchscreens：触摸屏驱动。如果不使用，则选择N。

n        Miscellaneous devices：其他杂项驱动，一般选个PC喇叭即可。如果不清楚，则选择N。

n        Hardware I/O ports：硬件I/O端口。如果不清楚，则选择N。

n        Serial I/O support：使用PS/2键盘或鼠标，则选择Y。如果不使用，则选择N。

n        i8042 PC Keyboard controller：PS/2接口的键盘和鼠标。如果不使用，则选择N。

n        Serial port line discipline：串口键盘或鼠标。如果不使用，则选择N。

n        ct82c710 Aux port controller：一种德州仪器TravelMate笔记本上使用QuickPort接口的鼠标。如果不使用，则选择N。

n        Parallel port keyboard adapter：并口键盘或鼠标。如果不使用，则选择N。

n        PCI PS/2 keyboard and PS/2 mouse controller：接在移动式扩展坞（Docking station）上的键盘或鼠标。如果不使用，则选择N。

n        PS/2 driver library：为PS/2接口上的设备提供驱动（比如PS/2鼠标或标准AT键盘）。如果不使用，则选择N。

n        Raw access to serio ports：在一般情况下，建议选择N。

n        Gameport support：类似早年“小霸王”游戏机上的那种手柄。如果不使用，则选择N。

20）Character devices

字符设备。包含以下子选项。

n        Virtual terminal：虚拟终端。嵌入式系统在一般情况下，建议选择N。

n        Support for console on virtual terminal：内核将一个虚拟终端用做系统控制台（将诸如模块错误、内核错误、启动信息之类的警告信息发送到这里，通常是第一个虚拟终端）。嵌入式系统在一般情况下，建议选择N。

n        Support for binding and unbinding console drivers：虚拟终端是通过控制台驱动程序与物理终端相结合的，但在某些系统上可以使用多个控制台驱动程序（如framebuffer控制台驱动程序），
		该选项使得可以选择其中之一。如果不清楚，则选择N。

n        Non-standard serial port support：非标准串口支持。这样的设备已废弃不用。在一般情况下，建议选择N。

n        Serial drivers：串口驱动。如果有老式的串口鼠标或小猫，则选择Y。否则选择N。

n        Unix98 PTY support：伪终端（PTY）可以模拟一个终端，它由slave（等价于一个物理终端）和master（被一个诸如xterms之类的进程用来读写 slave设备）两部分组成的软设备。如果使用telnet或ssh远程登录者，则选择Y。如果不清楚，则选择N。

n        Legacy（BSD）PTY support：使用过时的BSD风格的/dev/ptyxx作为master，/dev/ttyxx作为slave。这个方案有一些安全问题，建议选择N。

n        Parallel printer support：并口打印机。如果不使用，则选择N。

n        Support for console on line printer：允许将内核信息输出到并口，这样就可以打印出来。如果不清楚，则选择N。

n        Support for user-space parallel port device drivers：/dev/parport设备支持，比如deviceid之类的程序需要使用它。在一般情况下，建议选择N。

n        Texas Instruments parallel link cable support：德州仪器生产的一种使用并行电缆的图形计算器。如果不清楚，则选择N。

n        IPMI：可以利用IPMI远程监视服务器的物理特征（温度、电压、风扇、电源、机箱入侵），它是独立于CPU、BIOS、OS的，只要接通电源就可以实现对服务器的监控。如果不清楚，则选择N。

n        IPMI top-level message handler：IPMI消息处理器，要启用IPMI远程监视，则选择Y。如果不清楚，则选择N。

n        Generate a panic event to all BMCs on a panic：当发生紧急情况（panic）时，IPMI消息处理器将会向每一个已注册的底板管理控制器（BMC）接口生成一个描述该panic的IPMI 事件，这些事件可以引发日志记录、报警、重启、关机等动作。如果不清楚，则选择N。

n        Generate OEM events containing the panic string：当发生紧急情况（panic）时，IPMI消息处理器将会产生OEM类型的事件。如果不清楚，则选择N。

n        Device interface for IPMI：为IPMI消息处理器提供一个IOCTL接口，以便用户空间的进程也可以使用IPMI。如果不清楚，则选择N。

n        IPMI System Interface handler：向系统提供接口（KCS、SMIC），一般用了IPMI就需要选择Y。如果不清楚，则选择N。

n        IPMI WatchDog Timer：启用IPMI WatchDog定时器。如果不清楚，则选择N。

n        IPMI Poweroff：允许IPMI消息处理器选择N。如果不清楚，则选择N。

n        WatchDog Cards：能让系统在出现致命故障后自动重启，如果没有硬件WatchDog，建议使用Hangcheck timer而不是软件WatchDog。如果不清楚，则选择N。

n        Watchdog Timer Support：选择Y。下面的一个Driver之后，再创建一个/dev/ watchDog节点即可拥有一只WatchDog了。更多信息请参考内核帮助。如果不清楚，则选择N。

n        Disable watchDog shutdown on close：一旦WatchDog启动后就禁止将其停止。如果不清楚，则选择N。

n        Software watchDog：软件WatchDog，使用它不需要有任何硬件的支持，但是可靠性没有硬件WatchDog高。如果不清楚，则选择N。

n        Hardware Random Number Generator Core support：硬件随机数发生器内核支持。如果不清楚，则选择N。

n        Intel HW Random Number Generator support：Intel芯片组的硬件随机数发生器。如果不清楚，则选择N。

n        AMD HW Random Number Generator support：AMD芯片组的硬件随机数发生器。如果不清楚，则选择N。

n        AMD Geode HW Random Number Generator support：AMD Geode LX的硬件随机数发生器。如果不清楚，则选择N。

n        VIA HW Random Number Generator support：VIA芯片组的硬件随机数发生器。如果不清楚，则选择N。

n        /dev/nvram support：直接存取主板上CMOS的接口。可能发生安全性问题，建议选择N。

n        Enhanced Real Time Clock Support：启用该选项并创建/dev/RTC文件后就可以通过/proc/driver/RTC访问系统的硬件时钟（RTC），众多功能依赖于它（如SMP、IRQ共享、定时器）。在一般情况下，建议选择Y。

n        Double Talk PC internal speech card support：由RC Systems公司制造的一种语音合成器。如果不清楚，则选择N。

n        Siemens R3964 line discipline：与使用西门子R3964协议的设备同步通信。除非有一些诸如PLC之类的特殊设备，否则在一般情况下，建议选择N。

n        Applicom intelligent fieldbus card support：Applicom international公司生产的用于现场总线连接卡。如果不清楚，则选择N。

n        Sony Vaio Programmable I/O Control Device support：Sony VAIO笔记本上的设备。如果不清楚，则选择N。

n        Ftape，the floppy tape device driver：针对使用磁带的系统。如果不清楚，则选择N。

n        /dev/agpgart（AGP Support）：AGP总线支持，有AGP显卡的还必须从子项中选取符合嵌入式系统所使用显卡型号的驱动。如果不清楚，则选择N。

n        Direct Rendering Manager：DRI允许应用程序以高效安全的方式直接访问图形处理，主要用于硬件3D加速。建议桌面用户选择此方式，同时还必须从子项中选取符合嵌入式系统所使用显卡型号的驱动。如果不清楚，则选择N。

n        PCMCIA character devices：使用PCMCIA接口的字符设备。如果不清楚，则选择N。

n        ACP Modem（Mwave）support：IBM Thinkpad上的一种软猫，一种老式产品。如果不清楚，则选择N。

n        NatSemi SCx200 GPIO Support：松下的一种通用输入、输出（GPIO）芯片。嵌入式系统一般选择Y。

n        NatSemi PC8736x GPIO Support：松下的一种通用输入、输出（GPIO）芯片。嵌入式系统一般选择Y。

n        NatSemi Base GPIO Support：松下的一种通用输入、输出（GPIO）芯片。嵌入式系统一般选择Y。

n        AMD CS5535/CS5536 GPIO：常用于AMD Geode的一种通用输入、输出（GPIO）芯片。嵌入式系统一般选择Y。

n        RAW driver（/dev/raw/rawN）：一种老式设备，已废弃。在一般情况下，建议选择N。

n        HPET－High Precision Event Timer：高精度事件定时器。如果不清楚，则选择N。

n        Allow mmap of HPET：允许对HPET寄存器进行映射。在一般情况下，建议选择Y。

n        Hangcheck timer：宕机检测定时器周期性地检查系统任务调度程序，以确定系统的运行状况，如果超过阈值，计算机将重新启动。它通常可以比WatchDog更好地解决可用性和可靠性问题。如果不清楚，则选择N。

n        TPM devices：基于硬件的“可信赖平台模块”。在一般情况下，建议选择N。

n        Telecom clock driver for MPBL0010 ATCA SBC：在一般情况下，建议选择N。

21）I2C support

I2C是Philips极力推动的微控制应用中使用的低速串行总线协议，可用于监控电压、风扇转速、温度等。SMBus（系统管理总线）是I2C的子集。除硬件传感器外，Video For Linux也需要该模块的支持。包含以下子选项。

n        I2C device interface：I2C设备接口，允许用户空间的程序通过/dev/i2c-*设备文件使用I2C总线。如果不清楚，则选择N。

n        I2C Algorithms：I2C算法支持，可以全选择N。若有其他部分依赖其子项时，建议选择Y。

n        I2C Hardware Bus support：按实际硬件情况选对应的子项即可。

n        Miscellaneous I2C Chip support：其他不常见的产品，按需求选择。如果不清楚，则选择N。

n        I2C Core debugging messages：仅供调试使用。如果不清楚，则选择N。

n        I2C Algorithm debugging messages：仅供调试使用。如果不清楚，则选择N。

n        I2C Bus debugging messages：仅供调试使用。如果不清楚，则选择N。

n        I2C Chip debugging messages：仅供调试使用。如果不清楚，则选择N。

22）SPI support

串行外围接口（SPI）常用于微控制器（MCU）与外围设备（传感器、EEprom、Flash、编码器、模数转换器）之间的通信，比如MMC和SD卡就通常需要使用SPI。

23）Dallas's 1-wire bus

一线总线。如果不清楚，则选择N。

24）Hardware Monitoring support

当前主板大多都有一个监控硬件健康的设备用于监视温度、电压、风扇转速等，请按照嵌入式系统所使用主板实际使用的芯片选择相应的子项。另外，该功能还需要I2C的支持。如果不清楚，则选择N。

25）Multimedia devices

多媒体设备。包括以下子选项。

n        Video For Linux：如果是使用音频/视频设备或FM收音卡的则选择Y。此功能还需要I2C的支持。如果不清楚，则选择N。

n        Enable Video For Linux API 1：使用老旧的V4L第一版API。在一般情况下，建议选择N。

n        Enable Video For Linux API 1 compatible Layer：提供对第一版V4L的兼容。在一般情况下，建议选择N。

n        Video Capture Adapters：视频捕获卡。如果不清楚，则选择N。

n        Enable advanced debug functionality：该选项仅供调试使用。如果不清楚，则选择N。

n        Autoselect pertinent encoders/decoders and other helper chips：为视频卡自动选择所需的编码和解码模块。在一般情况下，建议选择Y。

n        Virtual Video Driver：虚拟视频卡，仅供测试视频程序和调试。如果不清楚，则选择N。

n        SAA5246A，SAA5281 Teletext processor：该选项仅面向欧洲用户，中国用户一般选择N。

n        SAA5249 Teletext processor：该选项仅面向欧洲用户，中国用户一般选择N。

n        V4L USB devices：使用USB接口的视频卡，子选项请根据嵌入式系统实际使用的视频卡选择。

n        Radio Adapters：音频卡，子选项请根据嵌入式系统实际使用的音频卡选择。

n        Digital Video Broadcasting Devices：数字视频广播设备（DVB卡或机顶盒），子选项请根据嵌入式系统实际使用的硬件选择

n        DABUSB driver：USB接口的数字音频广播设备接收器。如果不清楚，则选择N。

26）Graphics support

图形设备/显卡支持。包括以下子选项。

n        Enable firmware EDID：允许访问Video BIOS中的扩展显示器识别数据（EDID）。如果不清楚，则选择N。

n        Support for frame buffer devices：帧缓冲设备是为了让应用程序使用统一的接口操作显示设备而对硬件进行的抽象。如果不清楚，则选择N。

n        Enable Video Mode Handling Helpers：使用GTF和EDID来帮助处理显示模式，可以选择N。若有其他选项依赖于它时，则会自动选择Y。

n        Enable Tile Blitting Support：可以选择N。若有其他选项依赖于它时，会自动选择Y。

n        VGA 16－color graphics support：16色VGA显卡。如果有这样一种老式设备，则选择Y。

n        VESA VGA graphics support：符合VESA 2.0标准的显卡的通用驱动，如果显卡芯片在下面能够找到就可以选择N。

n        Virtual Frame Buffer support：仅供调试使用。

n        Console display driver support：控制台显示驱动。如果不清楚，则选择N。

n        VGA text console：文本控制台。如果不清楚，则选择N。

n        Enable Scrollback Buffer in System RAM：在内存中开辟额外的屏幕缓冲区，这将允许回滚屏幕。如果不清楚，则选择N。

n        Scrollback Buffer Size（in KB）：在内存中开辟的额外屏幕缓冲区大小。如果不清楚，则选择N。

n        Video mode selection support：允许在内核启动时使用vga＝选择文本模式，如果希望一行能够显示更多字符的话可以打开它。如果不清楚，则选择N。

n        MDA text console（dual-headed）：如果有老式的单色显卡并且作为第二块显卡使用以实现双头显示，则选择Y。如果不清楚，则选择N。

n        Framebuffer Console support：基于Framebuffer的控制台驱动，服务器可以选择N。

n        Framebuffer Console Rotation：显示画面旋转，它可能大大降低显示速度，建议选择N。

n        Select compiled-in fonts：选择内建字体。如果不清楚，则选择N。

n        VGA 8x8 font：高分辨率下的小字体。如果不清楚，则选择N。

n        VGA 8x16 font：低分辨率下的大字体。如果不清楚，则选择N。

n        Logo configuration：启动时显示Linux的logo（一幅企鹅图像），喜欢炫一下的则选择Y。

n        Backlight＆LCD device support：LCD显示器支持。如果不清楚，则选择N。

27）Sound

声卡。包括以下子选项。

n        Advanced Linux Sound Architecture：使用声卡者选择Y。

n        Sequencer support：音序器支持（MIDI必需），除非确定不需要，否则请选择Y。

n        Sequencer dummy client：除非要同时连接到多个MIDI设备或应用程序，否则一般选择N。

n        OSS Mixer API：OSS混音器API仿真，许多程序目前仍然需要使用它。在一般情况下，建议选择Y。

n        OSS PCM（digital audio）API：OSS数字录音（PCM）API模拟，许多程序目前仍然需要使用它。在一般情况下，建议选择Y。

n        OSS PCM（digital audio）API-Include plugin system：在一般情况下，建议选择N。

n        OSS Sequencer API：OSS音序器支持，许多程序目前仍然需要使用它。在一般情况下，建议选择Y。

n        RTC Timer support：为ALSA启用RTC定时器支持。在一般情况下，建议选择Y。

n        Use RTC as default sequencer timer：将RTC当做默认的时序脉冲发生器。如果不清楚，则选择N。

n        Dynamic device file minor numbers：仅供拥有多个声卡的用户选择。如果不清楚，则选择N。

n        Support old ALSA API：支持已被废弃的老版本ALSA API。如果不清楚，则选择N。

n        Verbose procfs contents：仅供调试使用。

n        Verbose printk：仅供调试使用。

n        Debug：仅供调试使用。

n        Generic devices：通用设备。如果不清楚，则选择N。

n        Dummy（/dev/null）soundcard：仅供调试使用。

n        Virtual MIDI soundcard：虚拟MIDI驱动，允许将使用原始MIDI设备的应用程序连接到音序器客户端。如果不清楚，则选择N。

n        PCI devices：PCI接口的声卡，请按实际使用的声卡选择子项。

n        USB devices：USB接口的声卡，请按实际使用的声卡选择子项。

n        PCMCIA devices：PCMCIA接口的声卡，请按实际使用的声卡选择子项。

n        Open Sound System：在一般情况下，建议选择N。

28）USB support

USB支持。包括以下子选项。

n        Support for Host-side USB：主机端（Host-side）USB支持。通用串行总线（USB）是一个串行总线子系统规范，它比传统的串口速度更快并且特性更丰富（供电、热插拔，最多可接127个设备等），有望在将来统一PC外设接口。USB的“Host”（主机）被称为“根”（也可以理解为是主板上的USB控制器），外部设备被称为“叶子”，而内部的节点则称为HUB（集线器）。基本上只要想使用任何USB设备都必须选择此项。另外，还需要从下面选择Y。至少一个Host Controller Driver（HCD），比如适用于USB 1.1的UHCI HCD support或OHCI HCD support，适用于USB 2.0的EHCI HCD（USB 2.0）support。如果拿不准的话把他们全部选择Y，一般也不会出问题。如果系统有设备端的USB接口（也就是系统可以作为叶子使用），请到USB Gadget中进行选择。

n        USB verbose debug messages：仅供调试使用。

n        USB device filesystem：在/proc/bus/USB里列出当前连接的USB设备（mount-t USBfs none/proc/bus/USB），这样用户空间的程序就可以直接访问这些USB设备。如果要使用USB设备的话就必须选择Y。

n        Enforce USB bandwidth allocation：执行USB带宽分配限制，禁止打开占用USB总线带宽超过90％的设备，选择N可能会导致某些设备无法正常工作。

n        Dynamic USB minor allocation：除非有超过16个同类型的USB设备，否则选择N。

n        USB selective suspend/resume and wakeup：USB设备的挂起和恢复。在一般情况下，建议选择N。

n        EHCI HCD（USB 2.0）support：USB 2.0支持（大多数2002年以后的主板都支持）。如果此项选择Y，一般来说OHCI或UHCI驱动选项同时需要也选择Y。

n        Full speed ISO transactions：由于USB 2.0支持低速（1.5Mbps）、全速（12Mbps）、高速（480Mbps）3种规格的外部设备，为了将全/低速设备对高速设备可用带宽的影响减到最小，在USB 2.0集线器中提供了一种事务转换（Transaction Translator）机制，该机制支持在HUB连接的是全/低速设备的情况下，允许主控制器与HUB之间以高速传输所有设备的数据，从而节省不必要的等待。如果没有外置的USB集线器可以选择N。

n        Root Hub Transaction Translators：带有USB 2.0接口的主板上都有一个根集线器（Root Hub），以允许在无须额外购买HUB的情况下就可以提供多个USB插口，其中的某些产品还在其中集成了事务转换（Transaction Translator）功能，这样就不需要再额外使用一个兼容OHCI或UHCI的控制器来兼容USB 1.1，即使不太清楚嵌入式系统所使用主板上的根集线器是否集成了事务转换功能，也可以安全地选择此项。

n        Improved Transaction Translator scheduling：如果有一个高速USB 2.0 HUB并且某些接在这个HUB上的低速或全速设备不能正常工作（显示'cannot submit datapipe: error-28'或'error-71'错误），可以考虑选择Y。

n        ISP116X HCD support：ISP1160/ISP1161主机USB控制器，是符合USB 2.0全速规范的单片主机控制器和设备控制器，支持OHCI标准。

n        OHCI HCD support：开放主机控制接口（OHCI）是主要针对嵌入式系统的USB 1.1主机控制器规范。如果不清楚，则选择N。

n        UHCI HCD（most Intel and VIA）support：通用主机控制器接口（UHCI）是主要针对PC的USB 1.1主机控制器规范。另外，EHCI也可能需要它。如果不清楚，则选择N。

n        Elan U132 Adapter Host Controller：如果嵌入式系统采用这种设备，则选择Y。

n        SL811HS HCD support：如果嵌入式系统采用这种设备，则选择Y。

n        USB Bluetooth TTY support：USB蓝牙TTY设备支持。如果嵌入式系统采用这种设备，则选择Y。

n        USB MIDI support：USB MIDI设备支持。如果嵌入式系统采用这种设备，则选择Y。

n        USB MODEM（CDC ACM）support：USB接口的猫或ISDN适配器。如果嵌入式系统采用这种设备，则选择Y。

n        USB Printer support：USB打印机。如果嵌入式系统采用这种设备，则选择Y。

n        USB Mass Storage support：USB存储设备（优盘、USB硬盘、USB软盘、USB CD-ROM、USB磁带、memory sticks、数码相机、读卡器等）。该选项依赖于SCSI device support，且大部分情况下还依赖于SCSI disk support（比如优盘或USB硬盘）。如果嵌入式系统采用这种设备，则选择Y。

n        USB Mass Storage verbose debug：仅供调试使用。

n        The shared table of common（或usual）storage devices：该模块包含一张记录了常用USB存储设备及其驱动的表格，这样无须重新编译模块即可在切换这些设备时自动邦定对应的驱动（还需要对 /etc/modprobe。conf进行相应的设置）。如果不清楚，则选择N。

n        USB Human Interface Device（full HID）support：USB人机界面设备（鼠标、键盘、游戏杆、手写板等操作计算机的设备），该驱动不能和USB HID Boot Protocol drivers同时使用。如果不清楚，则选择N。

n        HID input layer support：如果有USB接口的鼠标、键盘、游戏杆、手写板等输入设备，则选择Y。

n        Enable support for iBook/PowerBook special keys：苹果iBooks/PowerBooks键盘上的Fn/Numlock等功能键支持。如果不清楚，则选择N。

n        Force feedback support：力反馈设备。如果不清楚，则选择N。

n        /dev/hiddev raw HID device support：如果有USB监控装置或不间断电源（UPS）之类的非输入设备就选择Y。

n        USB HID Boot Protocol drivers：如果有绝对的把握确信不为嵌入式系统所使用的键盘和鼠标使用通常的HID驱动，而要使用Boot Protocol模式的HID驱动（常见于嵌入式环境），则选择Y。

n        Aiptek 6000U/8000U tablet support：一种手写板。如果嵌入式系统采用这种设备，则选择Y。

n        Wacom Intuos/Graphire tablet support：一种手写/绘图板。如果嵌入式系统采用这种设备，则选择Y。

n        Acecad Flair tablet support：一种数控绘图板。如果嵌入式系统采用这种设备，则选择Y。

n        KB Gear JamStudio tablet support：一种手写/绘图板。如果嵌入式系统采用这种设备，则选择Y。

n        Griffin PowerMate and Contour Jog support：一种具有调节音量、滚动文本、视频快进/快退等功能的产品。如果嵌入式系统采用这种设备，则选择Y。

n        USB Touchscreen Driver：USB触摸屏驱动。如果嵌入式系统采用USB触摸屏硬件，则选择Y。

n        Yealink USB-p1k voip phone：一种VoIP电话。如果嵌入式系统采用这种设备，则选择Y。

n        X-Box gamepad support：X-Box游戏板。如果嵌入式系统采用这种设备，则选择Y。

n        ATI/X10 USB RF remote control：一种USB远程控制设备。如果嵌入式系统采用这种设备，则选择Y。

n        ATI/Philips USB RF remote control：一种USB远程控制设备。如果嵌入式系统采用这种设备，则选择Y。

n        Keyspan DMR USB remote control：一种USB远程控制设备。如果嵌入式系统采用这种设备，则选择Y。

n        Apple USB Touchpad support：苹果机上的触摸板。如果嵌入式系统采用这种设备，则选择Y。

n        USB Mustek MDC800 Digital Camera support：一种数码相机。如果嵌入式系统采用这种设备，则选择Y。

n        Microtek X6USB scanner support：一种扫描仪。如果嵌入式系统采用这种设备，则选择Y。

n        USB Network Adapters：USB网络适配器，如果有这种设备请根据嵌入式系统实际使用的硬件选择子项。

n        USB Monitor：USB流量监控。在一般情况下，建议选择N。

n        USS720 parport driver：一种USB接口转并口的转换设备。如果嵌入式系统采用这种设备，则选择Y。

n        USB Serial Converter support：USB接口转串口的转换设备。如果嵌入式系统采用这种设备，则选择Y。

n        EMI 6｜2m USB Audio interface support：一种USB音频设备。如果嵌入式系统采用这种设备，则选择Y。

n        EMI 2｜6 USB Audio interface support：一种USB音频设备。如果嵌入式系统采用这种设备，则选择Y。

n        ADU devices from Ontrak Control Systems：Ontrak Control Systems公司的一种自动拨号设备。如果嵌入式系统采用这种设备，则选择Y。

n        USB Auerswald ISDN support：一种ISDN设备。如果嵌入式系统采用这种设备，则选择Y。

n        USB Diamond Rio500 support：一种MP3播放器。如果嵌入式系统采用这种设备，则选择Y。

n        USB Lego Infrared Tower support：一种无线发射机。如果嵌入式系统采用这种设备，则选择Y。

n        USB LCD driver support：USB液晶显示器。如果嵌入式系统采用这种设备，则选择Y。

n        USB LED driver support：USB发光二极管。如果嵌入式系统采用这种设备，则选择Y。

n        Cypress CY7C63xxx USB driver support：德国AK Modul-Bus Computer GmbH公司的一种产品。如果嵌入式系统采用这种设备，则选择Y。

n        Cypress USB thermometer driver support：一种温度计。如果嵌入式系统采用这种设备，则选择Y。

n        USB Phidgets drivers：来自Phidgets公司的各种USB产品。如果嵌入式系统采用这种设备，则选择Y。

n        Siemens ID USB Mouse Fingerprint sensor support：西门子公司的一种指纹传感器。如果嵌入式系统采用这种设备，则选择Y。

n        Elan PCMCIA CardBus Adapter USB Client：Elan公司的一种USB转PCMCIA的适配器。如果嵌入式系统采用这种设备，则选择Y。

n        Apple Cinema Display support：苹果公司的一种Cinema Display。如果嵌入式系统采用这种设备，则选择Y。

n        USB 2.0 SVGA dongle support（Net2280/SiS315）：一种软件狗。如果嵌入式系统采用这种设备，则选择Y。

n        USB LD driver：USB LD驱动。如果嵌入式系统采用USB LD硬件，则选择Y。

n        PlayStation 2 Trance Vibrator driver support：SONY的PS2上面的“入迷振荡器”，类似于力反馈手柄。如果嵌入式系统采用这种设备，则选择Y。

n        USB testing driver：这是一种测试中的驱动。在一般情况下，建议选择N。

n        USB DSL modem support：对USB DSL猫的支持。如果嵌入式系统采用这种设备，则选择Y。

n        USB Gadget Support：USB杂项支持。如果不清楚，则选择N。

29）MMC/SD Card support

MMC/SD卡支持。如果嵌入式系统采用此类设备，则选择Y。

30）LED devices

发光二级管（LED）设备。如果嵌入式系统采用此类设备，则选择Y。

31）InfiniBand support

InfiniBand是一个通用的高性能I/O规范，它使得存储区域网中以更低的延时传输I/O消息和集群通信消息并且提供很好的伸缩性。用于Linux服务器集群系统。如果不清楚，则选择N。

32）EDAC-error detection and reporting（RAS）

错误检测与纠正（EDAC）的目标是发现并报告，甚至纠正在计算机系统中发生的错误，这些错误是由CPU或芯片组报告的底层错误（内存错误、缓存错误、PCI错误、温度过高等）。在一般情况下，建议选择Y。如果这些代码报告了一个错误，请到以下网站查看更多信息。

n        http://bluesmoke.Sourceforge.net/。

n        http://buttersideup.com/edacwiki/。

该选项包括以下子选项。

n        Debugging：仅供调试使用。

n        Main Memory EDAC（Error Detection And Correction）reporting：一些系统能够检测和修正主内存中的错误，EDAC能够报告这些信息（EDAC自己检测到的或者根据ECC得到的）。EDAC还会尽量检测这些错误发生在哪里，以便于替换损坏的内存。建议选择并按照实际使用的芯片组选取子项。

n        Error detecting method：错误检测方法，当前只有一个Poll for errors（错误轮询）可用。如果不清楚，则选择N。

33）Real Time Clock

所有的PC主板都包含一个电池动力的实时时钟芯片，以便在断电后仍然能够继续保持时间，RTC通常与CMOS集成在一起，因此BIOS可以从中读取当前时间。该选项包括以下子选项。

n        RTC class：通用RTC类支持，选择此项后就可以在操作系统中使用一个或多个RTC设备，还必须从下面启用一个或多个RTC接口。如果不清楚，则选择N。

n        Set system time from RTC on startup：系统启动时使用从指定的RTC设备中读取的时间来设定系统时间，通常这将有助于避免不必要的文件系统检测程序（fsck）的运行。在一般情况下，建议选择Y。

n        The RTC to read the time from：指定具体从哪个RTC设备中读取时间。如果不清楚，则选择N。

n        RTC debug support：仅供调试使用。

n        sysfs：允许通过sysfs接口使用RTC，允许多个RTC设备，也就是/sys/class/RTC/ RTC0_N。如果不清楚，则选择N。

n        proc：允许通过proc接口使用RTC，仅允许一个RTC设备，也就是/proc/driver/RTC。如果不清楚，则选择N。

n        dev：允许通过dev接口使用RTC，允许多个RTC设备，也就是udev设置的/dev/RTC0_N，建议建立一个指向其中之一的软连接/dev/RTC，某些程序（比如hwclock）需要使用/dev/RTC。如果不清楚，则选择N。

n        RTC UIE emulation on dev interface：该选项的作用是，如果底层RTC芯片接口没有提供RTC_UIE支持，就仿真一个RTC_UIE。如果不清楚，则选择N。

34）DMA Engine support

从Intel Bensley双核服务器平台开始引入的数据移动加速（Data Movement Acceleration）引擎，它将某些传输数据的操作从CPU转移到专用硬件，从而可以进行异步传输并减轻CPU负载。Intel已将此项技术变为开放的标准，将来应当会有更多的厂商支持。该选项包括以下子选项。

n        TCP receive copy offload：通过在网络栈中利用DMA引擎来减少接收数据包时的copy-to-user操作，以释放CPU资源，这是DMA引擎目前最主要的用途。如果不清楚，则选择N。

n        Intel I/OAT DMA support：Intel I/O加速技术（Intel I/O Acceleration Technology）中的DMA支持，基于Intel Bensley的新一代服务器平台都支持它。如果不清楚，则选择N

 

4.       make bzImage , 用于编译内核，生成的bzImage在arch/[cpu]/boot

5.        

6.        

7.       make modules  (编译内核)

一般需要1~2小时的时间。这些模块源于使用命令make menuconfig启动的菜单型配置界面中选择的项

8.       make modules_install安装内核

9.       制作init  ramdisk    mkinitrd initrd-2.6.16 2.6.16

10.   安装内核  cp initrd-2.6.16 /boot

cp arch/i386/boot/bzImage /boot/vmlinuz-2.6.16

11．修改启动配置文件/etc/grub.conf

 

12.重启
============================================================================



  1． 基础代码
    Linux 移植通常分为体系结构级别移植(arm)、处理器级别移植(arm920t)和板级移植(smdk2440开发板)，
    各级别移植难易程度差异很大，工作量和调试方式也各不相同。一般的产品开发人员所进行的内核移植，通
    常都是板级移植，这是几个级别中最简单的。
    从代码层面来看，通常把能让一个主板最小系统能运行的代码称为基础代码，这部分代
    码通常包含体系结构移植代码、处理器核心代码以及板级支持包的部分代码。理清了这部分
    代码，对于了解和掌握整个主板相关代码具有重要意义。
    
    确定主板名称和默认配置文件。 
        例如，对于 EPC-28x 工控板，其对应的默认内核配置
        文件为。 通常来说，一个评估板的内核默认配置文
        件名称与评估板的名称相同或者有关联。确定了配置文件后，可用任何文本编辑器打开该配
        置文件，可以对配置的选项进行查看；或者进行 make menuconfig 配置，进入配置界面查看。
    
    确定对应的主板文件。
        在 ARM Linux 移植代码中，每个评估板通常都有一个对应的主
        板文件，在目录下。大多数主板文件都以“ board-”开头，采用
        “ board-xxx.c”这样的文件名，例如；也有以
        “ mach-”开头的，如。通常来说，一个评估板的主板
        文件名称与评估板的名称相同或者有关联。
        
    如果遇到名称特征不是很明显，不能确定的情况：
        则建议打开默认配置文件【就是.config文件】，找到
        “ CONFIG_MACH_XXX=y”这一行，确定主板对应的配置开关变量。然后打开
        文件，根据配置开关变量来确定主板文件。例如
        文件中有如下内容：
        # Intel/Marvell Dev Platforms
        obj-$(CONFIG_ARCH_LUBBOCK) += lubbock.o
        obj-$(CONFIG_MACH_MAINSTONE) += mainstone.o
        obj-$(CONFIG_MACH_ZYLONITE300) += zylonite.o zylonite_pxa300.o
        可以看到， 这几个主板文件命名都既不是以“ board-”开头，也不是以“ mach-”开头，
        对于这种情况，通过 Makefile 文件来确定一下是比较好的做法。特别是对于主板开关变量
        对应非单一文件的，更需要查看 Makefile 来确定关联文件，否则有可能遗漏某个文件，造
        成代码阅读理解上的障碍。如 CONFIG_MACH_ZYLONITE300 对应着 zylonite.c 和 zylonite
        _pxa300.c 两个 C 文件。
        
2． 驱动代码
    Linux 内核源码中接近一半的代码量是驱动，对某一个特定主板的系统而言，驱动也占
    据很大的比例，底层开发的很大一部分是驱动相关工作。掌握从众多驱动中找到正确的驱动
    源码文件，并根据产品的实际需求进行修改调整的方法，能有效促进产品开发的进度。
    Linux 内核源码树 drivers 目录很复杂，包含了各种外设的驱动。对嵌入式 Linux 开发而
    言，通常需要关注的目录如表 1.2 所列。
    
    表 1.2 常见驱动目录
    目录                           说明
    ------------------------------------------------------------------------------------------
    drivers/gpio          系统 GPIO 子系统和驱动目录，包括处理器内部 GPIO 以及外扩 GPIO 驱动。
                          遵循 GPIO 子系统的驱动，可通过/sys/class/gpio 进行访问
    drivers/hwmon         硬件监测相关驱动，如温度传感器、风扇监测等
    drivers/i2c           I2C子系统驱动。各 I2C 控制器的驱动在 i2c/busses 目录下
    drivers/input         输入子系统驱动目录
    
    drivers/input/keyboard        非HID键盘驱动，如GPIO键盘、矩阵键盘等
    drivers/input/touchscreen     触摸屏驱动，如处理器的触摸屏控制器驱动、外扩串行触摸屏控制器驱动、串口
                                  触摸屏控制器驱动等

    drivers/leds         LED 子系统和驱动，如 GPIO 驱动的 LED。遵循 LED 子系统的驱动 ，可通过/sys/class/leds 进行访问
    drivers/mfd          多功能器件驱动。如果一个器件能做多种用途，通常需要借助 MFD 来完成。例如 am3352 的 adc 接口，
                         可同时做 adc 和触摸屏控制器，所以需要实现 MFD 接口驱动

    drivers/misc         杂项驱动。特别需要关注目录，提供了i2c和spi接口的
                         EEPROM 驱动范例，所驱动的设备可通过/sys 系统访问
    drivers/mmc          sd/mmc卡驱动目录
    drivers/mtd          MTD子系统和驱动，包括NAND、oneNAND等。注意，UBI的实现也在MTD中
    drivers/mtd/nand     NAND FALSH的MTD驱动目录，包括NAND的基础驱动和控制器接口驱动
    drivers/net          网络设备驱动，包括MAC、PHY、CAN、USB网卡、无线、PPP协议等
    drivers/net/can      CAN设备驱动。 Linux 已经将 CAN 归类到网络中，采用 socket_CAN 接口
    drivers/net/ethernet    所支持的 MAC 驱动。常见厂家的 MAC 驱动都能找到，如 broadcom、 davicom、
                            marvell、 micrel、 smsc 等厂家的 MAC，处理器自带 MAC 的驱动也在该目录下
    drivers/net/phy         PHY 驱动，像 marvell、 micrel 和 smsc 的一些 PHY 驱动
    drivers/rtc             RTC 子系统和 RTC 芯片驱动
    drivers/spi SPI         子系统和 SPI 控制器驱动，含 GPIO 模拟 SPI 的驱动
    drivers/tty             TTY 驱动
    drivers/tty/serial      串口驱动，包括 8250 串口以及各处理器内部串口驱动实现
    drivers/uio             用户空间 IO 驱动
    drivers/usb             USB 驱动，包括 USB HOST、 Gadget、 USB 转串口以及 OTG 等支持
    drivers/video           Video 驱动，包括 Framebuffer 驱动、显示控制器驱动和背光驱动等。有的移植
                            代码会将液晶屏配置通放在显卡控制器驱动目录下，例如 omap2 系列的 LCD 配
                            置代码在目录下
    drivers/video/backlight     背光控制驱动
    drivers/video/logo          Linux 内核启动 LOGO 图片目录
    drivers/watchdog            看门狗驱动，包括软件看门狗和各种硬件看门狗驱动实现
    
    熟悉各类驱动在源码树中的大概位置，能帮助在开发过程中快速进行驱动源码查找和定
    位。一个系统到底用了哪些代码，与系统本身外设相关，也与主板配置文件相关。
    
3．其它代码
    还有一些代码是系统必须的代码，但在实际开发过程中通常很少需要进行关注，例如文
    件系统的实现代码、 网络子系统的实现代码等。对这部分代码和主板的关联性，建议根据配
    置文件来确认。
    
1.4 Linux 内核中的 Makefile 文件
    本节不对内核的 Makefile 文件进行深入展开，更多语法和说明请阅读:
     文件。
    
    1.4.1 顶层 Makefile
        源码目录树顶层 Makefile 是整个内核源码管理的入口，对整个内核的源码编译起着决
        定性作用。编译内核时，顶层 Makefile 会按规则递归历遍内核源码的所有子目录下的
        Makefile 文件，完成各子目录下内核模块的编译。
        
        1． 内核版本号
        打开顶层 Makefile，开头的几行记录了内核源码的版本号，通常如下所示：
            VERSION = 2
            PATCHLEVEL = 6
            SUBLEVEL = 35
            EXTRAVERSION =3
        说明代码版本为 2.6.35.3，编译得到的内核在目标板运行后，输入 uname -a 命令可以得到印证：
        # uname -a  （注意：这个是在目标板上运行的内核。）
            Linux boy 2.6.35.3-571-gcca29a0-gd431b3d-dirty #22 PREEMPT Tue Oct 27 20:12:33 CST 2015 armv5tejl
            GNU/Linux    
        
        2． 编译控制
        （ 1）体系结构
        Linux 是一个支持众多体系结构的操作系统，在编译过程中需指定体系结构，以与实际
        平台对应。在顶层 Makefile 中，通过变量 ARCH 来指定：
        ARCH ?= $(SUBARCH)
        如果没有在编译命令行中指定 ARCH 参数，系统将会进行本地编译，通过获取本机信
        息来自动指定：
            SUBARCH := $(shell uname -m | sed -e s/i.86/i386/ -e s/sun4u/sparc64/ \
            -e s/arm.*/arm/ -e s/sa110/arm/ \
            -e s/s390x/s390/ -e s/parisc64/parisc/ \
            -e s/ppc.*/powerpc/ -e s/mips.*/mips/ \
            -e s/sh[234].*/sh/ )
        如果进行 ARM 嵌入式 Linux 开发，则必须指定 ARCH 为 arm（ 注意大小写，须与 arch/
        目录下的 arm 一致），如：
        $ make ARCH=arm
        当然，也可以修改 Makefile，将修改为 ARCH ?= $(SUBARCH)修改为 ARCH = arm，在
        命令行直接 make 即可。
        
        （ 2）编译器
        如果不是进行本地编译，则须指定交叉编译器，通过 CROSS_COMPILE来指定。Makefile
        中与交叉编译器的指定如下：
            CROSS_COMPILE ?= $(CONFIG_CROSS_COMPILE:"%"=%)
            ……
            AS = $(CROSS_COMPILE)as
            LD = $(CROSS_COMPILE)ld
            CC = $(CROSS_COMPILE)gcc
            CPP = $(CC) –E
            AR = $(CROSS_COMPILE)ar
            NM = $(CROSS_COMPILE)nm
            STRIP = $(CROSS_COMPILE)strip
            OBJCOPY = $(CROSS_COMPILE)objcopy
            OBJDUMP = $(CROSS_COMPILE)objdump
            
        CONFIG_CROSS_COMPILE 是一个配置选项，可在内核配置时候指定。如果在配置内
        核时候没有指定 CONFIG_CROSS_COMPILE，也没有在编译参数指定CROSS_COMPILE，
        则会采用本地编译器进行编译。
        
        进行 ARM 嵌入式 Linux 开发，必须指定交叉编译器，可以在内核配置通过 CONFIG
        _CROSS_COMPILE 指定交叉编译器，也可以通过 CROSS_COMPILE 指定。假定使用的交
        叉编译器是 arm-linux-gnueabihf-gcc，则指定 CROSS_COMPILE 为 arm-linux-gnueabihf-：
        $ make ARCH=arm CROSS_COMPILE= arm-linux-gnueabihf-

        或者在 Makefile 中，直接指定 CROSS_COMPILE 的值：
        CROSS_COMPILE = arm-linux-gnueabihf-
        
        注意：CROSS_COMPILE 指定的交叉编译器必须事先安装并正确设置系统环境变量；
        如果没有设置环境变量，则需使用绝对地址，例如：
        CROSS_COMPILE =/home/ctools/linux-devkit/bin/arm-linux-gnueabihf-
        如果同时指定了 ARCH 和 CROSS_COMPILE， 则在编译的时候， 只需简单的 make 就
        可以了。
        
    1.4.2 子目录的 Makefile
        在内核源码的子目录中，几乎每个子目录都有相应的 Makefile 文件，管理着对应目录
        下的代码。对该目录的文件或者子目录的编译控制， 
        Makefile 中有两种表示方式，一种是默认选择编译，用 obj-y 表示，如：
            obj-y += usb-host.o       # 默认编译 usb-host.c 文件
            obj-y += gpio/            # 默认编译 gpio 目录
            
        另一种表示则与内核配置选项相关联，编译与否以及编译方式取决于内核配置，例如：
            obj-$(CONFIG_WDT) += wdt.o         # wdt.c 编译控制
            obj-$(CONFIG_PCI) += pci/          # pci 目录编译控制
            
        是否编译 wdt.c 文件，或者以何种方式编译，取决于内核配置后的变量 CONFIG_WDT
        值：如果在配置中设置为[*]，则静态编译到内核，如果配置为[M]，则编译为 wdt.ko 模块，
        否则不编译。
        
        说明：受控目标是一个目录， obj-y 并不直接决定受控目录的文件以及子目录的文件，
        仅仅是与受控目录 Makefile 交互，实际编译控制在受控子目录的 Makefile 中。例如“ obj-y
        += gpio/”，最终 gpio 目录下哪些文件被编译，完全取决于 gpio 目录下的 Makefile。
        “ obj-$(CONFIG_PCI) += pci/” 的含义同理。
        
1.5 Linux 内核中的 Kconfig 文件
    本节不对内核的 Kconfig 文件进行深入展开，更多 Kconfig 语法和说明请阅读：
        

    内核源码树每个目录下都还包含一个 Kconfig 文件，用于描述所在目录源代码相关的内
    核配置菜单，各个目录的 Kconfig 文件构成了一个分布式的内核配置数据库。通过 make
    menuconfig（ make xconfig 或者 make gconfig）命令配置内核的时候，从 Kconfig 文件读取菜
    单，配置完毕保存到文件名为.config 的内核配置文件中，供 Makefile 文件在编译内核时使
    用。



===================================
  内核的配置过程依赖Makefile和arch/arm/Kconfig以及其他文件下的Kconfig文件，通过make menuconfig或者桌面环境下的xconfig/gconfig可以手动配置内核所支持的功能。
          以下为Device drivers启动设置的配置。
  
Generic Driver Options —>
          参考：/drivers/base/Kconfig

[Y] Support for uevent helper
          支持uevent（例如热插拔）事件。
          早年的内核(切换到基于netlink机制之前),在发生uevent事件(通常是热插拔)时,需要调用用户空间程序(通常是"/sbin/hotplug"),以帮助完成uevent事件的处理.此选项就是用于开启此功能.由于目前的发行版都已不再需要此帮助程序,所以请选"N".此外,如果你使用了systemd或udev则必须选"N".
          The uevent helper program is forked by the kernel for every uevent. Before the switch to the netlink-based uevent source, this was used to hook hotplug scripts into kernel device events. It usually pointed to a shell script at /sbin/hotplug. This should not be used today, because usual systems create many events at bootup or device discovery in a very short time frame. One forked process per event can create so many processes that it creates a high system load, or on smaller systems it is known to create out-of-memory situations during bootup.

( ) path to uevent helper
          To disable user space helper program execution at by default specify an empty string here. This setting can still be altered via /proc/sys/kernel/hotplug or via /sys/kernel/uevent_helper later at runtime.


[Y] Maintain a devtmpfs filesystem to mount at /dev
          在系统/dev文件夹下挂载devtmpf文件系统。
          devtmpfs是一种基于CONFIG_TMPFS的文件系统(与proc和sys有几分相似).在系统启动过程中,随着各个设备的初始化完成,内核将会自动在devtmpfs中创建相应的设备节点(使用默认的文件名和权限)并赋予正确的主次设备号.
          This creates a tmpfs/ramfs filesystem instance early at bootup. In this filesystem, the kernel driver core maintains device nodes with their default names and permissions for all registered devices with an assigned major/minor number. Userspace can modify the filesystem content as needed, add  symlinks, and apply needed permissions.
          It provides a fully functional /dev directory, where usually udev runs on top, managing permissions and adding meaningful symlinks.
          In very limited environments, it may provide a sufficient functional /dev without any further help. It also allows simple rescue systems, and reliably handles dynamic major/minor numbers.
          Notice: if CONFIG_TMPFS isn’t enabled, the simpler ramfs file system will be used instead.

[Y] Automount devtmpfs at /dev, after the kernel mounted the rootfs
          在内核挂载根文件系统的同时，立即自动将devtmpfs挂载到"/dev"目录。因为此时init进程都还尚未启动，所以这就确保在进入用户空间之前，所有设备文件就都已经准备完毕.开启此选项相当于设置内核引导参数"devtmpfs.mount=1"，关闭此选项相当于设置内核引导参数"devtmpfs.mount=0"。开启此项后,你就可以放心的使用"init=/bin/sh"直接进入救援模式，而不必担心"/dev"目录空无一物。
          注意:此选项并不影响基于initramfs的启动，此种情况下，devtmpfs必须被手动挂载.所以,如果你的系统使用initrd或者有专门的启动脚本用于挂载"/dev"目录(大多数发行版都有这样的脚本)，或者你看了前面的解释，还是不确定，那就选"N".对于实在想要使用"init=/bin/sh"直接进入救援模式的人来说，还是使用"init=/bin/sh devtmpfs.mount=1"吧!
          This will instruct the kernel to automatically mount the devtmpfs filesystem at /dev, directly after the kernel has mounted the root filesystem. The behavior can be overridden with the commandline parameter: devtmpfs.mount=0|1. This option does not affect initramfs based booting, here the devtmpfs filesystem always needs to be mounted manually after the rootfs is mounted.
          With this option enabled, it allows to bring up a system in rescue mode with init=/bin/sh, even when the /dev directory on the rootfs is completely empty.


[Y] Select only drivers that don't need compile-time external firmware
          只显示那些编译时不需要额外固件支持的驱动程序，除非你有某些怪异硬件，否则请选"Y"。
          Select this option if you don’t have magic firmware for drivers that need it. If unsure, say Y.
[Y] Prevent firmware from being built
          不编译固件(firmware)。固件一般是随硬件的驱动程序提供的，仅在更新固件的时候才需要重新编译。建议选"Y"。
          Say yes to avoid building firmware. Firmware is usually shipped with the driver and only when updating the firmware should a rebuild be made. If unsure, say Y here.
{Y} Userspace firmware loading support
          用户空间固件加载支持。如果内核自带的模块需要它，它将会被自动选中。但某些内核树之外的模块也可能需要它，这时候就需要你根据实际情况手动开启了.
          This option is provided for the case where none of the in-tree modules require userspace firmware loading support, but a module built out-of-tree does.

[Y] Include in-kernel firmware blobs in kernel binary
          内核源码树中包含了许多驱动程序需要的二进制固件(blob),推荐的方法是通过"make firmware_install"将"firmware"目录中所需的固件复制到系统的"/lib/firmware/“目录中,然后由用户空间帮助程序在需要的时候进行加载.开启此项后,将会把所需的"blob"直接编译进内核,这样就可以无需用户空间程序的帮助,而直接使用这些固件了(例如:当根文件系统依赖于此类固件,而你又不想使用initrd的时候).每个需要此类二进制固件的驱动程序,都会有一个"Include firmware for xxx device"的选项,如果此处选"Y”,那么这些选项都将被隐藏.建议选"N".
          Various drivers in the kernel source tree may require firmware, which is generally available in your distribution’s linux-firmware package.
          The linux-firmware package should install firmware into /lib/firmware/ on your system, so they can be loaded by userspace helpers on request.
          Enabling this option will build each required firmware blob specified by EXTRA_FIRMWARE into the kernel directly, where request_firmware() will find them without having to call out to userspace. This may be useful if your root file system requires a device that uses such firmware and you do not wish to use an initrd.
          This single option controls the inclusion of firmware for every driver that uses request_firmware(), which avoids a proliferation of ‘Include firmware for xxx device’ options.
          Say ‘N’ and let firmware be loaded from userspace.
( ) External firmware blobs to build into the kernel binary
          指定要额外编译进内核的二进制固件(blob).此选项的值是一个空格分隔的固件文件名字符串,这些文件必须位于CONFIG_EXTRA_FIRMWARE_DIR目录中(其默认值是内核源码树下的"firmware"目录).
          This option allows firmware to be built into the kernel for the case where the user either cannot or doesn’t want to provide it from userspace at runtime (for example, when the firmware in question is required for accessing the boot device, and the user doesn’t want to use an initrd).
          This option is a string and takes the (space-separated) names of the firmware files – the same names that appear in MODULE_FIRMWARE() and request_firmware() in the source. These files should exist under the directory specified by the EXTRA_FIRMWARE_DIR option, which is by default the firmware subdirectory of the kernel source tree.
          For example, you might set CONFIG_EXTRA_FIRMWARE=“usb8388.bin”, copy the usb8388.bin file into the firmware directory, and build the kernel. Then any request_firmware(“usb8388.bin”) will be satisfied internally without needing to call out to userspace.
          WARNING: If you include additional firmware files into your binary kernel image that are not available under the terms of the GPL, then it may be a violation of the GPL to distribute the resulting image since it combines both GPL and non-GPL work. You should consult a lawyer of your own before distributing such an image.


[N] Fallback user-helper invocation for firmware loading
          在内核自己直接加载固件失败后,作为补救措施,调用用户空间帮助程序(通常是udev)再次尝试加载.通常这个动作是不必要的,因此应该选"N",如果你使用了udev或systemd,则必须选"N".仅在某些特殊的固件位于非标准位置时,才需要选"Y".
          This option enables / disables the invocation of user-helper (e.g. udev) for loading firmware files as a fallback after the direct file loading in kernel fails.  The user-mode helper is no longer required unless you have a special firmware file that resides in a non-standard path. Moreover, the udev support has been deprecated upstream.
          If you are unsure about this, say N here.
[Y] Allow device coredump
          为驱动程序开启core dump机制,仅供调试.
          核心转储（core dump），是操作系统在进程收到某些信号而终止运行时，将此时进程地址空间的内容以及有关进程状态的其他信息写出的一个磁盘文件，这种信息往往用于调试，可以用gdb来调试。
          This option controls if the device coredump mechanism is available or not; if disabled, the mechanism will be omitted even if drivers that can use it are enabled.
          Say ‘N’ for more sensitive systems or systems that don’t want to ever access the information to not have the code, nor keep any data.
          If unsure, say Y.
[N] Driver Core verbose debug messages
          让驱动程序核心在系统日志中产生冗长的调试信息,仅供调试
          Say Y here if you want the Driver core to produce a bunch of debug messages to the system log. Select this if you are having a problem with the driver core and want to see more of what is going on.
          If you are unsure about this, say N here.
[N] Managed device resources verbose debug messages
          为内核添加一个"devres.log"引导参数.当被设为非零值时,将会打印出设备资源管理驱动(devres)的调试信息.仅供调试使用.推荐设置为N。
          This option enables kernel parameter devres.log. If set to non-zero, devres debug messages are printed. Select this if you are having a problem with devres or want to debug resource management for a managed device. devres.log can be switched on and off from sysfs node.
          If you are unsure about this, Say N here.
[N] Test driver remove calls during probe (UNSTABLE)
          Say Y here if you want the Driver core to test driver remove functions by calling probe, remove, probe. This tests the remove path without having to unbind the driver or unload the driver module.  This option is expected to find errors and may render your system unusable. You should say N here unless you are explicitly looking to test this functionality.
<N> Build kernel module to test asynchronous driver probing
          Enabling this option produces a kernel module that allows testing asynchronous driver probing by the device core. The module name will be test_async_driver_probe.ko
          If unsure say N.
[N] Enable verbose DMA_FENCE_TRACE messages
          Enable the DMA_FENCE_TRACE printks. This will add extra spam to the console log, but will make it easier to diagnose lockup related problems for dma-buffers shared across multiple devices.
[Y] DMA Contiguous Memory Allocator
          This enables the Contiguous Memory Allocator which allows drivers to allocate big physically-contiguous blocks of memory for use with hardware components that do not support I/O map nor scatter-gather.
          You can disable CMA by specifying “cma=0” on the kernel’s command line.
          For more information see <include/linux/dma-contiguous.h>. If unsure, say “n”.

***Default contiguous memory area size:***
(24) Size in Mega Bytes
          default 0 if X86
          default 16
          Defines the size (in MiB) of the default memory area for Contiguous Memory Allocator.  If the size of 0 is selected, CMA is disabled by default, but it can be enabled by passing cma=size[MG] to the kernel.
(C) Selected region size
          (X) Use mega bytes value only
          (N) Use percentage value only
          (N) Use lower value (minimum)
          (N) Use higher value (maximum)
(8) Maximum PAGE_SIZE order of alignment for contiguous buffers



Bus Devices —>
          参考：/drivers/bus/Kconfig
          总线设备.此类设备仅出现在ARM平台。下列是勾选的：

<Y> OMAP INTERCONNECT DRIVER
          支持TI的omap开放式多媒体应用平台
<Y> OMAP OCP2SCP DRIVER
          ocp/scp协议
<Y> Simple Power-Managed Bus Driver
          电源管理总线

< > Connector - unified userspace <-> kernelspace linker
          连接器是一种新的用户态与内核态的通信方式，它使用起来非常方便。本质上，连接器是一种netlink，它的netlink协议号为 NETLINK_CONNECTOR，与一般的 netlink 相比，它提供了更容易的使用接口，使用起来更方便。
          The Connector driver makes it easy to connect various agents using a netlink based network. One must register a callback and an identifier. When the driver receives a special netlink message with the appropriate identifier, the appropriate callback will be called.
 Memory Technology Device (MTD) support —>
          详细参考/drivers/mtd/Kconfig。
          MTD子系统是一个闪存转换层。其主要目的是提供一个介于闪存硬件驱动程序与高级应用程序之间的抽象层，以简化闪存设备的驱动。注意：MTD常用于嵌入式系统，而我们常见的U盘/MMC卡/SD卡/CF卡等移动存储设备以及固态硬盘(SSD)，虽然也叫"flash"，但它们并不是使用MTD技术的存储器。仅在你需要使用主设备号为31的MTD块设备(/dev/romX、/dev/rromX、/dev/flashX、/dev/rflashX)，或者主设备号为90的MTD字符设备(/dev/mtdX、/dev/mtdrX)时选"Y"，否则选"N"。
          Memory Technology Devices are flash, RAM and similar chips, often used for solid state file systems on embedded devices. This option will provide the generic support for MTD drivers to register themselves with the kernel and for potential users of MTD devices to enumerate the devices which are present and obtain a handle on them. It will also allow you to select individual drivers for particular hardware and users of MTD devices. If unsure, say N.
-Y- Device Tree and Open Firmware support —>
          参考：/drivers/mtd/Kconfig。
          Device Tree基础架构与Open Firmware支持，主要用于嵌入式环境。不确定的选"N"。内核中若有其它选项依赖于它，则会自动选中此项。
          This option enables the device tree infrastructure. It is automatically selected by platforms that need it or can be enabled manually for unit tests, overlays or compile-coverage.
< > Parallel port support -----
          参考：/drivers/parport/Kconfig。
          25针并口(LPT接口)支持，古董级的打印机或扫描仪可能使用这种接口。目前已被淘汰。
          If you want to use devices connected to your machine’s parallel port (the connector at the computer with 25 holes), e.g. printer, ZIP drive, PLIP link (Parallel Line Internet Protocol is mainly used to create a mini network by connecting the parallel ports of two local machines) etc., then you need to say Y here; please read <file:Documentation/parport.txt> and <file:drivers/parport/BUGS-parport>.
          For extensive information about drivers for many devices attaching to the parallel port see http://www.torque.net/linux-pp.html on the WWW. It is possible to share a single parallel port among several devices and it is safe to compile all the corresponding drivers into the kernel. To compile parallel port support as a module, choose M here: the module will be called parport. If you have more than one parallel port and want to specify which port and IRQ to be used by this driver at module load time, take a look at <file:Documentation/parport.txt>.
          If unsure, say Y.
[Y] Block devices -----
          块设备，必选。
          参考：/drivers/block/Kconfig。
          Say Y here to get to see options for various different block device drivers. This option alone does not add any kernel code.
          If you say N, all options in this submenu will be skipped and disabled; only do this if you know what you are doing.
          下列是勾选的：

<Y> Loopback device support
          在进行某些测试的时候，往往需要新建一些磁盘分区或者设备（ISO9660镜像文件或者CD-ROM）等，此时对硬盘进行重新划分往往不太方便。在这种情况下，可以通过loop伪设备来实现循环挂载，从而达到目的。在使用之前，循环设备必须与现存文件系统上的文件相关联。这种关联将提供给用户一个应用程序接口，接口将允许文件视为块特殊文件（参见设备文件系统）使用。因此，如果文件中包含一个完整的文件系统，那么这个文件就能如同磁盘设备一般被挂载。这种设备文件经常被用于光盘或是磁盘镜像。通过循环挂载来挂载包含文件系统的文件，便使处在这个文件系统中的文件得以被访问。这些文件将出现在挂载点目录。
          在Linux中，设备名按照相应设备驱动程序的符号表项进行命名。这些设备被叫做“loop”设备，设备节点通常命名为/dev/loop0、/dev/loop1之类。
          默认情况下Linux支持的loop设备是8个。如果需要超过8个的loop设备，那么可能会遇到类似的错误“no such device”或“could not find any free loop device”，这是因为超过了可用loop设置设备的最大限制。
          Saying Y here will allow you to use a regular file as a block device; you can then create a file system on that block device and mount it just as you would mount other block devices such as hard drive partitions, CD-ROM drives or floppy drives. The loop devices are block special device files with major number 7 and typically called /dev/loop0, /dev/loop1 etc.
          This is useful if you want to check an ISO 9660 file system before burning the CD, or if you want to use floppy images without first writing them to floppy. Furthermore, some Linux distributions avoid the need for a dedicated Linux partition by keeping their complete root file system inside a DOS FAT file using this loop device driver.
          To use the loop device, you need the losetup utility, found in the util-linux package, see https://www.kernel.org/pub/linux/utils/util-linux/.
          The loop device driver can also be used to “hide” a file system in a disk partition, floppy, or regular file, either using encryption (scrambling the data) or steganography (hiding the data in the low bits of, say, a sound file). This is also safe if the file resides on a remote file server.
          There are several ways of encrypting disks. Some of these require kernel patches. The vanilla kernel offers the cryptoloop option and a Device Mapper target (which is superior, as it supports all file systems). If you want to use the cryptoloop, say Y to both LOOP and CRYPTOLOOP, and make sure you have a recent (version 2.12 or later) version of util-linux. Additionally, be aware that the cryptoloop is not safe for storing journaled filesystems.
          Note that this loop device has nothing to do with the loopback device used for network connections from the machine to itself. To compile this driver as a module, choose M here: the module will be called loop.
          Most users will answer N here.

(8) Number of loop devices to pre-create at init time
          设置loop分区启动时默认分配的个数。


<Y> RAM block device support
          在内存中开辟一个和普通存储同样支持读写的块设备，一般用于启动时存放一个最小文件系统。详细参考<file:Documentation/blockdev/ramdisk.txt>，一般选择N。
          Saying Y here will allow you to use a portion of your RAM memory as a block device, so that you can make file systems on it, read and write to it and do all the other things that you can do with normal block devices (such as hard drives). It is usually used to load and store a copy of a minimal root file system off of a floppy into RAM during the initial install of Linux.
          Note that the kernel command line option “ramdisk=XX” is now obsolete. For details, read <file:Documentation/blockdev/ramdisk.txt>.
          To compile this driver as a module, choose M here: the module will be called brd. An alias “rd” has been defined for historical reasons.
          Most normal users won’t need the RAM disk functionality, and can thus say N here.

(16) Default number of RAM disks
          设置默认RAM disks的个数。
(65536) Default RAM disk size (kbytes)
          设置默认大小。


<Y> Virtio block driver
          Virtio虚拟块设备驱动，仅可用在基于lguest或QEMU的半虚拟化客户机中(一般是KVM或XEN)。
          This is the virtual block driver for virtio. It can be used with QEMU based VMMs (like KVM or Xen). Say Y or M.

< > NVM Express block device
          NVM Express是专门针对PCI-E接口高性能固态硬盘的标准规范。有了这一标准，操作系统厂商只需要编写一种驱动，就可以支持不同厂商的不同PCI-E SSD设备，以解决过去PCI-E SSD产品形态与规格五花八门，缺乏通用性和互用性的问题。如果你有一块较新的PCIE固态硬盘，那么很大可能就是NVMe接口。
          The NVM Express driver is for solid state drives directly connected to the PCI or PCI Express bus.  If you know you don’t have one of these, it is safe to answer N. To compile this driver as a module, choose M here: the module will be called nvme.
< > NVM Express over Fabrics FC host driver
          This provides support for the NVMe over Fabrics protocol using the FC transport.This allows you to use remote block devices exported using the NVMe protocol set.
          To configure a NVMe over Fabrics controller use the nvme-cli tool from https://github.com/linux-nvme/nvme-cli. If unsure, say N.
 NVMe Target support
          This enabled target side support for the NVMe protocol, that is it allows the Linux kernel to implement NVMe subsystems and controllers and export Linux block devices as NVMe namespaces. You need to select at least one of the transports below to make this functionality useful.
          To configure the NVMe target you probably want to use the nvmetcli tool from http://git.infradead.org/users/hch/nvmetcli.git.
 Misc devices —>
          其他设备。以下是勾选的：

<Y> Analog Devices Digital Potentiometers
          If you say yes here, you get support for the Analog Devices AD5258, AD5259, AD5251, AD5252, AD5253, AD5254, AD5255 AD5160, AD5161, AD5162, AD5165, AD5200, AD5201, AD5203, AD5204, AD5206, AD5207, AD5231, AD5232, AD5233, AD5235, AD5260, AD5262, AD5263, AD5290, AD5291, AD5292, AD5293, AD7376, AD8400, AD8402, AD8403, ADN2850, AD5241, AD5242, AD5243, AD5245, AD5246, AD5247, AD5248, AD5280, AD5282, ADN2860, AD5273, AD5171, AD5170, AD5172, AD5173, AD5270, AD5271, AD5272, AD5274 digital potentiometer chips.
          See Documentation/misc-devices/ad525x_dpot.txt for the userspace interface.
          This driver can also be built as a module. If so, the module will be called ad525x_dpot.

<Y> support I2C bus connection
          Say Y here if you have a digital potentiometers hooked to an I2C bus. To compile this driver as a module, choose M here: the module will be called ad525x_dpot-i2c.


<Y> Integrated Circuits ICS932S401
          依赖I2C驱动。
          IDT ICS932S401系列时钟频率控制芯片支持(可能会出现在某些主板上)。
          If you say yes here you get support for the Integrated Circuits ICS932S401 clock control chips. This driver can also be built as a module. If so, the module will be called ics932s401.
<Y> Medfield Avago APDS9802 ALS Sensor module
          依赖I2C驱动。
          If you say yes here you get support for the ALS APDS9802 ambient light sensor.
          This driver can also be built as a module. If so, the module will be called apds9802als.
<Y> Intersil ISL29003 ambient light sensor
          依赖I2C和SYSFS驱动。
          If you say yes here you get support for the Intersil ISL29003ambient light sensor. This driver can also be built as a module. If so, the module will be called isl29003.
[Y] Generic on-chip SRAM driver
          许多SoC系统都有芯片内嵌的SRAM。开启此项后，就可以声明将此段内存范围交给通用内存分配器(genalloc)管理。不确定的选"N"。
          This driver allows you to declare a memory region to be managed by the genalloc API. It is supposed to be used for small on-chip SRAM areas found on many SoCs.
<M> PCI Endpoint Test driver
          PCI相关。
          Enable this configuration option to enable the host side test driver for PCI Endpoint.
          EEPROM support —>
          一些eeprom设备的支持。

<M> I2C EEPROMs / RAMs / ROMs from most vendors
-Y- EEPROM 93CX6 support



ATA/ATAPI/MFM/RLL support (DEPRECATED) ----
          已被废弃的IDE硬盘和ATAPI光驱等接口的驱动(已被CONFIG_ATA取代)。
SCSI device support —>
          如果有SCSI（小型计算机系统接口）设备，例如硬盘、软驱、光驱、打印机以及扫描仪等，就需要勾选。
          参考：/drivers/scsi/support。
          If you want to use a SCSI hard disk, SCSI tape drive, SCSI CD-ROM or any other SCSI device under Linux, say Y and make sure that you know the name of your SCSI host adapter (the card inside your computer that “speaks” the SCSI protocol, also called SCSI controller), because you will be asked for it.
          You also need to say Y here if you have a device which speaks the SCSI protocol.  Examples of this include the parallel port version of the IOMEGA ZIP drive, USB storage devices, Fibre Channel, and FireWire storage.
          To compile this driver as a module, choose M here and read <file:Documentation/scsi/scsi.txt>. The module will be called scsi_mod.
          However, do not compile this as a module if your root file system (the one containing the directory /) is located on a SCSI device.
          下列为勾选的子项：

{M} SCSI device support
          SCSI协议支持。有任何SCSI/SAS/SATA/USB/Fibre Channel/FireWire设备之一就必须选上，选"Y"。注意USB设备驱动也需要此项支持！
[Y] legacy /proc/scsi/ support
          过时的/proc/scsi/接口。某些老旧的刻录程序可能需要它，建议选"N"。
<M> SCSI disk support
          使用SCSI/SAS/SATA/PATA/USB/Fibre Channel存储设备的必选，选"Y"。
<M> SCSI CDROM support
          通过SCSI/FireWire/USB/SATA/IDE接口连接的DVD/CD驱动器(基本上涵盖了所有常见的接口)。
[Y] SCSI low-level drivers --->
          底层SCSI驱动程序。

 Serial ATA and Parallel ATA drivers (libata)—>
          SATA与PATA(IDE)设备。桌面级PC以及低端服务器的硬盘基本都是此种接口。
          参考：/drivers/ata/Kconfig。
          If you want to use an ATA hard disk, ATA tape drive, ATA CD-ROM or any other ATA device under Linux, say Y and make sure that you know the name of your ATA host adapter (the card inside your computer that “speaks” the ATA protocol, also called ATA controller), because you will be asked for it.
          NOTE: ATA enables basic SCSI support; however, ‘SCSI disk support’, ‘SCSI tape support’, or ‘SCSI CDROM support’ may also be needed, depending on your hardware configuration.
[N] Multiple devices driver support (RAID and LVM) ----
          多设备支持(RAID和LVM)。RAID和LVM的功能是使用多个物理设备组建成一个单独的逻辑设备。
          参考：drivers/md/Kconfig。
          Support multiple physical spindles through a single logical device. Required for RAID and logical volume management.
 Generic Target Core Mod (TCM) and ConfigFS Infrastructure ----
          通用TCM存储引擎与ConfigFS虚拟文件系统(/sys/kernel/config)支持，看不懂就说明你不需要。
          参考：drivers/target/Kconfig。
          Say Y or M here to enable the TCM Storage Engine and ConfigFS enabled control path for target_core_mod.  This includes built-in TCM RAMDISK subsystem logic for virtual LUN 0 access.
[N] Fusion MPT device support ----
          Fusion MPT(Message Passing Technology) 是 LSI Logic 公司为了更容易实现SCSI和光纤通道而提出的技术，支持Ultra320 SCSI/光纤通道/SAS。
          参考：drivers/message/fusion/Kconfig。
          Say Y here to get to see options for Fusion Message Passing Technology (MPT) drivers.This option alone does not add any kernel code.
          If you say N, all options in this submenu will be skipped and disabled.
IEEE 1394 (FireWire) support —>
          火线(IEEE 1394)是苹果公司开发的串行接口，类似于USB，但PC上并不常见，算得上是个没有未来的技术了。
          参考：drivers/firewire/Kconfig。
[Y] Network device support —>
          网络设备。除非你不想连接任何网络，否则必选"Y"。
          参考：drivers/net/Kconfig。
          You can say N here if you don’t intend to connect your Linux box to any other computer at all.
          You’ll have to say Y if your computer contains a network card that you want to use under Linux. If you are going to run SLIP or PPP over telephone line or null modem cable you need say Y here. Connecting two machines with parallel ports using PLIP needs this, as well as AX.25/KISS for sending Internet traffic over amateur radio links.
          See also “The Linux Network Administrator’s Guide” by Olaf Kirch and Terry Dawson. Available at http://www.tldp.org/guides.html. If unsure, say Y.
          下列为勾选的：

[Y] Network core driver support
          如果你不想使用任何高级网络功能(拨号网络/EQL/VLAN/bridging/bonding/team/光纤通道/虚拟网络等)，仅仅是一般性质的联网(普通低端服务器，通过路由器或者局域网上网的常规个人电脑或办公电脑)，可以选"N"。
          You can say N here if you do not intend to use any of the networking core drivers (i.e. VLAN, bridging, bonding, etc.)

<M> Dummy net driver support
          Dummy网络接口本质上是一个可以配置IP地址的bit-bucket(位桶，所有发送到此设备的流量都将被湮灭)，以使应用程序看上去正在和一个常规的网络接口进行通信。使用SLIP(小猫拨号，目前应该已经绝迹了)或PPP(常用于PPPoE ADSL)的用户需要它。
          This is essentially a bit-bucket device (i.e. traffic you send to this device is consigned into oblivion) with a configurable IP address. It is most commonly used in order to make your currently inactive SLIP address seem like a real address for local programs.
          If you use SLIP or PPP, you might want to say Y here. It won’t enlarge your kernel. What a deal. Read about it in the Network Administrator’s Guide, available from http://www.tldp.org/docs.html#guide.
          To compile this driver as a module, choose M here: the module will be called dummy.
<M> MAC-VLAN support
          MAC-VLAN是通过MAC地址来划分VLAN的方式,在Linux则用来给网卡添加多个MAC地址。你可以使用"ip link add link  [ address MAC ] [ NAME ] type macvlan"命令创建一个虚拟的"macvlan"设备(系统会自动打开网卡的混杂模式)，然后就可以在同一个物理网卡上虚拟出多个以太网口。Docker依赖于它.
          This allows one to create virtual interfaces that map packets to or from specific MAC addresses to a particular interface.
          Macvlan devices can be added using the “ip” command from the iproute2 package starting with the iproute2-2.6.23 release:“ip link add link  [ address MAC ] [ NAME ] type macvlan”
          To compile this driver as a module, choose M here: the module will be called macvlan.
<M> Virtual eXtensible Local Area Network (VXLAN)
          “vxlan”虚拟接口可以在第三层网络上创建第二层网络(跨多个物理IP子网的虚拟二层子网)，是一种在UDP中封装MAC的简单机制，主要用于虚拟化环境下的隧道虚拟网络(tunnel virtual network)。
          This allows one to create vxlan virtual interfaces that provide Layer 2 Networks over Layer 3 Networks. VXLAN is often used to tunnel virtual network infrastructure in virtualized environments.
          For more information see: http://tools.ietf.org/html/draft-mahalingam-dutt-dcops-vxlan-02
          To compile this driver as a module, choose M here: the module will be called vxlan.
<M> Virtual ethernet pair device
          该驱动提供了一个本地以太网隧道(设备会被成对的创建)，Docker依赖于它。
          This device is a local ethernet tunnel. Devices are created in pairs. When one end receives the packet it appears on its pair and vice versa.
<Y> Virtio network driver
          virtio虚拟网卡驱动，仅可用在基于lguest或QEMU的半虚拟化客户机中(一般是KVM或XEN)。
          This is the virtual network driver for virtio.  It can be used with QEMU based VMMs (like KVM or Xen). Say Y or M.


[Y] Ethernet driver support --->
          最常见的以太网卡驱动，针对各厂商。参考：drivers/net/ethernet/Kconfig。
          This section contains all the Ethernet device drivers
-Y- MDIO bus device drivers ----
          MDIO devices and driver infrastructure code.
-Y- PHY Device support and infrastructure --->
          数据链路层芯片简称为MAC控制器，物理层芯片简称之为PHY，通常的网卡把MAC和PHY的功能做到了一颗芯片中，但也有一些仅含PHY的“软网卡”。此选项就是对这些“软网卡”的支持。请根据实际情况选择其下的子项，参考：drivers/net/phy/Kconfig。
          Ethernet controllers are usually attached to PHY devices. This option provides infrastructure for managing PHY devices.
<M> USB Network Adapters --->
          USB网络适配器，参考：drivers/net/usb/Kconfig。
[Y] Wireless LAN --->
          无线网卡，参考：drivers/net/wireless/Kconfig。

[N] Open-Channel SSD target support ----
          Open-channel SSD 是一种遵守NVMe规范且不使用FTL技术的固态硬盘。目前此种SSD由于过于前卫还非常罕见，但是非常有前途。
          参考：drivers/lightnvm/Kconfig。
Input device support —>
          输入设备。
          参考：drivers/input/Kconfig。
          下列为勾选项：

-Y- Generic input layer (needed for keyboard, mouse, ...)
          通用输入层。只要你有任何输入设备(键盘、鼠标、手写板、触摸板、游戏杆、方向盘,游戏键盘…)，就必须选"Y"。
          Say Y here if you have any input device (mouse, keyboard, tablet, joystick, steering wheel …) connected to your system and want it to be available to applications. This includes standard PS/2 keyboard and mouse.
          Say N here if you have a headless (no monitor, no keyboard) system.
          More information is available: <file:Documentation/input/input.txt>
          If unsure, say Y.
          To compile this driver as a module, choose M here: the module will be called input.
<Y> Export input device LEDs in sysfs
          将输入设备上的LED指示灯当作标准的LED类设备导出到sysfs中。不确定的选"Y"。
{M} Polled input device skeleton
          使用轮询机制的输入设备支持，此项主要是为源码树之外的驱动准备的，内核自带的驱动若有需要会自动选中，不确定的选"N"。
*{M} Matrix keymap support library
          使用"matrix keymap"的输入设备支持，此项主要是为源码树之外的驱动准备的，内核自带的驱动若有需要会自动选中，不确定的选"N"。
<Y> Joystick interface
          游戏杆(joystick)和游戏键盘(gamepad)支持(/dev/input/jsX)。
<Y> Event interface
          将所有的输入设备事件都通过"/dev/input/eventX"以一种通用的方式进行处理.Xorg需要使用此接口，不确定的选"Y"。
          Say Y here if you want your input device events be accessible under char device 13:64+ - /dev/input/eventX in a generic way. To compile this driver as a module, choose M here: the module will be called evdev.
[Y] Keyboards --->
          键盘。
[Y] Mice --->
          鼠标。
[Y] Touchscreens --->
          触摸屏。
[Y] Miscellaneous devices --->
          其他杂项输入，支持GPIO、SPI、I2C，参考：drivers/input/misc/Kconfig。
          Say Y here, and a list of miscellaneous input drivers will be displayed. Everything that didn’t fit into the other categories is here. This option doesn’t affect the kernel.

Character devices —>
          字符设备。
          下列为勾选项：

[Y] Enable TTY
          字符终端和串口都需要TTY的支持，选"Y"。参考/drivers/tty/Kconfig。
          Allows you to remove TTY support which can save space, and blocks features that require TTY from inclusion in the kernel. TTY is required for any text terminals or serial port communication. Most users should leave this enabled.

[Y] Virtual terminal
          虚拟终端可以在一个物理终端设备上虚拟出多个"显示器+键盘"的组合(可以使用"Alt+Fn"组合键在多个虚拟终端间切换)，除非是嵌入式系统，否则必选"Y"。
          If you say Y here, you will get support for terminal devices with display and keyboard devices. These are called “virtual” because you can run several virtual terminals (also called virtual consoles) on one physical terminal. This is rather useful, for example one virtual terminal can collect system messages and warnings, another one can be used for a text-mode user session, and a third could run an X session, all in parallel. Switching between virtual terminals is done with certain key combinations, usually Alt-.
          The setterm command (“man setterm”) can be used to change the properties (such as colors or beeping) of a virtual terminal. The man page console_codes(4) (“man console_codes”) contains the special character sequences that can be used to change those properties directly. The fonts used on virtual terminals can be changed with the setfont (“man setfont”) command and the key bindings are defined with the loadkeys (“man loadkeys”) command.
          You need at least one virtual terminal device in order to make use of your keyboard and monitor. Therefore, only people configuring an embedded system would want to say N here in order to save some memory; the only way to log into such a system is then via a serial or network connection.
          If unsure, say Y, or else you won’t be able to do much with your new shiny Linux system 😃

[Y] Enable character translations in console
          在虚拟控制台(console)上支持字体映射和Unicode转换。
[Y] Support for console on virtual terminal
          内核默认将第一个虚拟终端(/dev/tty0)用作系统控制台(可以通过"console=tty3"这样的参数去修改)，将诸如模块错误/内核错误/启动信息之类的警告信息发送到这里，而且以单用户模式登录时也需要使用这个控制台。若选"N"则会导致黑屏，除非是嵌入式系统，否则必选"Y"。
-Y- Support for binding and unbinding console drivers
          虚拟终端是通过控制台驱动程序与物理终端交互的，但在某些系统上可以使用多个控制台驱动程序(如framebuffer控制台驱动程序)，该选项使得你可以选择其中之一。


[Y] Unix98 PTY support
          伪终端(PTY)是指一个"软件终端"，它是由slave(等价于一个物理终端)和master(被一个诸如xterm之类的进程用来读写slave设备)两部分组成的软设备。图形界面用户与需要支持ssh/telnet远程登录者必选。
          A pseudo terminal (PTY) is a software device consisting of two halves: a master and a slave. The slave device behaves identical to a physical terminal; the master device is used by a process to read data from and write data to the slave, thereby emulating a terminal. Typical programs for the master side are telnet servers and xterms.
          Linux has traditionally used the BSD-like names /dev/ptyxx for masters and /dev/ttyxx for slaves of pseudo terminals. This scheme has a number of problems. The GNU C library glibc 2.1 and later, however, supports the Unix98 naming standard: in order to acquire a pseudo terminal, a process opens /dev/ptmx; the number of the pseudo terminal is then made available to the process and the pseudo terminal slave can be accessed as /dev/pts/. What was traditionally /dev/ttyp2 will then be /dev/pts/2, for example.
          All modern Linux systems use the Unix98 ptys.  Say Y unless you’re on an embedded system and want to conserve memory.
[Y] Legacy (BSD) PTY support
          使用过时的BSD风格的/dev/ptyxx作为master，/dev/ttyxx作为slave，这个方案有一些安全问题，建议选"N"。
          A pseudo terminal (PTY) is a software device consisting of two halves: a master and a slave. The slave device behaves identical to a physical terminal; the master device is used by a process to read data from and write data to the slave, thereby emulating a terminal. Typical programs for the master side are telnet servers and xterms.
          Linux has traditionally used the BSD-like names /dev/ptyxx for masters and /dev/ttyxx for slaves of pseudo terminals. This scheme has a number of problems, including security.  This option enables these legacy devices; on most systems, it is safe to say N.

(256) Maximum number of legacy PTY in use
          The maximum number of legacy PTYs that can be used at any one time. The default is 256, and should be more than enough. Embedded systems may want to reduce this to save memory. When not in use, each legacy PTY occupies 12 bytes on 32-bit architectures and 24 bytes on 64-bit architectures.




[Y] /dev/mem virtual device support
          “/dev/mem"虚拟设备是整个处理器地址空间的全映射(包括所有物理内存/设备IO空间/总线映射空间)，可以用来直接存取物理内存，常用于访问物理IO设备，例如dmidecode工具可以从中提取系统识别信息(序列号、制造商、型号、等等)，或者Xorg可以用来访问显卡的物理内存或者实现用户空间驱动，同时拥有root权限的攻击者也可以使用它完成很多标准rootkit的行为。如果你需要使用用户空间的驱动或不确定，那么选"Y”。如果你觉得安全特别重要，可以选"N"。
*Serial drivers --->
          串口(COM)驱动,串口在台式机主板上正在逐渐消亡,而在笔记本和服务器上早就已经绝迹了.大多数人应该将所有子项都选"N"。但在嵌入式系统仍然使用，参考/drivers/tty/serial/Kconfig。下列为勾选项：

<Y> 8250/16550 and compatible serial support
          这是标准串口(COM)驱动，只要你想使用串口，就必选此项。
<Y> Support for OMAP internal UART (8250 based driver)
          TI OMAP平台芯片可选。
          If you have a machine based on an Texas Instruments OMAP CPU you can enable its onboard serial ports by enabling this option. This driver uses ttyS instead of ttyO.

[Y] Replace ttyO with ttyS
          将ttyO代替为ttyS。
          This option replaces the “console=ttyO” argument with the matching ttyS argument if the user did not specified it on the command line. This ensures that the user can see the kernel output during boot which he wouldn’t see otherwise. The getty has still to be configured for ttyS instead of ttyO regardless of this option. This option is intended for people who “automatically” enable this driver without knowing that this driver requires a different console= argument. If you read this, please keep this option disabled and instead update your kernel command line. If you prepare a kernel for a distribution or other kind of larger user base then you probably want to keep this option enabled. Otherwise people might complain about a not booting kernel because the serial console remains silent in case they forgot to update the command line.


<Y> Devicetree based probing for 8250 ports
          没有相关资料默认选择。
          This option is used for all 8250 compatible serial ports that are probed through devicetree, including Open Firmware based PowerPC systems and embedded systems on architectures using the flattened device tree format.
<Y> Broadcom BCM63xx/BCM33xx UART support
          没有相关资料默认选择。
          This enables the driver for the onchip UART core found on the following chipsets:
          BCM33xx (cable modem)
          BCM63xx/BCM63xxx (DSL)
          BCM68xx (PON)
          BCM7xxx (STB) - DOCSIS console


<Y> Virtio console
          Virtio虚拟控制台设备驱动，此外，该驱动还可以作为普通的串口设备(/dev/vportNpX)，用于客户机和宿主机之间的通信。仅可用在基于lguest或QEMU的半虚拟化客户机中(一般是KVM或XEN)。参考：drivers/char/Kconfig。
          Also serves as a general-purpose serial device for data transfer between the guest and host.  Character devices at /dev/vportNpn will be created when corresponding ports are found, where N is the device number and n is the port number within that device.  If specified by the host, a sysfs attribute called ‘name’ will be populated with a name for the port which can be used by udev scripts to create a symlink to the device.
<Y> Hardware Random Number Generator Core support --->
          硬件随机数发生器设备(/dev/hw_random)支持。此设备并不会直接向内核的随机数发生器填充(这是"rngd"守护进程的职责)。详情参见"Documentation/hw_random.txt"文档。参考：drivers/char/hw_random/Kconfig。
          Hardware Random Number Generator Core infrastructure.
          To compile this driver as a module, choose M here: the module will be called rng-core.  This provides a device that’s usually called /dev/hwrng, and which exposes one of possibly several hardware random number generators.
          These hardware random number generators do feed into the kernel’s random number generator entropy pool.
          If unsure, say Y.
[Y] /dev/port character device
          参考：drivers/char/Kconfig
          Say Y here if you want to support the /dev/port device. The /dev/port device is similar to /dev/mem, but for I/O ports.
          I2C support —>

-Y- I2C support
          I2C与SMBus支持，I2C(读着"I-squared-C")是用于单片机(又称"微控制器")的低速串行总线协议,它为微控制器(Microcontroller)与各种不同的低速设备通信提供了一种廉价的总线(因为只需要使用两个引脚,称为"2线")，因此广泛的应用于嵌入式环境.SMBus(System Management Bus)差不多相当于是I2C的子集，最初的目的是为了管理智能电池，现在常用于硬件监控(电压/风扇转速/温度/电池等)以及内存模块的配置(使用I2C EEPROM)，因此所有PC主板都依赖于SMBus协议。系统硬件监控工具lm_sensors和i2c-tools依赖于此模块，硬件传感器和"Video For Linux"也需要该模块的支持。详情参见"Documentation/i2c/summary"文档及整个"i2c"文件夹。不确定的选"Y"。
          参考：/drivers/i2c/Kconfig。
          I2C (pronounce: I-squared-C) is a slow serial bus protocol used in many micro controller applications and developed by Philips.  SMBus, or System Management Bus is a subset of the I2C protocol.  More information is contained in the directory <file:Documentation/i2c/>, especially in the file called “summary” there.
          Both I2C and SMBus are supported here. You will need this for hardware sensors support, and also for Video For Linux support.If you want I2C support, you should say Y here and also to the specific driver for your bus adapter(s) below.
          This I2C support can also be built as a module.  If so, the module will be called i2c-core.
[Y] SPI support  —>
          串行外设接口(Serial Peripheral Interface)是一种标准的四线同步双向串行总线，SPI类似于I2C，但比I2C的"2线"稍微复杂一些，SPI需要4个引脚(“4线”)，不但传输速率比I2C更高，还能实现全双工通信。大多数SPI设备不支持动态设备检测，有些甚至是只读或者只写的。SPI常用于微控制器(Microcontroller)与外围设备(RTC、传感器、EEPROM、FLASH、解/编码器、模数转换器、数字信号处理器)之间的通信，MMC和SD卡也可以通过SPI协议访问，而MMC接口的DataFlash卡则必须通过SPI才能访问。仅用于嵌入式环境，PC平台上没有这样的设备。
          参考：drivers/spi/Kconfig。
          The “Serial Peripheral Interface” is a low level synchronous protocol.  Chips that support SPI can have data transfer rates up to several tens of Mbit/sec.  Chips are addressed with a controller and a chipselect.  Most SPI slaves don’t support dynamic device discovery; some are even write-only or read-only.
          SPI is widely used by microcontrollers to talk with sensors, eeprom and flash memory, codecs and various other controller chips, analog to digital (and d-to-a) converters, and more. MMC and SD cards can be accessed using SPI protocol; and for DataFlash cards used in MMC sockets, SPI must always be used.
          SPI is one of a family of similar protocols using a four wire interface (select, clock, data in, data out) including Microwire (half duplex), SSP, SSI, and PSP.  This driver framework should work with most such devices and controllers.
          重要的子项：

<Y> User mode SPI device driver support
          This supports user mode SPI protocol drivers. Note that this application programming interface is EXPERIMENTAL and hence SUBJECT TO CHANGE WITHOUT NOTICE while it stabilizes.

 SPMI support ----
          系统电源管理接口(SPMI, System Power Management Interface)是一种连接PMIC(Power Management Integrated Circuits)的双线串行接口，仅用于嵌入式环境。
          参考：drivers/spmi/Kconfig。
          SPMI (System Power Management Interface) is a two-wire serial interface between baseband and application processors and Power Management Integrated Circuits (PMIC).
 HSI support ----
          高速同步串行接口(High speed synchronous Serial Interface)是移动产业处理器接口(MIPI)联盟的高速同步接口工作组发布的一项技术规范。MIPI(Mobile Industry Processor Interface)是2003年由ARM、Nokia、ST、TI等公司成立的一个联盟，目的是把手机内部的接口(如摄像头、显示屏接口、射频/基带接口等)标准化，从而减少手机设计的复杂程度和增加设计灵活性。MIPI联盟下面有不同的工作组，分别定义了一系列的手机内部接口标准，比如摄像头接口CSI，显示接口DSI，射频接口DigRF，麦克风/扬声器接口SLIMbus等。统一接口标准的好处是手机厂商根据需要可以从市面上灵活选择不同的芯片和模组，更改设计和功能时更加快捷方便。目前，MIPI联盟的董事成员包括英特尔、摩托罗拉、诺基亚、三星、意法半导体、德州仪器。
          参考：drivers/hsi/Kconfig。
          The “High speed synchronous Serial Interface” is synchronous serial interface used mainly to connect application engines and cellular modems.
-Y- PPS support —>
          秒脉冲(Pulse Per Second)驱动用来控制电流脉冲速率，可用于计时。PPS的精度可以到纳秒级，而且没有累积误差。这通常是GPS天线的一项功能，用于获取GPS卫星的授时。
          参考：drivers/pps/Kconfig。
          PPS (Pulse Per Second) is a special pulse provided by some GPS antennae. Userland can use it to get a high-precision time reference.
          Some antennae’s PPS signals are connected with the CD (Carrier Detect) pin of the serial line they use to communicate with the host. In this case use the SERIAL_LINE client support. Some antennae’s PPS signals are connected with some special host inputs so you have to enable the corresponding client support.
          To compile this driver as a module, choose M here: the module will be called pps_core.ko.
PTP clock support  —>
          精密时间协议(Precision Time Protocol)是IEEE 1588定义的一种基于以太网的高精度时间同步协议。PTP采用硬件与软件结合设计，可以提供比纯软件方式的NTP(网络时间协议)高的多的精度(微秒级)。与GPS授时相比，在提供和GPS相同的精度情况下，PTP不需要为每个设备安装GPS那样昂贵的组件，只需要一个高精度的本地时钟和提供高精度时钟戳的部件，成本较低。一般的PC和服务器上没有PTP硬件。
          参考：drivers/ptp/Kconfig。
          The IEEE 1588 standard defines a method to precisely synchronize distributed clocks over Ethernet networks. The standard defines a Precision Time Protocol (PTP), which can be used to achieve synchronization within a few dozen microseconds. In addition, with the help of special hardware time stamping units, it can be possible to achieve synchronization to within a few hundred nanoseconds.
          This driver adds support for PTP clocks as character devices. If you want to use a PTP clock, then you should also enable at least one clock driver as well.
          To compile this driver as a module, choose M here: the module will be called ptp.
-Y- Pin controllers —>
          Pin控制器。其下的各选项请根据实际硬件状况选择(皆为低功耗或嵌入式平台)。一般由其他项选中。
          参考：drivers/pinctrl/Kconfig。
-Y- GPIO Support —>
          每个芯片都会有至少一个引脚(PIN)，像CPU或者芯片组这种复杂的芯片，其引脚会有成百上千个，这些PIN就是芯片与外部沟通的渠道，每个PIN都会有它特定的功能。GPIO(General Purpose I/O)就是芯片上的一种通用功能的引脚，其功能可由使用者通过编程的方式自定义(所谓"可编程引脚")，比如使用两条PIN就可以组成I2C，使用4条PIN就可以组成SPI。嵌入式系统经常需要控制结构简单但数量众多的外部设备(比如LED的亮与灭)，使用传统的串口或者并口就太"大炮打蚊子"，而GPIO则非常适合用于控制此类数量众多的简单设备。GPIO在嵌入式设备中使用广泛，但PC平台的芯片组南桥大多也集成有GPIO引脚(但只有BIOS才知道如何使用他们)，以支持某些特殊的定制硬件。详情参见"Documentation/gpio/gpio.txt"文档，不确定的选"N"。一般由其他项选中。
          参考：drivers/gpio/Kconfig。
          This enables GPIO support through the generic GPIO library. You only need to enable this, if you also want to enable one or more of the GPIO drivers below.
          If unsure, say N.
 Dallas’s 1-wire support —>
          Dallas公司发明的单总线是比I2C更简单的总线，仅使用一个引脚(1-wire)，使用Master-Slave结构，用于连接慢速的单引脚设备，比如iButton和热传感器。主要用于嵌入式系统。
          参考：drivers/w1/Kconfig。
          Dallas’ 1-wire bus is useful to connect slow 1-pin devices such as iButtons and thermal sensors.
          If you want W1 support, you should say Y here.
          This W1 support can also be built as a module.  If so, the module will be called wire.
[Y] Adaptive Voltage Scaling class support ----
          自适应电压调节(Adaptive Voltage Scaling)技术能够动态的对设备工作电压进行精细的调整，拥有比DVFS更佳的电力利用效率，是一种降低功耗与优化性能并举的电源与性能管理技术。AVS在OMAP设备上也被称为"SmartReflex"，目前仅用于嵌入式领域。
          参考：drivers/power/avs/Kconfig。
          AVS is a power management technique which finely controls the operating voltage of a device in order to optimize (i.e. reduce) its power consumption. At a given operating point the voltage is adapted depending on static factors (chip manufacturing process) and dynamic factors (temperature depending performance). AVS is also called SmartReflex on OMAP devices.
          Say Y here to enable Adaptive Voltage Scaling class support.
[Y] Board level reset or power off —>
          允许通过操作板载的主电源，关闭或重启整个系统。仅用于嵌入式系统。
          参考：drivers/power/reset/Kconfig。
          Provides a number of drivers which either reset a complete board or shut it down, by manipulating the main power supply on the board.
          Say Y here to enable board reset and power off
[Y] Power supply class support —>
          允许用户空间程序通过sysfs/uevent接口对电源(电池、交流电、USB)进行监控。主要用于笔记本与嵌入式设备。
          参考：drivers/power/supply/Kconfig。
          Say Y here to enable power supply class support. This allows power supply (batteries, AC, USB) monitoring by userspace via sysfs and uevent (if available) and/or APM kernel interface (if selected below).
 Hardware Monitoring support —>
          当前主板大多都有一个监控硬件温度/电压/风扇转速等状况的设备，请按照主板实际使用的芯片选择相应的子项。如果你不知道究竟需要使用哪个驱动，可以使用Superiotool和sensors-detect工具进行检测。另外,某些子项可能还需要CONFIG_I2C的支持。更多详情参见"Documentation/hwmon/userspace-tools"文档。
          参考：drivers/hwmon/Kconfig。
          Hardware monitoring devices let you monitor the hardware health of a system. Most modern motherboards include such a device. It can include temperature sensors, voltage sensors, fan speed sensors and various additional features such as the ability to control the speed of the fans.  If you want this support you should say Y here and also to the specific driver(s) for your sensors chip(s) below.
          To find out which specific driver(s) you need, use the sensors-detect script from the lm_sensors package.  Read <file:Documentation/hwmon/userspace-tools> for details.
          This support can also be built as a module.  If so, the module will be called hwmon.
          下列为勾选项：

<Y> GPIO fan
<Y> Hwmon driver that uses channels specified via iio maps
<Y> National Semiconductor LM90 and compatibles
<Y> National Semiconductor LM95245 and compatibles
<M> NTC thermistor support from Murata
<M> PWM fan
<M> Texas Instruments INA219 and compatibles
<Y> Texas Instruments TMP102

-Y- Generic Thermal sysfs driver —>
          为ACPI规范中定义的"thermal"(发热控制)提供一个通用的sysfs接口，以方便与诸如温度传感器和风扇之类的设备通信。由于目前所有PC和服务器都已支持ACPI，并且发热控制也越来越重要，所以建议选"Y"。详情参见"Documentation/thermal/sysfs-api.txt"文档。
          参考：drivers/thermal/Kconfig。
          Generic Thermal Sysfs driver offers a generic mechanism for thermal management. Usually it’s made up of one or more thermal zone and cooling device. Each thermal zone contains its own temperature, trip points, cooling devices.
          All platforms with ACPI thermal support can use this driver.If you want this support, you should say Y or M here.
[Y] Watchdog Timer Support —>
          选"Y"并选中下面相应的驱动之后，再创建一个主/次设备号为10/130的字符设备"/dev/watchdog"，即可拥有一只看门狗。其工作原理是：当/dev/watchdog设备被打开后，如果喂狗守护进程超过60秒没有喂狗(写入"/dev/watchdog")，那么底层的看门狗硬件将会触发整个机器硬重启(相当于按下面板上的"RESET"按钮)。这对于提高服务器的在线率来说意义重大。详情参见"Documentation/watchdog/watchdog-api.txt"文档。
          参考：drivers/watchdog/Kconfig。
          If you say Y here (and to one of the following options) and create a character special file /dev/watchdog with major number 10 and minor number 130 using mknod (“man mknod”), you will get a watchdog, i.e.: subsequently opening the file and then failing to write to it for longer than 1 minute will result in rebooting the machine. This could be useful for a networked machine that needs to come back on-line as fast as possible after a lock-up. There’s both a watchdog implementation entirely in software (which can sometimes fail to reboot the machine) and a driver for hardware watchdog boards, which are more robust and can also keep track of the temperature inside your computer. For details, read <file:Documentation/watchdog/watchdog-api.txt> in the kernel source.
          The watchdog is usually used together with the watchdog daemon which is available from ftp://ibiblio.org/pub/Linux/system/daemons/watchdog/. This daemon can also monitor NFS connections and can reboot the machine when the process table is full.
          If unsure, say N.
Sonics Silicon Backplane  —>
          SSB(Sonics Silicon Backplane)是一种仅在嵌入式环境中使用的总线。
          参考：drivers/ssb/Kconfig。
          Support for the Sonics Silicon Backplane bus. You only need to enable this option, if you are configuring a kernel for an embedded system with this bus.
          It will be auto-selected if needed in other environments.
          The module will be called ssb.
          If unsure, say N.
{Y} Broadcom specific AMBA —>
          Broadcom特有的AMBA(Advanced Microcontroller Bus Architecture)总线支持，仅用于嵌入式环境。
          参考：drivers/bcma/Kconfig。
          Bus driver for Broadcom specific Advanced Microcontroller Bus Architecture.
[Y] ChipCommon-attached serial flash support
          参考：drivers/bcma/Kconfig。
          Some cheap devices have serial flash connected to the ChipCommon instead of independent SPI controller. It requires using a separated driver that implements ChipCommon specific interface communication.
          Enabling this symbol will let bcma recognize serial flash and register it as platform device.
[Y] BCMA Broadcom GBIT MAC COMMON core driver
          参考：drivers/bcma/Kconfig。
          Driver for the Broadcom GBIT MAC COMMON core attached to Broadcom specific Advanced Microcontroller Bus.
          If unsure, say N
[Y] BCMA GPIO driver
          参考：drivers/bcma/Kconfig。
          Driver to provide access to the GPIO pins of the bcma bus.
          If unsure, say N
[N] BCMA debugging
          参考：drivers/bcma/Kconfig。
          This turns on additional debugging messages.
          If unsure, say N
Multifunction device drivers —>
          MFD(多功能设备)的含义是"在单个芯片上集成多个功能(GPIO、触摸屏、键盘、电流调节、电源管理…)"。此种芯片通常通过一个或多个IRQ线和低速数据总线(SPI/I2C/GPIO)与主CPU进行通信。对于主系统来说，它们通过数据总线显示为一个单独的MFD设备。但透过MFD框架，又可以拥有多个相互独立的子设备(子功能)。
          参考：drivers/mfd/Kconfig。
-Y- Voltage and Current Regulator Support —>
          通用的电压与电流调节器框架，除了提供通用的电压与电流调节接口外，还能通过sysfs向用户空间提供电压与电流的状态信息。目的在于通过动态调节电压和电流，降低能耗，延长电池寿命。主要用于嵌入式环境。一般由其他项选中。
          参考：drivers/regulator/Kconfig。
          Generic Voltage and Current Regulator support.
          This framework is designed to provide a generic interface to voltage and current regulators within the Linux kernel. It’s intended to provide voltage and current control to client or consumer drivers and also provide status information to user space applications through a sysfs interface.
          The intention is to allow systems to dynamically control regulator output in order to save power and prolong battery life. This applies to both voltage regulators (where voltage output is controllable) and current sinks (where current output is controllable).
          This framework safely compiles out if not selected so that client drivers can still be used in systems with no software controllable regulators.
          If unsure, say no.
 Remote Controller support —>
          参考：drivers/media/rc/Kconfig。
          Enable support for Remote Controllers on Linux. This is needed in order to support several video capture adapters, standalone IR receivers/transmitters, and RF receivers.
          Enable this option if you have a video capture board even if you don’t need IR, as otherwise, you may not be able to compile the driver for your adapter.
          Say Y when you have a TV or an IR device.
 Multimedia support —>
          多媒体设备：摄像头、视频采集、模拟电视、数字电视、机顶盒、收音机、遥控器、数字视频广播(DVB)…内核多媒体子系统由LinuxTV项目负责维护。
          参考：drivers/media/Kconfig。
          If you want to use Webcams, Video grabber devices and/or TV devices enable this option and other options below. Additional info and docs are available on the web at https://linuxtv.org
Graphics support —>
          图形设备/显卡支持，对于不需要使用图形界面的服务器环境来说，必须的最小选项集取决于平台(BIOS/UEFI)和引导程序(GRUB/LILO/GRUB4DOS)的设置(全选"N"则屏幕将无任何显示)。
          参考：drivers/gpu。
 Sound card support —>
          声卡支持。
          参考：sound/Kconfig
          If you have a sound card in your computer, i.e. if it can say more than an occasional beep, say Y.  Be sure to have all the information about your sound card and its configuration down (I/O port, interrupt and DMA channel), because you will be asked for it.You want to read the Sound-HOWTO, available from http://www.tldp.org/docs.html#howto.
          General information about the modular sound system is contained in the files <file:Documentation/sound/oss/Introduction>.
          The file <file:Documentation/sound/oss/README.OSS> contains some slightly outdated but still useful information as well.  Newer sound driver documentation is found in <file:Documentation/sound/alsa/*>.
          If you have a PnP sound card and you want to configure it at boot time using the ISA PnP tools (read http://www.roestock.demon.co.uk/isapnptools/), then you need to compile the sound card support as a module and load that module after the PnP configuration is finished.
          To do this, choose M here and read <file:Documentation/sound/oss/README.modules>; the module will be called soundcore.
HID support —>
          HID(人机接口设备)是一种定义计算机如何与人类交互的规范，常与USB或蓝牙搭配使用，常见的设备有：键盘、鼠标、触摸板、游戏杆、遥控器、蓝牙耳机、游戏手柄、手写板等等。不过HID设备不一定要有人机接口，只要符合HID规范，就是HID设备。
          参考：drivers/hid/Kconfig
          A human interface device (HID) is a type of computer device that interacts directly with and takes input from humans. The term “HID” most commonly used to refer to the USB-HID specification, but other devices (such as, but not strictly limited to, Bluetooth) are designed using HID specification (this involves certain keyboards, mice, tablets, etc). This option adds the HID bus to the kernel, together with generic HID layer code. The HID devices are added and removed from the HID bus by the transport-layer drivers, such as usbhid (USB_HID) and hidp (BT_HIDP).
          For docs and specs, see http://www.usb.org/developers/hidpage/
          If unsure, say Y.
[Y] USB support —>
          通用串行总线(Universal Serial Bus)的目标是统一电脑的外设接口，目前几乎找不到没有USB接口的电脑，而且各种智能设备也大多带有USB接口。不要犹豫，选"Y"。
          参考：drivers/usb/Kconfig。
          This option adds core support for Universal Serial Bus (USB). You will also need drivers from the following menu to make use of it.
          下列为勾选项：

<M> Support for Host-side USB
          主机端(Host-side)USB支持。通用串行总线(USB)是一个串行总线子系统规范，它比传统的串口速度更快并且特性更丰富(供电、热插拔、最多可接127个设备等)，其目标是统一PC外设接口。USB总体上呈现一种树型结构，USB的"Host"(主设备)被称为"根"(也可以理解为是主板上的USB控制器)，USB的"Slave"(从设备)被称为"叶子"，而内部的节点则称为"hub"(集线器)。
          Universal Serial Bus (USB) is a specification for a serial bus subsystem which offers higher speeds and more features than the traditional PC serial port.  The bus supplies power to peripherals and allows for hot swapping.  Up to 127 USB peripherals can be connected to a single USB host in a tree structure.
          The USB host is the root of the tree, the peripherals are the leaves and the inner nodes are special USB devices called hubs. Most PCs now have USB host ports, used to connect peripherals such as scanners, keyboards, mice, modems, cameras, disks, flash memory, network links, and printers to the PC.
          Say Y here if your computer has a host-side USB port and you want to use USB devices.  You then need to say Y to at least one of the Host Controller Driver (HCD) options below.  Choose a USB 1.1 controller, such as “UHCI HCD support” or “OHCI HCD support”, and “EHCI HCD (USB 2.0) support” except for older systems that do not have USB 2.0 support.  It doesn’t normally hurt to select them all if you are not certain.
          If your system has a device-side USB port, used in the peripheral side of the USB protocol, see the “USB Gadget” framework instead.
          After choosing your HCD, then select drivers for the USB peripherals you’ll be using.  You may want to check out the information provided in <file:Documentation/usb/> and especially the links given in <file:Documentation/usb/usb-help.txt>.
          To compile this driver as a module, choose M here: the module will be called usbcore.
[Y] PCI based USB host interface
          A lot of embeded system SOC (e.g. freescale T2080) have both PCI and USB modules. But USB module is controlled by registers directly, it have no relationship with PCI module.
          When say N here it will not build PCI related code in USB driver.
[Y] USB announce new devices
          在syslog中记录每个新接入系统的USB设备的详细标识信息，主要用于系统调试.不确定的选"N"。
[Y] Enable USB persist by default
          根据USB规范，当USB总线被挂起(休眠)后，它必须继续提供挂起电流(1-5毫安)，以确保USB设备能保持其内部状态，并且USB集线器(HUB)能够检测连接变化(设备插入和拔出)。
          这在技术上被称为"电力会话"(power session)。如果一个USB设备的电力会话被中断，那么系统必须按照该设备已经被拔出进行处理，这是一种保守的做法。因为没有挂起电流，计算机不可能知道外围设备究竟发生了什么变化：也许依然保持连接，也许已经被拔出并在同一端口上插入了一个新设备。系统必须做最坏的打算，默认情况下，Linux的行为符合USB规范的要求。当整个电脑进入休眠状态(例如挂起到硬盘)时，包括USB总线在内所有总线都将掉电，然后当系统被唤醒，所有USB设备都会被当做在休眠前就已经被拔出来处理。这样做始终是安全的，并且也是"官方正确"的做法。对于大多数USB设备来说，这样做没有任何问题，但是对于USB存储设备(例如移动硬盘/U盘)来说，如果在休眠前有尚未卸载的文件系统(特别是根文件系统)，当系统被唤醒之后，由于无法访问该文件系统，系统可能会立即崩溃！其实不只有掉电，只要"power session"被中断(例如BIOS在唤醒过程中重置了USB控制器)，都会导致这种故障。此选项(USB-persist)就是为了解决这个问题而设置的，虽然解决的不甚完美(参见"Documentation/usb/persist.txt")，但是依然推荐选"Y"，除非你确实有选"N"的理由。当然，最保险的做法是在休眠之前先卸载所有USB设备上的文件系统，而如果根文件系统位于USB设备上，就根本不使用任何休眠功能(不论是挂起到硬盘还是挂起到内存)。
<M> xHCI HCD (USB 3.0) support
          xHCI(eXtensible Host Controller Interface)就是当下大红大紫的USB3.0主机控制器规范。
<M> EHCI HCD (USB 2.0) support
          EHCI(Enhanced Host Controller Interface)就是渐成昨日黄花的USB2.0(HighSpeed USB)主机控制器规范。
<M> OHCI HCD (USB 1.1) support
          OHCI(Open Host Controller Interface)是主要用于嵌入式环境的USB1.1(主机控制器规范，但也存在于某些老旧的SiS芯片组的PC上。
<M> USB Modem (CDC ACM) support
          USB接口的猫或ISDN适配器，基本没人用的东西。
<M> USB Mass Storage support
          USB存储设备(U盘、USB硬盘、USB软盘、USB光盘、USB磁带、记忆棒、数码相机、读卡器[包括某些笔记本内置的SD卡读卡器]等等)。该选项依赖于CONFIG_SCSI和CONFIG_BLK_DEV_SD选项。选"Y"，除非你确实知道自己在干什么。

 Ultra Wideband devices ----
          UWB(Ultra Wideband)是一种高带宽，低能耗，点对点,抗干扰性能强的无载波通信技术。UWB在较宽的频谱(3.1-10.6GHz)上，使用极低的功率(约为蓝牙的1/20)，以时间间隔极短(小于1ns)的脉冲信号进行通信。UWB主要应用于室内通信(2米范围内实现480Mbps速率，10米范围内实现110Mbps速率)，例如作为WUSB(Wireless USB)协议的传输层。如果你有UWB无线控制器，可以选"Y"，不确定的选"N"。详见"Documentation/usb/WUSB-Design-overview.txt"文档。
          参考：/drivers/uwb/Kconfig。
          UWB is a high-bandwidth, low-power, point-to-point radio technology using a wide spectrum (3.1-10.6GHz). It is optimized for in-room use (480Mbps at 2 meters, 110Mbps at 10m). It serves as the transport layer for other protocols, such as Wireless USB (WUSB).
          The topology is peer to peer; however, higher level protocols (such as WUSB) might impose a master/slave relationship.
          Say Y here if your computer has UWB radio controllers (USB or PCI) based. You will need to enable the radio controllers below.  It is ok to select all of them, no harm done.
          For more help check the UWB and WUSB related files in <file:Documentation/usb/>.
          To compile the UWB stack as a module, choose M here.
 MMC/SD/SDIO card support —>
          MMC(MultiMediaCard)/SD(Secure Digital)/SDIO(Secure Digital I/O)主机控制器。[提示]虽然许多笔记本上有SD卡插槽,但其实它们大多使用的是CONFIG_USB_STORAGE驱动,而不是这里的驱动。
          参考：/drivers/mmc/Kconfig。
          This selects MultiMediaCard, Secure Digital and Secure Digital I/O support.
          If you want MMC/SD/SDIO support, you should say Y here and also to your specific host controller driver.
 Sony MemoryStick card support ----
          Sony记忆棒是一种Sony专用的存储设备。
          参考：drivers/memstick/Kconfig。
          Sony MemoryStick is a proprietary storage/extension card protocol.
          If you want MemoryStick support, you should say Y here and also to the specific driver for your MemoryStick interface.
[Y] LED Support —>
          发光二级管(LED)支持.[提示]标准键盘上的LED灯不在此列(由input子系统控制)。
          参考：drivers/leds/Kconfig。
          Say Y to enable Linux LED support.  This allows control of supported LEDs from both userspace and optionally, by kernel events (triggers).
          下列为勾选项：

<Y> LED Class Support
<Y> LED Support for GPIO connected LEDs
<Y> PWM driven LED Support
<Y> LED driver for TLC59108 and TLC59116 controllers

[N] Accessibility support ----
          无障碍(Accessibility)支持。各种帮助残疾人使用计算机的软硬件技术，例如：盲文设备、语音合成、键盘映射等等。
          参考：drivers/accessibility/Kconfig。
          Accessibility handles all special kinds of hardware devices or software adapters which help people with disabilities (e.g. blindness) to use computers.
          That includes braille devices, speech synthesis, keyboard remapping, etc.
          Say Y here to get to see options for accessibility.This option alone does not add any kernel code.
          If you say N, all options in this submenu will be skipped and disabled.
          If unsure, say N.
 InfiniBand support ----
          InfiniBand是一种低延迟/高带宽数据中心互联架构，采用远程直接内存存取(RDMA)实现高性能处理器间通信(IPC)，同时对虚拟化技术也提供了良好的支持。主要用于服务器集群与高性能计算(HPC)领域。
          参考：drivers/infiniband/Kconfig。
          Core support for InfiniBand (IB).  Make sure to also select any protocols you wish to use as well as drivers for your InfiniBand hardware.
 EDAC (Error Detection And Correction) reporting —>
          在电磁环境比较恶劣的情况下，一些大规模集成电路常常会受到干扰，特别是像RAM这种利用双稳态进行存储的器件，往往会在强干扰下发生翻转，使原来存储的"0"变为"1"，或者"1"变为"0"，造成严重的后果(例如控制程序跑飞，关键数据出错)。随着芯片集成度的增加，发生错误的可能性也在增大，这已经成为一个不能忽视的问题。错误检测与纠正(EDAC)技术的目标就是发现并报告甚至纠正在计算机系统中发生的错误，这些错误是由CPU或芯片组报告的底层错误(内存错误/缓存错误/PCI错误/温度过高等等)，建议选"Y"。如果这些代码报告了一个错误，请到http://bluesmoke.sourceforge.net/和http://buttersideup.com/edacwiki查看更多信息。详见"Documentation/edac.txt"文档。
          参考：drivers/edac/Kconfig。
          EDAC is a subsystem along with hardware-specific drivers designed to report hardware errors. These are low-level errors that are reported in the CPU or supporting chipset or other subsystems: memory errors, cache errors, PCI errors, thermal throttling, etc…
          If unsure, select ‘Y’.
          The mailing list for the EDAC project is linux-edac@vger.kernel.org.
          下列为勾选项：

[Y] EDAC legacy sysfs
<M> Texas Instruments DDR3 ECC Controller

[Y] Real Time Clock —>
          通用RTC(实时时钟)类支持。所有的PC机主板都包含一个电池动力的实时时钟芯片，以便在断电后仍然能够继续保持时间，RTC通常与CMOS集成在一起，因此BIOS可以从中读取当前时间(精度一般是秒级)。选中此项后你就可以在操作系统中使用一个或多个RTC设备(你还必须从下面启用一个或多个RTC接口)。[注意]Clock与Timer没有任何关系，Timer是定时器(用于计量时长)，Clock是时钟(用于记录当前的时刻"年-月-日 时：分：秒")。
          参考：drivers/rtc/Kconfig。
          Generic RTC class support. If you say yes here, you will be allowed to plug one or more RTCs to your system. You will probably want to enable one or more of the interfaces below.
          下列为主要勾选项：

[Y] Set system time from RTC on startup and resume
[Y] Set the RTC time based on NTP synchronization
[Y] RTC debug support
[Y] RTC non volatile storage support
[Y] /sys/class/rtc/rtcN (sysfs)
[Y] /proc/driver/rtc (procfs for rtcN)
[Y] /dev/rtcN (character devices)
<M> Dallas/Maxim DS1307/37/38/39/40/41, ST M41T00, EPSON RX-8025, ISL12057
<M> TI Palmas RTC driver
<M> TI TPS6586X RTC driver
<M> TI TPS65910 RTC driver
<M> EFI RTC
<M> TI OMAP Real Time Clock

[Y] DMA Engine support —>
          DMA引擎(DMA Engine)可以看做是传统DMA控制器(DMA controller)的新生。在DMA引擎的协助下，CPU只需初始化一个传输动作，其余的动作就可以由DMA引擎独立完成(完成后以中断的方式通知CPU)，这对于高速传输大量数据以及"分散-收集"操作大有益处，可以节约大量的CPU资源(有时也可节约大量的内存操作)。
          目前，DMA引擎有两个用途：(1)卸载高速网络栈中的内存COPY操作，(2)加速CONFIG_MD_RAID456驱动中的RAID操作。"DMA引擎"只是一个统称，在不同场合对应着不同的技术，例如Intel I/OAT(PC平台)和AHB(嵌入式)。
          参考：drivers/dma/Kconfig。
          DMA engines can do asynchronous data transfers without involving the host CPU.  Currently, this framework can be used to offload memory copies in the network stack and RAID operations in the MD driver.  This menu only presents DMA Device drivers supported by the configured arch, it may be empty in some cases.
DMABUF options —>
          以下为勾选项：

-Y- Explicit Synchronization Framework
          参考：drivers/dma-buf/Kconfig。
          The Sync File Framework adds explicit syncronization via userspace. It enables send/receive ‘struct dma_fence’ objects to/from userspace via Sync File fds for synchronization between drivers via userspace components. It has been ported from Android.
          The first and main user for this is graphics in which a fence is associated with a buffer. When a job is submitted to the GPU a fence is attached to the buffer and is transferred via userspace, using Sync Files fds, to the DRM driver for example. More details at Documentation/sync_file.txt.

[N] Auxiliary Display support ----
          辅助显示设备。例如基于KS0108控制器的Crystalfontz CFAG12864B单色液晶屏(分辨率:128x64)。仅用于嵌入式系统。
          参考：drivers/auxdisplay/Kconfig。
          Say Y here to get to see options for auxiliary display drivers. This option alone does not add any kernel code.
          If you say N, all options in this submenu will be skipped and disabled.
 Userspace I/O drivers—>
          UIO(Userspace I/O)是运行在用户空间的I/O技术，它为开发用户空间的驱动提供了一个简单的架构(/dev/uioN)。使用uio的设备一般都属于嵌入式系统，不确定的选"N"。[提示]lsuio工具可以列出所有UIO的模块和其映射的内存地址。
          参考：drivers/uio/Kconfig。
          Enable this to allow the userspace driver core code to be built.  This code allows userspace programs easy access to kernel interrupts and memory locations, allowing some drivers to be written in userspace.  Note that a small kernel driver is also required for interrupt handling to work properly.
          If you don’t know what to do here, say N.
 VFIO Non-Privileged userspace driver framework ----
          VFIO是一套无特权用户空间I/O驱动框架，需要有IOMMU虚拟化硬件支持(AMD-Vi/Intel VT-d)。此选项仅用于宿主机内核，VFIO的目标是在IOMMU硬件的帮助下，取代CONFIG_UIO和CONFIG_KVM_DEVICE_ASSIGNMENT。VFIO主要用于编写高效的用户态驱动，以及在虚拟化环境的属主机中高效的实现设备直通(passthrough)且无须root特权，可用于详见"Documentation/vfio.txt"文档。[提示]QEMU 1.3以上版本才能利用VFIO特性。不玩KVM虚拟化的选"N"。
          参考：drivers/vfio/Kconfig。
          VFIO provides a framework for secure userspace device drivers. See Documentation/vfio.txt for more details.
          If you don’t know what to do here, say N.
[N] Virtualization drivers ----
          这个选项仅对PowerPC架构有意义。
          参考：drivers/virt/Kconfig。
          Say Y here to get to see options for device drivers that support virtualization environments.
          If you say N, all options in this submenu will be skipped and disabled.
Virtio drivers —>
          仅可用于客户机内核的Virtio驱动。Virtio的目标是为各种半虚拟化的虚拟机管理程序(特别是KVM)提供一组通用的模拟设备,目前已实现：network/block/balloon/console/hw_random，未来还会实现更多。下列驱动仅可用在基于lguest或QEMU的半虚拟化客户机中(一般是KVM或XEN)。
          参考：drivers/virtio/Kconfig。
          This option is selected by any driver which implements the virtio bus, such as
          CONFIG_VIRTIO_PCI,
          CONFIG_VIRTIO_MMIO,
          CONFIG_RPMSG,
          CONFIG_S390_GUEST.
          下列为勾选项：

<Y> PCI driver for virtio devices
          半虚拟化PCI设备驱动，VMM(虚拟机管理程序)必须要有相应的"PCI virtio backend"。基于QEMU的VMM(KVM,Xen)一般都支持该驱动。[提示]由于目前的ABI尚不稳定,建议使用时注意版本匹配。
<Y> Platform bus driver for memory mapped virtio devices
          支持使用内存映射机制的virtio设备驱动。

Microsoft Hyper-V guest support ----
          仅在将此Linux内核作为微软Hyper-V虚拟机的来宾操作系统运行时，才需要开启这里的选项。
          参考：/drivers/hv/Kconfig。
          Select this option to run Linux as a Hyper-V client operating system.
[N] Staging drivers ----
          尚在开发中或尚未完成的，目前尚不完善的驱动，切勿用于生产环境。仅供测试人员或者开发者试用。
          参考：drivers/staging/Kconfig。
          This option allows you to select a number of drivers that are not of the “normal” Linux kernel quality level.  These drivers are placed here in order to get a wider audience to make use of them.  Please note that these drivers are under heavy development, may or may not work, and may contain userspace interfaces that most likely will be changed in the near future.
          Using any of these drivers will taint your kernel which might affect support options from both the community, and various commercial support organizations.
          If you wish to work on these drivers, to help improve them, or to report problems you have with them, please see the driver_name.README file in the drivers/staging/ directory to see what needs to be worked on, and who to contact.
          If in doubt, say N here.
[N] Platform support for Goldfish virtual devices ----
          参考：drivers/platform/goldfish/Kconfig
          Say Y here to get to see options for the Goldfish virtual platform.This option alone does not add any kernel code. Unless you are building for the Android Goldfish emulator say N here.
[N] Platform support for Chrome hardware ----
          专用于Google公司的Chromebook笔记本/Chromebox迷你机的设备驱动。
          参考：drivers/platform/chrome/Kconfig。
          Say Y here to get to see options for platform support for various Chromebooks and Chromeboxes. This option alone does not add any kernel code.
          If you say N, all options in this submenu will be skipped and disabled.
          Common Clock Framework —>
          CCF(Common Clock Framework)是从3.4内核开始引入的新时钟框架，用于取代原有的"Clock Framework"。详见"Documentation/clk.txt"文档。
          参考：drivers/clk/Kconfig。
          The common clock framework is a single definition of struct clk, useful across many platforms, as well as an implementation of the clock API in include/linux/clk.h. Architectures utilizing the common struct clk should select this option.
          下列为勾选项：

<Y> Clock driver for TI Palmas devices
          This driver supports TI Palmas devices 32KHz output KG and KG_AUDIO using common clock framework.

[Y] Hardware Spinlock drivers —>
          硬件自旋锁驱动。目前仅出现在嵌入式处理器上，自旋锁是保护共享资源的一种锁机制，与互斥锁比较类似，都是为了解决对某项资源的互斥使用。无论是互斥锁，还是自旋锁，在任何时刻，最多只能有一个持有者。也就是说，在任何时刻最多只能有一个执行单元获得锁。但是两者在调度机制上略有不同，对于互斥锁，如果资源已经被占用，资源申请者只能进入睡眠状态。但是自旋锁不会引起申请者睡眠，如果自旋锁已经被别的执行单元保持，调用者就一直在循环中"忙等"(占用CPU但无事可做)，直到该自旋锁被释放。"自旋"一词就是因此而得名。自旋锁的使用非常方便，但仅适用于需要极短时间锁定的场合(例如1毫秒)，以避免消耗太多的CPU空等时间。
          参考：drivers/hwspinlock/Kconfig。
          下列为勾选项：

<Y> OMAP Hardware Spinlock device
          Say y here to support the OMAP Hardware Spinlock device (firstly introduced in OMAP4).
          If unsure, say N.

Clock Source drivers —>
          "时钟源"驱动，主要面向嵌入式设备。
          参考：drivers/clocksource/Kconfig。
          下列为勾选项：

[Y] Enable ARM architected timer event stream generation by default
          This option enables support by default for event stream generation based on the ARM architected timer. It is used for waking up CPUs executing the wfe instruction at a frequency represented as a power-of-2 divisor of the clock rate. The behaviour can also be overridden on the command line using the clocksource.arm_arch_timer.evtstream parameter. The main use of the event stream is wfe-based timeouts of userspace locking implementations. It might also be useful for imposing timeout on wfe to safeguard against any programming errors in case an expected event is not generated.
          This must be disabled for hardware validation purposes to detect any hardware anomalies of missing events.

-Y- Mailbox Hardware Support —>
          Mailbox硬件支持。这里的"Mailbox"是一个框架，通过消息队列和中断驱动信号，控制芯片上的多个处理器之间的通信。仅用于嵌入式环境。
          参考：drivers/mailbox/Kconfig。
          Mailbox is a framework to control hardware communication between on-chip processors through queued messages and interrupt driven signals. Say Y if your platform supports hardware mailboxes.
          下列为勾选项：

*{Y} OMAP2+ Mailbox framework support
(256) Mailbox kfifo default buffer size (bytes)

[Y] IOMMU Hardware Support —>
          IOMMU硬件主要出现在带有I/O虚拟化技术的硬件上，例如带有AMD-Vi或VT-d技术的芯片。IOMMU主要作用：(1)内存地址转换(例如DMA地址转换，scatter-gather)，(2)中断重映射，(3)对设备读取和写入的进行权限检查。这对于提高虚拟化性能和安全性，以及在64位系统上更好的使用32位设备，意义重大。[提示]此选项仅对宿主机有意义，如果此内核要作为来宾操作系统运行，请选"N"。
          参考：drivers/iommu/Kconfig。
          Say Y here if you want to compile device drivers for IO Memory Management Units into the kernel. These devices usually allow to remap DMA requests and/or remap interrupts from other devices on the system.
          下列为勾选项：

[Y] OMAP IOMMU Support
[Y] Export OMAP IOMMU internals in DebugFS

Remoteproc drivers —>
          现代的SoC芯片一般都会以AMP(非对称多处理器)方式集成多个不同的处理器(例如OMAP5432就在单个芯片上集成了2个Cortex-A15处理器，2个Cortex-M4处理器，1个C64x DSP)，这样就可在不同的处理器上分别运行多个不同的操作系统实例(例如，在2个Cortex-A9处理器上以SMP(对称多处理器)方式运行Linux，在2个Cortex-M3和1个C64x上分别运行不同的实时操作系统)。而Remoteproc驱动对此种场合下的处理器间通信非常有用，详见"Documentation/remoteproc.txt"和"Documentation/rpmsg.txt"文档。目前仅对嵌入式系统有意义，不确定的选"N"。
          参考：drivers/remoteproc/Kconfig。
          下列为勾选项：

<M> Support for Remote Processor subsystem
<M> OMAP remoteproc support
<M> TI PRUSS remoteproc support

Rpmsg drivers —>
          此项和上面的Remoteproc紧密相关。
          参考：drivers/rpmsg/Kconfig。
          下列为勾选项：

<M> Virtio RPMSG bus driver
<M> rpmsg Remote Procedure Call driver
<M> PRU RPMsg Communication driver

SOC (System On Chip) specific Drivers —>
          专用于单片机的设备驱动，皆为嵌入式系统。
          下列为勾选项：

[Y] TI SOC drivers support
          参考：drivers/soc/ti/Kconfig

[N] Generic Dynamic Voltage and Frequency Scaling (DVFS) support ----
          DVFS(动态电压与频率调整)可以根据系统负载动态调节设备的运行频率和电压(对于同一芯片，频率越高，需要的电压也越高)，从而达到节能目的。此选项提供了一个类似CPUfreq(CONFIG_CPU_FREQ)的通用DVFS框架(devfreq)。目前DVFS技术进在嵌入式设备(例如Exynos4/Exynos5)上普遍存在，不确定的选"N"。
          参考：drivers/devfreq/Kconfig。
          A device may have a list of frequencies and voltages available. devfreq, a generic DVFS framework can be registered for a device in order to let the governor provided to devfreq choose an operating frequency based on the device driver’s policy.
          Each device may have its own governor and policy. Devfreq can reevaluate the device state periodically and/or based on the notification to “nb”, a notifier block, of devfreq.
          Like some CPUs with CPUfreq, a device may have multiple clocks. However, because the clock frequencies of a single device are determined by the single device’s state, an instance of devfreq is attached to a single device and returns a “representative” clock frequency of the device, which is also attached to a device by 1-to-1. The device registering devfreq takes the responsibility to “interpret” the representative frequency and to set its every clock accordingly with the “target” callback given to devfreq.
          When OPP is used with the devfreq device, it is recommended to register devfreq’s nb to the OPP’s notifier head.  If OPP is used with the devfreq device, you may use OPP helper functions defined in devfreq.h.
-Y- External Connector Class (extcon) support  —>
          extcon(外部连接器类)允许用户空间通过sysfs和uevent监控外部连接器，同时也支持多状态外部连接器(也就是拥有多个连接线缆的外部连接器)。例如，一端连接到主机USB端口的多状态外部连接器，一端可以同时连接一条HDMI线缆和一个AC适配器。30针的PDMI连接器也是多状态外部连接器的常见例子。不确定的选"N"。
          参考：drivers/extcon/Kconfig。
          Say Y here to enable external connector class (extcon) support. This allows monitoring external connectors by userspace via sysfs and uevent and supports external connectors with multiple states; i.e., an extcon that may have multiple cables attached. For example, an external connector of a device may be used to connect an HDMI cable and a AC adaptor, and to host USB ports. Many of 30-pin connectors including PDMI are also good examples.
          下列为勾选项：

<M> Palmas USB EXTCON support
<M> USB GPIO extcon support

-Y- Memory Controller drivers —>
          内存控制器驱动。这里所说的"内存控制器"仅指嵌入式SoC系统中的各种控制器，不确定的选"N"。
          参考：drivers/memory/Kconfig。
 Industrial I/O support —>
          IIO子系统为各种不同总线(i2c、spi等)的嵌入式传感器驱动提供了一个统一的框架。例如：(1)模数转换器，(2)加速度传感器，(3)陀螺仪，(4)惯性测量仪，(5)电容-数字转换器，(6)压力/温度/光线传感器等等。主要用于工业领域和嵌入式领域，不确定的选"N"。
          参考：Industrial I/O support rivers。
          The industrial I/O subsystem provides a unified framework for drivers for many different types of embedded sensors using a number of different physical interfaces (i2c, spi, etc).
          下列为主要勾选项：

-Y- Enable buffer support within IIO
-Y- Industrial I/O buffering based on kfifo
-Y- Enable IIO configuration via configfs
-Y- Enable triggered sampling support
<Y> Enable software triggers support
          其他勾选项以各类芯片为主。

 Non-Transparent Bridge support ----
          PCI-E非透明桥是一个点对点PCI-E总线，用于连接两条对等的PCI-E总线。例如英特尔 Atom S1200处理器， Xeon C5500/C3500 嵌入式处理器等。具体支持的设备号(PCI_DEVICE_ID)可以查看"drivers/ntb/ntb_hw.h"文件或NTB驱动数据库，不确定的选"N"。
          参考：drivers/ntb/Kconfig。
          The PCI-E Non-transparent bridge hardware is a point-to-point PCI-E busconnecting 2 systems. When configured, writes to the device’s PCImapped memory will be mirrored to a buffer on the remote system.  Thentb Linux driver uses this point-to-point communication as a method totransfer data from one system to the other.
          If unsure, say N.
[N] VME bridge support ----
          VME(VersaModule Eurocard)总线是一种通用的计算机总线，主要用于工业控制/军用系统/航空航天/交通运输/医疗等嵌入式领域。而VME桥则是其他总线(例如PCI/PCI-E)到VME总线之间的转换芯片，不确定的选"N"。
          参考：drivers/vme/Kconfig。
          If you say Y here you get support for the VME bridge Framework.
-Y- Pulse-Width Modulation (PWM) Support —>
          PWM(脉宽调制)是将模拟信号转换为脉波的一种技术，在计算机领域，这项技术常被用于控制风扇转速和背光显示器的亮度。很多微型处理器内部都包含有PWM控制器，此选项为所有PWM控制器驱动提供了一个统一的框架，不确定的选"N"。
          参考：drivers/pwm/Kconfig。
          Generic Pulse-Width Modulation (PWM) support.
          In Pulse-Width Modulation, a variation of the width of pulses in a rectangular pulse signal is used as a means to alter the average power of the signal. Applications include efficient power delivery and voltage regulation. In computer systems, PWMs are commonly used to control fans or the brightness of display backlights.
          This framework provides a generic interface to PWM devices within the Linux kernel. On the driver side it provides an API to register and unregister a PWM chip, an abstraction of a PWM controller, that supports one or more PWM devices. Client drivers can request PWM devices and use the generic framework to configure as well as enable and disable them.
          This generic framework replaces the legacy PWM framework which allows only a single driver implementing the required API. Not all legacy implementations have been ported to the framework yet. The framework provides an API that is backward compatible with the legacy framework so that existing client drivers continue to work as expected.
          If unsure, say no.
          下列为勾选项：

<M> Freescale FlexTimer Module (FTM) PWM support
<Y> ECAP PWM support
<Y> EHRPWM PWM support

IRQ chip support ----
          参考：/drivers/irqchip/Kconfig。
          没有选择项。
 IndustryPack bus support ----
          IndustryPack是工业控制领域常用的一种总线，不确定的选"N"。
          参考：drivers/ipack/Kconfig。
          This option provides support for the IndustryPack framework.  There are IndustryPack carrier boards, which interface another bus (such as PCI) to an IndustryPack bus, and IndustryPack modules, that are hosted on these buses.  While IndustryPack modules can provide a large variety of functionality, they are most often found in industrial control applications.
          Say N if unsure.
[Y] Reset Controller Support —>
          为GPIO总线或者芯片内置的重启控制器提供通用支持，仅用于嵌入式设备。不确定的选"N"。
          参考：drivers/reset/Kconfig。
          Generic Reset Controller support.
          This framework is designed to abstract reset handling of devices via GPIOs or SoC-internal reset controller modules.
          If unsure, say no.
          下列为勾选项：

<Y> TI SYSCON Reset Driver
          This enables the reset driver support for TI devices with memory-mapped reset registers as part of a syscon device node. If you wish to use the reset framework for such memory-mapped devices, say Y here. Otherwise, say N.

 FMC support ----
          FMC(FPGA Mezzanine Carrier)是一个定义如何将FPGA夹层卡(FPGA Mezzanine Card)连接到主机电路板的接口标准，仅用于嵌入式环境。
          参考：drivers/fmc/Kconfig。
          FMC (FPGA Mezzanine Carrier) is a mechanical and electrical standard for mezzanine cards that plug into a carrier board. This kernel subsystem supports the matching between carrier and mezzanine based on identifiers stored in the internal I2C EEPROM, as well as having carrier-independent drivers.
          The framework was born outside of the kernel and at this time the off-tree code base is more complete.  Code and documentation is at git://ohwr.org/fmc-projects/fmc-bus.git .
PHY Subsystem —>
          PHY子系统。
          参考：drivers/phy/Kconfig。
          下列为勾选项：

-Y- PHY Core
          为内核中的所有PHY设备提供一个通用的PHY框架，不确定的选"N"。内核中若有其他部分依赖它，会自动选上。
          This framework is designed to provide a generic interface for PHY devices present in the kernel. This layer will have the generic API by which phy drivers can create PHY using the phy framework and phy users can obtain reference to the PHY. All the users of this framework should select this config.
          其他为部分芯片的选项。

[N] Generic powercap sysfs driver ----
          “power capping"的意思是允许用户把设备的总功耗限定在指定的范围内，此选项允许内核子系统将"power capping"的设置以sysfs的方式导出到用户空间，不确定的选"N”。
          参考：drivers/powercap/Kconfig。
          The power capping sysfs interface allows kernel subsystems to expose power capping settings to user space in a consistent way.  Usually, it consists of multiple control types that determine which settings may be exposed and power zones representing parts of the system that can be subject to power capping.
          If you want this code to be compiled in, say Y here.
 MCB support ----
          MCB(MEN Chameleon Bus)是专用于德国MEN Mikro Elektronik公司的FPGA设备的总线，MEN Mikro Elektronik公司的嵌入式计算主要是为航空/航海/铁路及陆地车辆的应用，以及自动化/电力/能源和医疗用途。不确定的选"N"。
          参考：drivers/mcb/Kconfig。
          The MCB (MEN Chameleon Bus) is a Bus specific to MEN Mikroelektronik  FPGA based devices. It is used to identify MCB based IP-Cores within  an FPGA and provide the necessary framework for instantiating drivers for these devices.
          If build as a module, the module is called mcb.ko
Performance monitor support —>
          专用于ARM架构的CPU性能监控框架。
          参考：drivers/perf/Kconfig。
          下列为勾选项：

[Y] ARM PMU framework
          Say y if you want to use CPU performance monitors on ARM-based systems.

-Y- Reliability, Availability and Serviceability (RAS) features ----
          RAS(可靠、可用、可维护)是一个计算机硬件术语，可靠性描述系统能够持续正确工作多长时间，可用性描述系统能够正确工作的时间百分比，可维护性描述系统从错误恢复到正常需要多长时间。具有高等级RAS的硬件会有一系列额外的技术保障数据的可靠性与正确性。
          参考：drivers/ras/Kconfig。
          Reliability, availability and serviceability (RAS) is a computer hardware engineering term. Computers designed with higher levels of RAS have a multitude of features that protect data integrity and help them stay available for long periods of time without failure.
          Reliability can be defined as the probability that the system will produce correct outputs up to some given time. Reliability is enhanced by features that help to avoid, detect and repair hardware faults.
          Availability is the probability a system is operational at a given time, i.e. the amount of time a device is actually operating as the percentage of total time it should be operating.
          Serviceability or maintainability is the simplicity and speed with which a system can be repaired or maintained; if the time to repair a failed system increases, then availability will decrease.
          Note that Reliability and Availability are distinct concepts: Reliability is a measure of the ability of a system to function correctly, including avoiding data corruption, whereas Availability measures how often it is available for use, even though it may not be functioning correctly. For example, a server may run forever and so have ideal availability, but may be unreliable, with frequent data corruption.
Android —>
          安卓平台专用驱动。
          参考：drivers/android/Kconfig。
          Enable support for various drivers needed on the Android platform。
 NVDIMM (Non-Volatile Memory Device) Support ----
          NVDIMM(非易失性内存)支持。
          参考：drivers/nvdimm/Kconfig。
          Generic support for non-volatile memory devices including ACPI-6-NFIT defined resources.  On platforms that define an NFIT, or otherwise can discover NVDIMM resources, a libnvdimm bus is registered to advertise PMEM (persistent memory) namespaces (/dev/pmemX) and BLK (sliding mmio window(s)) namespaces (/dev/ndblkX.Y). A PMEM namespace refers to a memory resource that may span multiple DIMMs and support DAX (see CONFIG_DAX).  A BLK namespace refers to an NVDIMM control region which exposes an mmio register set for windowed access mode to non-volatile memory.
 DAX: direct access to differentiated memory ----
          参考：drivers/dax/Kconfig。
-Y- NVMEM Support ----
          NVMEM(非易失性存储器)设备支持，包括：EEPROM、EFUSES……不确定的选"N"。
          参考：drivers/nvmem/Kconfig。
          Support for NVMEM(Non Volatile Memory) devices like EEPROM, EFUSES…
          This framework is designed to provide a generic interface to NVMEM from both the Linux Kernel and the userspace.
          This driver can also be built as a module. If so, the module will be called nvmem_core.
          If unsure, say no.
 System Trace Module devices
          仅供调试使用。
          参考：drivers/hwtracing/stm/Kconfig。
          A System Trace Module (STM) is a device exporting data in System Trace Protocol (STP) format as defined by MIPI STP standards.
          Examples of such devices are Intel® Trace Hub and Coresight STM.
          Say Y here to enable System Trace Module device support.
 Intel® Trace Hub controller
          仅供调试使用。
          参考：drivers/hwtracing/intel_th/Kconfig。
          Intel® Trace Hub (TH) is a set of hardware blocks (subdevices) that produce, switch and output trace data from multiple hardware and software sources over several types of trace output ports encoded in System Trace Protocol (MIPI STPv2) and is intended to perform full system debugging.
          This option enables intel_th bus and common code used by TH subdevices to interact with each other and hardware and for platform glue layers to drive Intel TH devices.
          Say Y here to enable Intel® Trace Hub controller support.
 FPGA Configuration Framework ----
          FPGA配置框架支持，仅用于嵌入式系统。
          参考：drivers/fpga/Kconfig。
          Say Y here if you want support for configuring FPGAs from the kernel.  The FPGA framework adds a FPGA manager class and FPGA manager drivers.
FSI support —>
          参考：drivers/fsi/Kconfig。
          FSI - the FRU Support Interface - is a simple bus for low-level access to POWER-based hardware.
 Trusted Execution Environment support
          针对移动端的安全威胁产生的可信执行环境技术。
          参考：drivers/tee/Kconfig。
          This implements a generic interface towards a Trusted Execution Environment (TEE).

*TEE drivers --->

<Y> OP-TEE
          参考：drivers/tee/optee/Kconfig。
          This implements the OP-TEE Trusted Execution Environment (TEE) driver.
==============================================================================================
对于每一个配置选项，用户可以回答"y"、"m"或"n"。其中"y"表示将相应特性的支持或设备驱动程序编译进内核；"m"表示将相应特性的支持或设备驱动程序编译成可加载模块，在需要时，可由系统或用户自行加入到内核中去；"n"表示内核不提供相应特性或驱动程序的支持。只有<>才能选择M

1. General setup（通用选项）

[*]Prompt for development and/or incomplete code/drivers，设置界面中显示还在开发或者还没有完成的代码与驱动，最好选上，许多设备都需要它才能配置。

[ ]Cross-compiler tool prefix，交叉编译工具前缀，如果你要使用交叉编译工具的话输入相关前缀。默认不使用。嵌入式linux更不需要。

[ ]Local version - append to kernel release，自定义版本，也就是uname -r可以看到的版本，可以自行修改，没多大意义。

[ ]Automatically append version information to the version string，自动生成版本信息。这个选项会自动探测你的内核并且生成相应的版本，使之不会和原先的重复。这需要Perl的支持。由于在编译的命令make-kpkg 中我们会加入- – append-to-version 选项来生成自定义版本，所以这里选N。

Kernel compression mode (LZMA)，选择压缩方式。

[ ]Support for paging of anonymous memory (swap)，交换分区支持，也就是虚拟内存支持，嵌入式不需要。

[*]System V IPC，为进程提供通信机制，这将使系统中各进程间有交换信息与保持同步的能力。有些程序只有在选Y的情况下才能运行，所以不用考虑，这里一定要选。

[*]POSIX Message Queues，这是POSIX的消息队列，它同样是一种IPC(进程间通讯)。建议你最好将它选上。

[*]BSD Process Accounting，允许进程访问内核，将账户信息写入文件中，主要包括进程的创建时间/创建者/内存占用等信息。可以选上，无所谓。

[*]BSD Process Accounting version 3 file format，选用的话统计信息将会以新的格式（V3）写入，注意这个格式和以前的 v0/v1/v2 格式不兼容，选不选无所谓。

[ ]Export task/process statistics through netlink (EXPERIMENTAL)，通过通用的网络输出工作/进程的相应数据，和BSD不同的是，这些数据在进程运行的时候就可以通过相关命令访问。和BSD类似，数据将在进程结束时送入用户空间。如果不清楚，选N（实验阶段功能，下同）。

[ ]Auditing support，审计功能，某些内核模块需要它（SELINUX），如果不知道，不用选。

[ ]RCU Subsystem，一个高性能的锁机制RCU 子系统，不懂不了解，按默认就行。

[ ]Kernel .config support，将.config配置信息保存在内核中，选上它及它的子项使得其它用户能从/proc/ config.gz中得到内核的配置,选上，重新配置内核时可以利用已有配置

Enable access to .config through /proc/config.gz，上一项的子项，可以通过/proc/ config.gz访问.config配置，上一个选的话，建议选上。

(16)Kernel log buffer size (16 => 64KB, 17 => 128KB) ，内核日志缓存的大小，使用默认值即可。12 => 4 KB，13 => 8 KB，14 => 16 KB单处理器，15 => 32 KB多处理器，16 => 64 KB，17 => 128 KB。

[ ]Control Group support（有子项），使用默认即可，不清楚可以不选。

Example debug cgroup subsystem，cgroup子系统调试例子

Namespace cgroup subsystem，cgroup子系统命名空间

Device controller for cgroups，cgroups设备控制器

Cpuset support，只有含有大量CPU(大于16个)的SMP系统或NUMA(非一致内存访问)系统才需要它。

 

[ ]enable deprecated sysfs features to support old userspace tools，在某些文件系统上(比如debugfs)提供从内核空间向用户空间传递大量数据的接口，一般不选。

[ ]Kernel->user space relay support (formerly relayfs)，内核系统区和用户区进行传递通讯的支持，这个选项在特定文件系统（relayfs）中提供数据接口支持，它可以支持从内核空间到用户空间的大批量数据传递的支持。不清楚可以不选。

[ ]Namespaces support，（有子项）命名空间支持，允许服务器为不同的用户信息提供不同的用户名空间服务，不清楚可以不选。

[ ]Initial RAM filesystem and RAM disk (initramfs/initrd) support，初始RAM的文件和RAM磁盘（ initramfs /initrd）支持（如果要采用initrd启动则要选择，否则可以不选),不需要，不用选。嵌入式linux一般不选。

[ ]Optimize for size，优化大小，-Os代替-O2参数，可能会有二进制错误问题，一般不选。

（0）Default panic timeout，添0即可。

[*]Configure standard kernel features (for small systems)，特殊内核用到，可以不选，嵌入式linux则必选。

[ ]Enable the Anonymous Shared Memory Subsystem，启用匿名共享内存子系统，不清楚可以不选。

[ ]Enable AIO support，支持AIO（Asynchronous I/O 异步事件非阻塞I/O），（包含aio.h, aio_read,向内核发出读命令，aio_write向内核写命令，详细见‘AIO介绍‘文档），AIO机制为服务器端高并发应用程序提供了一种性能优化的手段。加大了系统吞吐量，所以一般用于大型服务器，一般不用选。

[ ]Kernel Performance Events And Counters（有子项），不清楚，不选。

[*]Enable VM event counters for /proc/vmstat，允许在/proc/vmstat中包含虚拟内存事件记数器。

[*]Enable SLUB debugging support，支持SLUB内存分配管理器调试，

[ ]Disable heap randomization，禁用随即head，选不选均可。

Choose SLAB allocator (SLUB (Unqueued Allocator))  --->， 选择内存分配管理器，强烈推荐使用SLUB。

[ ]Profiling support，剖面支持，用一个工具来扫描和计算计算机的剖面图，支持系统测评，一般开发人员使用，不选。

[ ]Kprobes，调试人员使用，不选。

GCOV-based kernel profiling  --->（有子项），默认即可。

2. Enable loadable module support(可加载模块)

[ ]Forced module loading， 强行加载模块，不建议选。

[*]Module unloading，支持模块卸载，必须选上。

[ ]Forced module unloading，强行卸载模块，即使内核认为这样并不安全，也就是说你可以把正在使用中的模快卸载掉。如果你不是内核开发人员或者骨灰级的玩家，不建议选。

[ ]Module versioning suppor，这个功能可以让你使用其它版本的内核模块，除非特殊需要，一般不选。

[ ]Source checksum for all modules，这个功能是为了防止更改了内核模块的代码但忘记更改版本号而造成版本冲突,现在很少使用，不选。

3. Enable the block layer(块设备层)

[*]Support for large (2TB+) block devices and files，仅在使用大于2TB的块设备时需要

[*]Block layer SG support v4，通用SCSI设备第四版支持。

[*]Block layer data integrity support，块设备数据完整性支持。

[*]IO Schedulers  --->（有子项），IO调度器

[ ]Anticipatory I/O scheduler，抢先式I/O调度器，大多数块设备只有一个物理查找磁头(例如一个单独的SATA硬盘),将多个随机的小写入流合并成一个大写入流,用写入延时换取最大的写入吞吐量.适用于大多数环境,特别是写入较多的环境(比如文件服务器)

[ ]Deadline I/O scheduler，期限式I/O调度器，轮询的调度器,简洁小巧,提供了最小的读取延迟和尚佳的吞吐量,特别适合于读取较多的环境(比如数据库)。

[ ]CFQ I/O scheduler，使用QoS策略为所有任务分配等量的带宽,避免进程被饿死并实现了较低的延迟,可以认为是上述两种调度器的折中.适用于有大量进程的多用户系统CFQ调度器尝试为所有进程提供相同的带宽。它将提供平等的工作环境，对于桌面系统很合适。

Default I/O scheduler (CFQ)  --->默认IO调度器有上面三个IO调度器：抢先式是传统的，它的原理是一有响应，就优先考虑调度。如果你的硬盘此时在运行一项工作，它也会暂停下来先响应用户。期限式则是：所有的工作都有最终期限，在这之前必须完成。当用户有响应时，它会根据自己的工作能否完成，来决定是否响应用户。CFQ则是平均分配资源，不管你的响应多急，也不管它的工作量是多少，它都是平均分配，一视同仁的。

4. System Type(arm 占用配置，一般是厂家提供，与第7项代替了原有的Processor type and features)

5. [ ]FIQ Mode Serial Debugger，一般不选。

6. Bus support(总线支持)

PCI support，PCI总线支持，主板上最长用的插槽，最好选上，arm linux可以不选，arm一般没有PCI总线。

PCCard (PCMCIA/CardBus) support，一般笔记本有这种插槽，笔记本选上，arm linux 不选。

7. Kernel Features(内核特征)

[ ] Tickless System (Dynamic Ticks)，非固定平率系统，能让内核运行的更有效率，并且省电，pc下可选，特别是笔记本，arm linux一般不用选。

[ ] High Resolution Timer Support，支持高频率时间发生器，需要硬件兼容，但大多数PC和ARM都不支持，不选

Memory split (2G/2G user/kernel split)  --->，内核与用户空间各占2G，内核空间0-0x7FFFFFFF,用户空间80000000-FFFFFFFF

Preemption Model (No Forced Preemption (Server))  --->，内核抢占模式。普通PC用户一般选2，arm linux 选1就可以。

No Forced Preemption (Server)，禁止内核抢占，适合服务器环境。针对于高吞吐量的设计，但有可能延时较长，适用于服务器或科学运算，或向要最大的运算能力，而不理会调度上的延时。

Voluntary Kernel Preemption (Desktop)，自愿内核抢占，适合普通的桌面环境。已降低吞吐量为代价，降低内核调度的最大延时，提供更快的应用程序响应，即使系统已经高负荷运转，应用程序仍然能运行的很“流畅”，适合用户桌面环境

Preemptible Kernel (Low-Latency Desktop)，主动内核抢占，适合运行实时程序的环境。更低的吞吐量，进一步降低内核的调度延时，使应用程序更加流畅。

[ ]Compile the kernel in Thumb-2 mode，编译Thumb-2 mode内核，一般不选

[*] Use the ARM EABI to compile the kernel，与下面绑定配置。

[*] Allow old ABI binaries to run with this kernel (EXPERIMENTAL)，对于嵌入式系统(jffs2 yaffs2)，这两个要选上，否则很可能启动的时候报错（kernel panic- not syncing: Attempted to kill init!）

[ ] High Memory Support (EXPERIMENTAL)（有子项）， 1G物理内存以下不选，超过1G才选。（配置略有变化，以前的选项是OFF（<1G）,4G(>1G && <4G),64G(>4G)）。

Allocate 2nd-level pagetables from highmem，1G物理内存以下不选，超过1G（小于4G）才选

Allocate 3nd-level pagetables from highmem，大于4G，选择此项目。

Memory model (Flat Memory)  --->，一般选"Flat Memory",其他选项涉及内存热插拔。

[ ] Enable KSM for page merging，允许linux内核识别出包含相同内容的内存页，然后合并这些内存页，将数据整合在一个位置可以多次引用，特殊功能，不用选。

(4096) Low address space to protect from user allocation，默认4096即可

[ ] Use kernel mem{cpy,set}() for {copy_to,clear}_user() (EXPERIMENTAL)，不清楚可以不选。

----------------- ----------------- ----------------- -----------------

附：yaffs2 文件系统:Kernel panic - not syncing: Attempted to kill init!  

在内核挂载根文件系统时，提示Kernel panic - not syncing: Attempted to kill init!的解决方法：

方法1：

Kernel Features  --->

[*] Use the ARM EABI to compile the kernel                 

[*]   Allow old ABI binaries to run with this kernel (EXPERIMENTA)

方法2：

修改busybox的Makefile

修改

CC=$(CROSS_COPILE)gcc

为

CC=$(CROSS_COPILE)gcc -march=armv4t

一般海思编译器选择此选项，linux-gcc-3.4.5 以下的编译器，不用选，如果用4.3.3（支持EABI的编译器）以上的最好选上。

 

8. Boot options

一般不需要配置，u-boot会把启动参数传递给内核。如果bootloader没有传参数，可以配置启动参数，类似下面这样：

(0x0) Compressed ROM boot loader base address

(0x0) Compressed ROM boot loader BSS address

(mem=32M console=ttySAC0 root=/dev/ram initrd=0x30800000,4M ramdisk_size=4096 rw) Default kernel command string

 

9. CPU Power Management

[ ] CPU idle PM support,允许软件控制的空闲进程电源管理，arm linux一般不用选。

10. Floating point emulation(浮点运算，(arm专用)看arm是否支持硬浮点协处理器，支持的话选择VFP，不支持选择NWFPE)

[ ] NWFPE math emulation

[ ] FastFPE math emulation (EXPERIMENTAL)

[*] VFP-format floating point maths

[ ] Advanced SIMD (NEON) Extension support

10. Userspace binary formats(二进制支持)

[*] Kernel support for ELF binaries，必须选，否则内核可能不能启动，其他可以全部不选，

[ ] Write ELF core dumps with partial segments

< > Kernel support for a.out and ECOFF binaries

< > Kernel support for MISC binaries

11. Power management options（电源管理）

一般用于笔记本，PC和arm可以不选。

[*] Power Management support，选择此项，下面的项才能可见

[ ] Power Management Debug Support，调试用，不用选

[*] Suspend to RAM and standby，待机到内存，即内存供电而暂时关闭硬盘等外设。

< > Advanced Power Management Emulation，高级电源管理，

[ ] Run-time PM core functionality，允许对运行中接入的I/O设备进行电源管理。

12. Networking support，（协议层的网络支持，socket等，硬件层的支持在Device Drivers中配置）

Networking options  --->，网络选项

<*> Packet socket，这种socket能够让应用程序（tcpdump，iptables）直接与网络设备通讯，而不通过内核中的其他中介协议，最好选上。

<*> Unix domain sockets，一种仅运行于本机上的效率高于TCP/IP 的socket,简称Unix socket.许多程序都使用它在操作系统内部进行进程间通信(IPC),比如X Window 和syslog，最好选上。

< > Transformation user configuration interface，为IPsec(可在ip层加密)之类的工具提供XFRM 用户配置接口支持，不清楚可以不选。

[ ] Transformation sub policy support (EXPERIMENTAL)，XFRM子策略支持,仅供开发者使用，不清楚不要选。

[ ] Transformation migrate database (EXPERIMENTAL)，

[ ] Transformation statistics (EXPERIMENTAL)，

< > PF_KEY sockets，用于可信任的密钥管理程序和操作系统内核内部的密钥管理进行通信,IPsec也依赖于它，可以不选。

[ ]   PF_KEY MIGRATE (EXPERIMENTAL)，子项，不用选。

[*] TCP/IP networking，TCP/IP协议，必须要选

[*]   IP: multicasting，群组广播，选上

[]   IP: advanced router，高级路由功能，做路由器的话选上，可以不选。

Choose IP: FIB lookup algorithm (choose FIB_HASH if unsure) (FIB_HASH)，子项，不懂的话就选FIB_HASH吧

[ ]   IP: policy routing，策略路由，不清楚可以不选。

[ ]   IP: equal cost multipath，用于路由的基于目的地址的均衡。不清楚可以不选。

[ ]   IP: verbose route monitoring，显示冗余的路由监控信息，可以不选

[ ]   IP: kernel level autoconfiguration，内核启动时自动配置IP地址、路由表等，需要从网络启动的无盘工作站需要这个，普通用户不需要。

< >  IP: tunneling，IP隧道，将一个IP报文装在另一个IP报文的技术。不清楚不用选。

< >  IP: GRE tunnels over IP，基于IP的GRE（通用路由封装）隧道，不清楚可以不选。

[]   IP: multicast routing，多重传播路由，没有特殊需求可以不选。

[ ]     IP: multicast policy routing，子项，不清楚可以不选

[ ]     IP: PIM-SM version 1 support，子项，不清楚可以不选

[ ]     IP: PIM-SM version 2 support，子项，不清楚可以不选

[ ]   IP: ARP daemon support，废弃功能，不选。

[ ]   IP: TCP syncookie support，抵抗SYN flood攻击的好东西,要启用它必须同时启用/proc文件系统和"Sysctlsupport", 然后在系统启动并挂载了/proc 之后执行"echo 1>/proc/sys/net/ipv4/tcp_syncookies"命令，不清楚可以不选。

< >  IP: AH transformation，IPsec验证头(AH),实现了数据发送方的验证处理,可确保数据既对于未经验证的站点不可用也不能在路由过程中更改，不清楚可以不选。

< >  IP: ESP transformation，IPsec封闭安全负载(ESP),实现了发送方的验证处理和数据加密处理,用以确保数据不会被拦截/查看或复制。不清楚可以不选。

< >  IP: IPComp transformation，IPComp(IP静荷载压缩协议),用于支持IPsec，不清楚可以不选。

< >  IP: IPsec transport mode，IPsec传输模式,常用于对等通信,用以提供内网安全.数据包经过了加密但IP头没有加密,因此任何标准设备或软件都可查看和使用IP头，不清楚可以不选。

< >  IP: IPsec tunnel mode，IPsec隧道模式,用于提供外网安全(包括虚拟专用网络).整个数据包(数据头和负载)都已经过加密处理且分配有新的ESP 头/IP 头和验证尾,从而能够隐藏受保护站点的拓扑结构，不清楚可以不选。

< >  IP: IPsec BEET mode，IPsec BEET模式，不清楚可以不选。

[*]   Large Receive Offload (ipv4/tcp)，针对 TCP 流量的 LRO (Large Receive Offload) 支持，选上。

<*>  INET: socket monitoring interface，socket监视接口,一些Linux 本地工具(如:包含ss的iproute2)需要使用它，选上

[]   TCP: advanced congestion control  --->，高级拥塞控制,如果没有特殊需求(比如无线网络)就别选了,内核会自动将默认的拥塞控制设为"Cubic"并将"Reno"作为候补，可以不选。如果网络用处较多，还是选上为好（如网络视频服务器）。 关于拥塞控制，见tcp拥塞控制.doc文档。

[ ]   TCP: MD5 Signature Option support (RFC2385) (EXPERIMENTAL)，不清楚可以不选。

<*>   The IPv6 protocol  --->，IPV6支持的话，就选上，

[*] Only allow certain groups to create sockets，只允许特定的群体创建socket，选上，没什么坏处。

[*] Network activity statistics tracking，最好选上。

…….网络选项中，后面的不清楚的话 可以不选，选上基本几项，网络就可以工作了，有时间进一步深入研究。

 

-*-   Wireless  --->（无线，没有无线网卡的话可以不选）

<*>   cfg80211 - wireless configuration API，暂时未会，使用默认配置

13. Device Drivers（设备驱动）

Generic Driver Options  --->，通用选项

(/sbin/mdev) path to uevent helper，不理解，用的默认值

[ ] Maintain a devtmpfs filesystem to mount at /dev，让devtmpfs文件系统安装在/dev，不清楚可以不选。

[*] Select only drivers that don't need compile-time external firmware，只显示那些不需要内核对外部设备的固件作map支持的驱动程序,除非你有某些怪异硬件,否则请选上。

[ ] Prevent firmware from being built，不编译固件（固化的软件，如bios）.固件一般是随硬件的驱动程序提供的,仅在更新固件的时候才需要重新编译。可以不选，但想要更新固件的话就要重新编译内核了。

{*} Userspace firmware loading support，提供某些内核之外的模块需要的用户空间固件加载支持,在内核树之外编译的模块可能需要它，选上。

[*]  Include in-kernel firmware blobs in kernel binary 

()   External firmware blobs to build into the kernel binary

< > Connector - unified userspace <-> kernelspace linker  --->，用户空间和内核空间连接器，工作在netlink socket协议的顶层，不清楚可以不选。

<*> Memory Technology Device (MTD) support  --->，特殊的存储技术，如常用语数码相机或嵌入式系统的闪存卡，一般是NOR flash和Nand的支持，arm linux必选，PC不用选。

[ ]   Debugging，调试模式，不选。

< >  MTD tests support，MTD测试支持，不清楚可以不选。

< >  MTD concatenating support，连接多个MTD设备，例如使用JFFS2文件系统管理多片Flash的情形。只有一片Flash时不选。

[*]  MTD partitioning support，分区支持，选上。

< >     RedBoot partition table parsing，使用RedBoot解析Flash分区表,如果需要读取这个分区表的信息选择此项

[*]     Command line partition table parsing，允许通过内核命令行传递MTD分区表信息，

< >     ARM Firmware Suite partition parsing，使用AFS分区信息

< >     TI AR7 partitioning support，AR7分区支持

<*>  Direct char device access to MTD devices，将系统中的MTD设备看做字符设备进行读写，需要与驱动同步的。

-*-  Common interface to block layer for MTD 'translation layers'

<*>  Caching block device access to MTD devices，文件系统挂载后，模拟块设备进行访问。常用于只读文件系统。如果是DiskOnChip使用NFTL方式。

< >  FTL (Flash Translation Layer) support，提供对Flash翻译层支持，可以不选

< >  NFTL (NAND Flash Translation Layer) support，NAND Flash翻译层支持，可以不选

< >  INFTL (Inverse NAND Flash Translation Layer) support，提供INFTL支持，DiskOnChip使用

< >  Resident Flash Disk (Flash Translation Layer) support，提供RFD支持，为嵌入式系统提供类似BIOS功能，不清楚可以不选，使用Uboot驱动的话也不用选。

< >  NAND SSFDC (SmartMedia) read only translation layer，NAND SSFDC只读翻译层，不清楚可以不选。

< >  SmartMedia/xD new translation layer，不清楚可以不选。

< >  Log panic/oops to an MTD buffer，MTD缓冲日志，不清楚可以不选。

RAM/ROM/Flash chip drivers  --->，RAM/ROM/Flash芯片驱动，不清楚可以不选。

Mapping drivers for chip access  --->，为芯片的访问方式选择Mapping驱动，不清楚可以不选。

Self-contained MTD device drivers  --->，自身包含MTD设备驱动，一般不选。

< >  Include chip ids for known NAND devices.，NAND flash信息，不用选。

< >  NAND Device Support  --->，Nand设备支持，有nand的话选上，子项默认配置即可，如果支持Nand，加选这一项就够了。

< >  OneNAND Device Support  --->，One nand支持，不清楚可以不选。

LPDDR flash memory drivers  --->，LPDDR Flash内存驱动，未用，不用选。

UBI - Unsorted block images  --->未分类block影响，不清楚不选。

附：配置支持jffs2两步

1) 在“memory technology devices(mtd)”选项中选择:

<*>memory technology device(mtd)support

<*>mtd partitioning support

<*>cashing block device access to mtd devices

ram/rom/flash chip drivers--->

<*> detect flash chips by common flash interface(cfi) probe

<*> support for intel/sharp flash chips

mapping drivers for chip access--->

<*> cfi flash device in physical memory map

(0)   physical start address of flash mapping

(1000000)physical length of flash mapping

(2)buswidthin octets

<*> intel strataflash device mapped on at91rm9200

这里设置了flash芯片的起始地址、大小以及宽度，比如:起始地址为“0”，大小为“1000000”，即16mb，宽度为“2”，即16字节。然后选中自己加入的“intel strataflash device mapped on at91rm9200”这一项

2) 在“file systems”选项中选择:

<*>joumalling flash file system v2(jffs2)support

对于其他功能，可根据自己的实际情况，进行裁减，然后保存退出，接下来编译出操作系统内核映像。(详细见 linux支持nor flash.txt 文档)

 

< > Parallel port support  --->，配置并口，如打印机，arm linux可以不用配置

< >   PC-style hardware (NEW)，

< >   AX88796 Parallel Port (NEW)，

[ ]    IEEE 1284 transfer modes (NEW)，

[*] Block devices  --->，块设备，一般都不用选，除非有特殊需要

< >   Loopback device support，拿文件来模拟块设备，想要mount ios文件的话必须选上，一般不选。

< >   Network block device support，网络块设备支持，让PC成为网络块设备的客户端。一般不选

< >   Low Performance USB Block driver，低性能USB块设备驱动程序，一般不选。

<*>   RAM block device support，RAM块设备支持，子选项保持默认就好了。

< >   Packet writing on CD/DVD media，不清楚可以不选。

< >   ATA over Ethernet support，不清楚可以不选。

[*] Misc devices  --->，混杂设备驱动，一般不选。

< > ATA/ATAPI/MFM/RLL support (DEPRECATED)  --->，不清楚可以不选。

SCSI device support  --->，支持u盘的话，需要选上。

< > RAID Transport Class，不清楚可以不选。

<*> SCSI device support，支持u盘选上，子选项默认配置即可。

< > Serial ATA and Parallel ATA drivers  --->，SATA和PATA支持，没有硬盘的话可以不选。

[ ] Multiple devices driver support (RAID and LVM)  --->，特殊服务器管理用到，如LVM，一般用户不会用到，不用选，

[*] Network device support  --->，网络设备支持，必选。包括前兆网卡，PPPOE等的支持。

[*] HID Devices  --->，HID支持，选上

[*] USB support  --->，USB支持，选上

<*> MMC/SD/SDIO card support  --->，SD卡支持，选上。

……

其他选项根据需求来。在嵌入式linux中一般IIC SPI等device都自己写驱动，不用选。

14. File systems（文件系统）

<*> Second extended fs support，EXT2文件系统支持。

[*]   Ext2 extended attribute，EXT2文件系统支持。

<*> Ext3 journalling file system support，EXT3文件系统支持，子项默认就行。

<*> The Extended 4 (ext4) filesystem ，EXT4文件系统支持，子项默认就行。

……

有JFS（IBM所用）文件系统等，省略，用的不多。

……

[*] Enable POSIX file locking API，使能POSIX文件锁的API，最好选上。

[*] Dnotify support，基于目录的文件变化的通知机制，不选nfsd起不来，比选的。

[ ] Inotify file change notification support，新式的文件体统的变化通知机制，用以替代老旧的Dnotify，选了Dnotify就不要选它了。

[*] Inotify support for userspace，用户空间的Inotify支持，最好选上。（notify 是一个 Linux特性，它监控文件系统操作，比如读取、写入和创建）。

<*> FUSE (Filesystem in Userspace) support，允许在用户空间实现一个文件系统，如果打算开发一个自己的文件系统或使用一个机遇FUSE的文件系统，最好打开。

<*>   Character device in Userpace support，允许在用户空间实现一个字符设备，

-*- Miscellaneous filesystems  --->，杂项文件系统，子项很复杂，主要配置jffs2 和 yaffs2文件系统，一般用于嵌入式设备。

[*] Network File Systems  --->，网络文件系统，NFS等。

……

其他没有特殊需求可以不选。

15. Kernel hacking（内核hack选项，基本上选Enable __must_check logic和Stacktrace就可以了，有需要再深入研究）

[ ] Show timing information on printks，在printk的输出中包含时间信息,可以用来分析内核启动过程各步骤所用时间，需要时选上。

[ ] Enable __deprecated logic，不清楚不要选。

[*] Enable __must_check logic，在编译内核的过程中使用"必须检查"的逻辑,禁用它将不会显示某些警告信息，选上。

[ ] Magic SysRq key，不懂，千万别选。

[ ] Strip assembler-generated symbols during link，，不清楚不要选。

[ ] Enable unused/obsolete exported symbols，没用的信息符号，会使内核增大，不选.

[ ] Debug Filesystem，不是内核开发者的别选。

[ ]Run 'make headers_check' when building vmlinux，在编译内核时运行'make headers_check'命令检查内核头文件,当你修改了与用户空间相关的内核头文件后建议启用该选项。

[ ] Kernel debugging，不是内核开发者的别选。

[ ] SLUB debugging on by default，不清楚不要选。

[ ] Enable SLUB performance statistics，不清楚不要选。

[*] Stacktrace，支持调用栈，用于出错排查问题。

[ ] Debug memory initialization，调试内存初始化，不选，

[ ] Check for stalled CPUs delaying RCU grace periods ，检查停止CPU延缓RCU的宽限期，

[ ] Latency measuring infrastructure，不清楚不要选。

[ ] Sysctl checks，不清楚不要选。

[ ] Tracers  --->，不清楚不要选。

[ ] Perform an atomic64_t self-test at boot，不清楚不要选。

[ ] Sample kernel code  --->  ，不清楚不要选。

[*] Enable stack unwinding support，可以不选（31没选）。

[*] Verbose user fault messages，可以不选（31没选）。

[ ] On-chip ETM and ETB，片上ETM、ETB，不清楚可以不选。

16. Security options（安全选项，一般不需要配置，）

[ ]  Enable the /proc/keys file by which keys may be viewed，允许有权限的进程通过/proc/keys读取所有的key，最好不要选。

[ ]  Restrict unprivileged access to the kernel syslog，限制未经授权访问内核日志。

[ ]  Enable different security models，允许内核选择不同的安全模式，如果未选择按默认处理。

[*] Enable the securityfs filesystem，不清楚可以不选（16没选）。

Default security module (Unix Discretionary Access Controls)  --->，默认安全模式。

17. Cryptographic API（支持的加密算法） 

18. Library routines（库子程序）
====================================================================



Generic Driver Options

驱动程序通用选项 
Select only drivers that don't need compile-time external firmware

只显示那些不需要内核对外部设备的固件作map支持的驱动程序,除非你有某些怪异硬件,否则请选上 

Prevent firmware from being built

不编译固件.固件一般是随硬件的驱动程序提供的,仅在更新固件的时候才需要重新编译.建议选上 

Userspace firmware loading support

提供某些内核之外的模块需要的用户空间固件加载支持,在内核树之外编译的模块可能需要它 

Driver Core verbose debug messages

让驱动程序核心在系统日志中产生冗长的调试信息,仅供调试 
Connector - unified userspace <-> kernelspace linker

统一的用户空间和内核空间连接器,工作在netlink socket协议的顶层.不确定可以不选 

Report process events to userspace

向用户空间报告进程事件(fork,exec,id变化(uid,gid,suid) 
Memory Technology Devices (MTD)

特殊的存储技术装置,如常用于数码相机或嵌入式系统的闪存卡 
Parallel port support

并口支持(传统的打印机接口) 
Plug and Play support

即插即用支持,若未选则应当在BIOS中关闭"PnP OS".这里的选项与PCI设备无关 

PnP Debug Messages 

该选项仅供调试使用 
ISA Plug and Play support

ISA设备即插即用支持 
Plug and Play BIOS support

Linux使用"Plug and Play BIOS"规范v1.0A(1994年)中定义的PNPBIOS自动检测主板上的资源和设备,但是其中的某些特性目前尚未实现,比如:事件通知/扩展坞(Docking Station)信息/ISAPNP服务.如果你希望由内核检测主板上的设备并为其分配资源(此时BIOS中的"PnP OS"必须开启)可以选上,此外,PNPBIOS还有助于防止主板上的设备与其他总线设备冲突.不过需要注意的是ACPI将会逐渐取代PNPBIOS(虽然目前两者可以共存),所以如果你的系统不使用ISA设备并且支持ACPI,建议你不要选中该选项并将BIOS中的"PnP
 OS"关闭 
Plug and Play BIOS /proc interface

该选项仅供调试使用 
Plug and Play ACPI support

让Linux使用PNPACPI自动检测主板上内建的设备并为其分配资源(即使这些设备已被BIOS禁用),它有助于避免设备之间的资源(如中断)冲突

Block devices 

块设备 
Normal floppy disk support

通用软驱支持 
XT hard disk support 

古董级产品 
Parallel port IDE device support

通过并口与计算机连接的IDE设备,比如某些老旧的外接光驱或硬盘之类 
Compaq SMART2 support

基于Compaq SMART2控制器的磁盘阵列卡 
Compaq Smart Array 5xxx support

基于Compaq SMART控制器的磁盘阵列卡 
Mylex DAC960/DAC1100 PCI RAID Controller support

古董级产品 
Micro Memory MM5415 Battery Backed RAM support

一种使用电池做后备电源的内存 
Loopback device support

Loopback是指拿文件来模拟块设备,比如可以将一个iso9660镜像文件挂成一个文件系统 

Cryptoloop Support 

使用系统提供的加密API对Loopback设备加密,但不能用于日志型文件系统 
Network block device support

让你的电脑成为网络块设备的客户端 
Promise SATA SX8 support

基于Promise公司的SATA SX8控制器的RAID卡 
Low Performance USB Block driver

它不是用来支持U盘的,不懂的就别选 
RAM disk support 

内存中的虚拟磁盘,大小固定(由下面的选项决定,也可给内核传递"ramdisk_size=参数"来决定),它的功能和代码都比shmem简单许多

Default number of RAM disks

默认RAM disk的数量 
Default RAM disk size (kbytes)

仅在你真正知道它的含义时才允许修改 
Default RAM disk block size (bytes)

每一个RAM disk的默认块大小,设为PAGE_SIZE的值时效率最高 
Initial RAM filesystem and RAM disk (initramfs/initrd) support

如果启动计算机所必须的模块都在内核里的话可以不选此项 
Packet writing on CD/DVD media

CD/DVD刻录支持 
Free buffers for data gathering

用于收集写入数据的缓冲区个数(每个占用64Kb内存),缓冲区越多性能越好 
Enable write caching 

为CD-R/W设备启用写入缓冲,目前这是一个比较危险的选项 
ATA over Ethernet support

以太网ATA设备支持 
Misc devices 
杂项设备 
ATA/ATAPI/MFM/RLL support

通常是IDE硬盘和ATAPI光驱.纯SCSI系统且不使用这些接口可以不选 
Max IDE interfaces 

最大IDE接口数,两个IDE插槽一般相当于4个接口 
Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support

EIDE支持是当然要选的,否则540MB以上的硬盘都不认识而且不支持主从设备 
Support for SATA (deprecated; conflicts with libata SATA driver)

反对使用,该选项与libata SATA驱动有冲突 
Use old disk-only driver on primary interface

没人用这些古董了 
Include IDE/ATA-2 DISK support

ATA-2支持,除非你的硬盘是古董,否则必选 
Use multi-mode by default

如果不确定就别选,除非出现帮助中指出的错误 
PCMCIA IDE support 

通过PCMCIA卡与计算机连接的IDE设备,比如某些外置硬盘或光驱 
Include IDE/ATAPI CDROM support

有IDE光驱的就选 
Include IDE/ATAPI TAPE support

有IDE磁带的就选 
Include IDE/ATAPI FLOPPY support

有IDE软驱的就选 
SCSI emulation support

SCSI仿真,以前刻录光碟时需要,现在不需要了 
IDE Taskfile Access 

对介质进行直接的原始访问,它是一个复杂且有效的测试和校验硬件的方案,可以在驱动层之下执行数据恢复工作

generic/default IDE chipset support

通用IDE芯片组支持 
CMD640 chipset bugfix/support

586以前的主板上常用,毛病多多 
PNP EIDE support 

外接的即插即用EIDE卡支持 
PCI IDE chipset support

基于PCI总线的IDE芯片组支持,帮助IDE驱动自动检测和配置所有基于PCI的IDE接口 

Sharing PCI IDE interrupts support

与其他PCI设备共享中断,一来可能冲突,二来降低性能,不选为妙 
Boot off-board chipsets first support

不使用外接IDE控制器的就别选,使用外接IDE控制器的注意看帮助 
Generic PCI IDE Chipset Support

通用的PCI IDE芯片组支持,如果你的芯片组在下面能找到就别选 
OPTi 82C621 chipset enhanced support

OPTi 82C621 EIDE控制器 
RZ1000 chipset bugfix/support

486/586年代的玩艺 
Generic PCI bus-master DMA support

通用的PCI总线控制器DMA支持,586以上的系统都支持 
Force enable legacy 2.0.X HOSTS to use DMA

历史遗留问题,别管它,不选 
Use PCI DMA by default when available

默认启用DMA,586以上的系统都支持,建议选择 
Enable DMA only for disks

只对硬盘启用DMA,若你的光驱不支持DMA就选上 
{此处省略的部分按照自己主板上实际使用的芯片组进行选择}

Other IDE chipset support

其它IDE芯片组支持(多数需要在引导时指定特定的内核参数),如果你使用这样的芯片组就按实际情况选择子项吧

IGNORE word93 Validation BITS

ATA-4和ATA-5规范中对于如何在80针的数据线上探测解释的不明确,导致了两种不同标准的产品同时出现,这可能导致ATA-66/100降低为ATA-33,若出现这个问题,可以打开这个选项忽略这种不同,但是又有可能导致另外的问题

Old hard disk (MFM/RLL/IDE) driver

旧版本的MFM/RLL/IDE驱动,不建议使用 
SCSI device support 

SCSI设备 
RAID Transport Class 

用于SCSI设备的软件RAID支持,需要配合外部工具 
SCSI device support 

有任何SCSI/SATA/USB/光纤/FireWire/IDE-SCSI仿真设备之一就必须选上 

legacy /proc/scsi/ support

一些老的刻录程序可能需要它 
SCSI disk support 

SCSI硬盘或U盘 
SCSI tape support 

SCSI磁带 
SCSI OnStream SC-x0 tape support

另一种SCSI磁带 
SCSI CDROM support 

SCSI CDROM 
Enable vendor-specific extensions

仅在古董级的SCSI CDROM设备上才需要 
SCSI generic support 

若有SCSI硬盘/CD-ROM/tape之外的SCSI设备才需要选择 
SCSI media changer support

一种SCSI备份设备 
Probe all LUNs on each SCSI device

在每个SCSI设备上探测逻辑设备数.只在一个SCSI设备上有多个逻辑设备(模拟多个SCSI设备,比如多口读卡器)时才需要选它,一般的SCSI设备不需要

Verbose SCSI error reporting

以易读的方式报告SCSI错误,内核将会增大12K 
SCSI logging facility

启用SCSI日志(默认并不开启,需要在挂载/proc后执行echo "scsi log token [level]" > /proc/scsi/scsi命令才能打开日志),可用于跟踪和捕获SCSI设备的错误

SCSI Transports 

SCSI接口类型,下面的子项可以全不选,内核中若有其他部分依赖它,会自动选上 
Parallel SCSI (SPI) Transport Attributes

传统且常见的并行SCSI(Ultra320/160之类) 
FiberChannel Transport Attributes

光纤通道 
iSCSI Transport Attributes

iSCSI是利用TCP/IP网络传送SCSI命令和数据的I/O技术 
SAS Transport Attributes

串行SCSI传输属性支持(SAS对于的关系SPI犹如SATA对于ATA) 
SAS Domain Transport Attributes

为使用了SAS Domain的驱动程序提供帮助 
Compile the SAS Domain Transport Attributes in debug mode

仅供调试使用 
SCSI low-level drivers

底层SCSI驱动程序,按你实际使用的产品选择 
iSCSI Initiator over TCP/IP

用于iSCSI在TCP/IP网络上传播的起动程序 
{此处省略的部分按照自己实际使用的控制器进行选择,仅用一个例子解说子项}

Adaptec AIC79xx U320 support

以基于PCI-X的Adaptec Ultra 320 SCSI控制器为例解说子项 
Maximum number of TCQ commands per device

每个SCSI设备的标记指令队列的最大长度(上限253).上限越高性能越好,但是对于SCSI设备较多的系统来说可能造成内存分配失败.此值还可以通过tag_info内核引导参数指定

Initial bus reset delay in milli-seconds

初始总线reset之后的延时微秒数(默认5000) 
Enable Read Streaming for All Targets

对所有的标记队列启用Read Streaming(可以增强效能,但是在一些Adaptec早期的U320产品上有缺陷),此特性还可以通过rd_strm内核引导参数指定

Compile in Debugging Code

仅用于调试 
Debug code enable mask (16383 for all debugging)

出错代码的掩码,0表示禁止所有,16383表示打开所有 
Decode registers during diagnostics

将出错代码的解释内容编译进去,这样就不需要查看aic7xxx.reg中的出错代码表以确定出错代码的含意了

PCMCIA SCSI adapter support

通过PCMCIA卡与计算机连接的SCSI设备 
Serial ATA and Parallel ATA drivers

SATA与PATA设备 
ATA device support 

SATA或PATA接口的硬盘或光驱等设备 
AHCI SATA support 

SATA高级主机控制器接口.要使用NCQ功能就必须选中它,另外BIOS中的SATA工作模式亦要选AHCI模式

Generic ATA support 

基于新的ATA层的通用ATA控制器驱动,仅在你的芯片组在列表中找不到时才需要 
{此处省略的部分按照自己主板上实际使用的芯片组进行选择}

Old CD-ROM drivers (not SCSI, not IDE)

老旧的CD-ROM驱动,这种CD-ROM既不使用SCSI接口,也不使用IDE接口 
Multi-device support (RAID and LVM)

多设备支持(RAID和LVM).RAID和LVM的功能是使多个物理设备组建成一个单独的逻辑磁盘 

RAID support 
软件RAID(需要使用外部工具),若你有硬件RAID控制器,可以不选 
Linear (append) mode 

追加模式(简单的将一个分区追加在另一个分区之后) 
RAID-0 (striping) mode

RAID-0(等量分割)模式 
RAID-1 (mirroring) mode

RAID-1(镜像)模式 
RAID-10 (mirrored striping) mode

RAID 0+1模式 
RAID-4/RAID-5/RAID-6 mode

这些模式比较复杂,一般不用 
Support adding drives to a raid-5 array

RAID-5阵列可以通过添加额外的驱动器进行扩展(restriping),这个选项允许在线进行这样的操作,同时要求mdadm的版本大于2.4.1

Multipath I/O support

多路IO支持是指在服务器和存储设备之间使用冗余的物理路径组件创建"逻辑路径",如果这些组件发生故障并造成路径失败,多路径逻辑将为I/O使用备用路径以使应用程序仍然可以访问其数据

Faulty test module for MD

用于MD(Multi-device)的缺陷测试模块 
Device mapper support

Device-mapper是一个底层的卷管理器,不用LVM就别选了 
Fusion MPT device support

Fusion MPT设备支持 
IEEE 1394 (FireWire) support

IEEE 1394(火线) 
I2O device support 

I2O(智能IO)设备使用专门的I/O处理器负责中断处理/缓冲存取/数据传输等烦琐任务以减少CPU占用,一般的主板上没这种东西

Network device support

网络设备 
Network device support

网络设备支持,当然要选啦 
Intermediate Functional Block support

这是一个中间层驱动,可以用来灵活的配置资源共享,看不懂的可以不选 
Dummy net driver support

哑接口网络,使用SLIP或PPP传输协议(如ADSL用户)的需要它 
Bonding driver support

将多个以太网通道绑定为一个,也就是两块网卡具有相同的IP地址并且聚合成一个逻辑链路工作,可以用来实现负载均衡或硬件冗余

EQL (serial line load balancing) support

串行线路的负载均衡.如果有两个MODEM和两条电话线而且用SLIP或PPP协议,该选项可以让您同时使用这两个MODEM以达到双倍速度(在网络的另一端也要有同样的设备)

Universal TUN/TAP device driver support

TUN/TAP可以为用户空间提供包的接收和发送服务,比如可以用来虚拟一张网卡或点对点通道 

General Instruments Surfboard 1000

SURFboard 1000插卡式Cable Medem(ISA接口),这玩意大概早就绝种了 

ARCnet devices 

一般人没有ARCnet类型的网卡 
PHY device support 

数据链路层芯片简称为MAC控制器,物理层芯片简称之为PHY,通常的网卡把MAC和PHY的功能做到了一颗芯片中,但也有一些仅含PHY的"软网卡"

Ethernet (10 or 100Mbit)

目前最广泛的10/100M网卡 
Ethernet (1000 Mbit) 

目前已成装机主流的1000M网卡 
Ethernet (10000 Mbit)

万兆网卡无福消受啦 
Token Ring devices 

令牌环网设备 
Wireless LAN (non-hamradio)

无线LAN 
PCMCIA network device support

PCMCIA或CardBus网卡 
Wan interfaces 

WAN接口 
ATM drivers 
异步传输模式 
FDDI driver support 

光纤分布式数据接口 
HIPPI driver support 

HIPPI(高性能并行接口)是一个在短距离内高速传送大量数据的点对点协议 
PLIP (parallel port) support

将并口映射成网络设备,这样两台机器即使没有网卡也可以使用并口通过并行线传输IP数据包 

PPP (point-to-point protocol) support

点对点协议,PPP已经基本取代SLIP了,用ADSL的可要仔细选择了 
PPP multilink support

多重链路协议(RFC1990)允许你将多个线路(物理的或逻辑的)组合为一个PPP连接一充分利用带宽,这不但需要pppd的支持,还需要ISP的支持

PPP filtering 

允许对通过PPP接口的包进行过滤 
PPP support for async serial ports

通过标准异步串口(COM1,COM2)使用PPP,比如使用老式的外置modem(非同步modem或ISDN modem)上网

PPP support for sync tty ports

通过同步tty设备(比如SyncLink适配器)使用PPP,常用于高速租用线路(比如T1/E1) 

PPP Deflate compression

为PPP提供Deflate(等价于gzip压缩算法)压缩算法支持,需要通信双方的支持才有效 

PPP BSD-Compress compression

为PPP提供BSD(等价于LZW压缩算法,没有gzip高效)压缩算法支持,需要通信双方的支持才有效

PPP MPPE compression (encryption)

为PPP提供MPPE加密协议支持,它被用于微软的P2P隧道协议中 
PPP over Ethernet 

这就是ADSL用户最常见的PPPoE啦,也就是在以太网上跑的PPP协议 
PPP over ATM 
在ATM上跑的PPP 
SLIP (serial line) support

一个在串行线上(例如电话线)传输IP数据报的TCP/IP协议.小猫一族的通讯协议,与宽带用户无关 

CSLIP compressed headers

CSLIP协议比SLIP快,它将TCP/IP头(而非数据)进行压缩传送,需要通信双方的支持才有效 

Keepalive and linefill

让SLIP驱动支持RELCOM linefill和keepalive监视,这在信号质量比较差的模拟线路上是个好主意

Six bit SLIP encapsulation

这种线路非常罕见,不要选它 
Fibre Channel driver support

光纤通道 
Traffic Shaper 

流量整形,已废弃 
Network console logging support

通过网络记录内核信息 
Netpoll support for trapping incoming packets

不知道Netpoll是什么的可以不选 
Netpoll traffic trapping

不知道Netpoll是什么的可以不选 
ISDN subsystem 

综合业务数字网(Integrated Service Digital Network) 

Telephony Support 

VoIP支持 
Input device support 

输入设备 
Generic input layer (needed for keyboard,mouse...)

通用输入层,要使用键盘鼠标的就必选 
Support for memoryless force-feedback devices

游戏玩家使用的力反馈设备 
Mouse interface 

鼠标接口 
Provide legacy /dev/psaux device

仍然支持作为传统的/dev/psaux设备 
Horizontal screen resolution

数字化转换器或图形输入板的水平分辩率 
Vertical screen resolution

数字化转换器或图形输入板的垂直分辨率 
Joystick interface 

游戏杆 
Touchscreen interface

触摸屏 
Event interface 

能够利用/dev/input/eventX来存取输入设备的事件 
Event debugging 

该选项仅供调试 
Keyboards 
键盘驱动,一般选个AT键盘即可 
Mouse 
鼠标驱动,一般选个PS/2鼠标即可 
Joysticks 
游戏杆驱动 
Touchscreens 
触摸屏驱动 
Miscellaneous devices

其他杂项驱动,一般选个PC喇叭即可 
Hardware I/O ports 

硬件I/O端口 
Serial I/O support 

使用PS/2键盘或鼠标的就必选 
i8042 PC Keyboard controller

PS/2接口的键盘和鼠标 
Serial port line discipline

串口键盘或鼠标 
ct82c710 Aux port controller

一种德州仪器TravelMate笔记本上使用QuickPort接口的鼠标 
Parallel port keyboard adapter

并口键盘或鼠标 
PCI PS/2 keyboard and PS/2 mouse controller

接在移动式扩展坞(Docking station)上的键盘或鼠标 
PS/2 driver library 

为PS/2接口上的设备提供驱动(比如PS/2鼠标或标准AT键盘) 
Raw access to serio ports

不是hacker就别选了 
Gameport support 

就是早年"小霸王"游戏机上的那种手柄 
Character devices 

字符设备 
Virtual terminal 

虚拟终端.除非是嵌入式系统,否则必选 
Support for console on virtual terminal

内核将一个虚拟终端用作系统控制台(将诸如模块错误/内核错误/启动信息之类的警告信息发送到这里,通常是第一个虚拟终端).除非是嵌入式系统,否则必选

Support for binding and unbinding console drivers

虚拟终端是通过控制台驱动程序与物理终端相结合的,但在某些系统上可以使用多个控制台驱动程序(如framebuffer控制台驱动程序),该选项使得你可以选择其中之一

Non-standard serial port support

非标准串口支持.这样的设备早就绝种了 
Serial drivers 

串口驱动.如果你有老式的串口鼠标或小猫之类的就选吧 
Unix98 PTY support 

伪终端(PTY)可以模拟一个终端,它由slave(等价于一个物理终端)和master(被一个诸如xterms之类的进程用来读写slave设备)两部分组成的软设备.使用telnet或ssh远程登录者必选

Legacy (BSD) PTY support

使用过时的BSD风格的/dev/ptyxx作为master,/dev/ttyxx作为slave,这个方案有一些安全问题,建议不选

Parallel printer support

并口打印机 
Support for console on line printer

允许将内核信息输出到并口,这样就可以打印出来 
Support for user-space parallel port device drivers

/dev/parport设备支持,比如deviceid之类的程序需要使用它,大部分人可以关闭该选项

Texas Instruments parallel link cable support

德州仪器生产的一种使用并行电缆的图形计算器,如果你不知道这是什么设备就别选了 
IPMI 
可以利用IPMI远程监视服务器的物理特征(温度,电压,风扇,电源,机箱入侵),它是独立于CPU,BIOS,OS的,只要接通电源就可以实现对服务器的监控

IPMI top-level message handler

IPMI消息处理器,要启用IPMI远程监视这个就必选 
Generate a panic event to all BMCs on a panic

当发生紧急情况(panic)时,IPMI消息处理器将会向每一个已注册的底板管理控制器(BMC)接口生成一个描述该panic的IPMI事件,这些事件可以引发日志记录/报警/重启/关机等动作

Generate OEM events containing the panic string

当发生紧急情况(panic)时,IPMI消息处理器将会产生OEM类型的事件 
Device interface for IPMI

为IPMI消息处理器提供一个IOCTL接口已便用户空间的进程也可以使用IPMI 
IPMI System Interface handler

向系统提供接口(KCS,SMIC),一般你用了IPMI就需要选上 
IPMI Watchdog Timer 

启用IPMI Watchdog定时器 
IPMI Poweroff 

允许IPMI消息处理器关闭机器 
Watchdog Cards 

能让系统在出现致命故障后自动重启,如果没有硬件Watchdog,建议使用Hangcheck timer而不是软件Watchdog

Watchdog Timer Support

选中它并选中下面的一个Driver之后,再创建一个/dev/watchdog节点即可拥有一只Watchdog了.更多信息请参考内核帮助

Disable watchdog shutdown on close

一旦Watchdog启动后就禁止将其停止 
Software watchdog 

软件Watchdog,使用它不需要有任何硬件的支持,但是可靠性没有硬件Watchdog高 

{此处省略的硬件Watchdog部分请按照自己主板实际使用的芯片(可能在南桥中)进行选择}

Hardware Random Number Generator Core support

硬件随机数发生器核心支持 
Intel HW Random Number Generator support

Intel芯片组的硬件随机数发生器 
AMD HW Random Number Generator support

AMD芯片组的硬件随机数发生器 
AMD Geode HW Random Number Generator support

AMD Geode LX的硬件随机数发生器 
VIA HW Random Number Generator support

VIA芯片组的硬件随机数发生器 
/dev/nvram support 

直接存取主板上CMOS的接口,太危险了!建议别选 
Enhanced Real Time Clock Support

启用该选项并创建/dev/rtc文件后就可以通过/proc/driver/rtc访问系统的硬件时钟(RTC),众多功能依赖于它(如SMP,IRQ共享,定时器),建议选择

Double Talk PC internal speech card support

由RC Systems公司制造的一种语音合成器 
Siemens R3964 line discipline

与使用西门子R3964协议的设备同步通信,除非你有一些诸如PLC之类的特殊设备,否则别选 

Applicom intelligent fieldbus card support

Applicom international公司生产的用于现场总线连接卡 
Sony Vaio Programmable I/O Control Device support

Sony VAIO笔记本上的东西 
Ftape, the floppy tape device driver

还使用磁带的就选吧 
/dev/agpgart (AGP Support)

AGP总线支持,有AGP显卡的还必须从子项中选取符合自己显卡型号的驱动 
Direct Rendering Manager

DRI允许应用程序以高效安全的方式直接访问图形处理,主要用于硬件3D加速.桌面用户建议选择,同时还必须从子项中选取符合自己显卡型号的驱动

PCMCIA character devices

使用PCMCIA接口的字符设备,如果你有这种设备就到子项中去选吧 
ACP Modem (Mwave) support

IBM Thinkpad上的一种软猫,古董产品 
NatSemi SCx200 GPIO Support

松下的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 
NatSemi PC8736x GPIO Support

松下的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 
NatSemi Base GPIO Support

松下的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 
 
I2C support 
I2C是Philips极力推动的微控制应用中使用的低速串行总线协议,可用于监控电压/风扇转速/温度等.SMBus(系统管理总线)是I2C的子集.除硬件传感器外"Video For Linux"也需要该模块的支持

I2C device interface 

I2C设备接口,允许用户空间的程序通过/dev/i2c-*设备文件使用I2C总线 
I2C Algorithms 

I2C算法,可以全不选,若有其他部分依赖其子项时,会自动选上 
I2C Hardware Bus support

按实际硬件情况选对应的子项即可 
Miscellaneous I2C Chip support

其他不常见的产品,按需选择 
I2C Core debugging messages

仅供调试 
I2C Algorithm debugging messages

仅供调试 
I2C Bus debugging messages

仅供调试 
I2C Chip debugging messages

仅供调试 
SPI support 
串行外围接口(SPI)常用于微控制器(MCU)与外围设备(传感器,eeprom,flash,编码器,模数转换器)之间的通信,比如MMC和SD卡就通常需要使用SPI

Dallas's 1-wire bus 

一线总线 
Hardware Monitoring support

当前主板大多都有一个监控硬件健康的设备用于监视温度/电压/风扇转速等,请按照自己主板实际使用的芯片选择相应的子项.另外,该功能还需要I2C的支持

Multimedia devices 

多媒体设备 
Video For Linux 

要使用音频/视频设备或FM收音卡的就必选,此功能还需要I2C的支持 
Enable Video For Linux API 1

使用老旧的V4L第一版API,反对使用 
Enable Video For Linux API 1 compatible Layer

提供对第一版V4L的兼容,建议不选 
Video Capture Adapters

视频捕获卡 
Enable advanced debug functionality

该选项仅供调试 
Autoselect pertinent encoders/decoders and other helper chips

为视频卡自动选择所需的编码和解码模块,建议选择 
Virtual Video Driver 

虚拟视频卡,仅供测试视频程序和调试 
SAA5246A, SAA5281 Teletext processor

该选项仅对欧洲用户有意义,中国用户不需要 
SAA5249 Teletext processor

该选项仅对欧洲用户有意义,中国用户不需要 
{此处省略的硬件请按照自己实际使用的芯片进行选择}

V4L USB devices 

使用USB接口的视频卡,子项请按照自己实际使用的视频卡选择 
Radio Adapters 

音频卡,子项请按照自己实际使用的音频卡选择 
Digital Video Broadcasting Devices

数字视频广播设备(DVB卡或机顶盒),子项请按自己实际使用的硬件选择 
DABUSB driver 

USB接口的数字音频广播设备接收器 
Graphics support 

图形设备/显卡支持 
Enable firmware EDID 

允许访问Video BIOS中的扩展显示器识别数据(EDID),使用Matrox显卡的建议关闭,建议桌面用户选择

Support for frame buffer devices

帧缓冲设备是为了让应用程序使用统一的接口操作显示设备而对硬件进行的抽象,建议桌面用户选择 

Enable Video Mode Handling Helpers

使用GTF和EDID来帮助处理显示模式,可以不选,若有其他选项依赖于它时,会自动选上 

Enable Tile Blitting Support

可以不选,若有其他选项依赖于它时,会自动选上 
VGA 16-color graphics support

16色VGA显卡.如果你有这种古董就选吧 
VESA VGA graphics support

符合VESA 2.0标准的显卡的通用驱动,如果显卡芯片在下面能够找到就可以不选 
{此处省略的硬件请按照自己实际使用的显卡芯片进行选择}

Virtual Frame Buffer support

仅供调试使用 
Console display driver support

控制台显示驱动 
VGA text console 

文本控制台,必选 
Enable Scrollback Buffer in System RAM

在内存中开辟额外的屏幕缓冲区,这将允许你回滚屏幕 
Scrollback Buffer Size (in KB)

在内存中开辟的额外屏幕缓冲区大小 
Video mode selection support

允许在内核启动时使用"vga="选择文本模式,如果你希望一行能够显示更多字符的话可以打开它 

MDA text console (dual-headed)

如果你有古董级别的单色显卡并且作为第二块显卡使用以实现双头显示就选上吧 
Framebuffer Console support

基于framebuffer的控制台驱动,服务器可以不选 
Framebuffer Console Rotation

显示画面旋转,它可能大大降低显示速度,建议不选 
Select compiled-in fonts

选择内建字体 
VGA 8x8 font 
高分辨率下的小字体 
VGA 8x16 font 

底分辨率下的大字体 
{其它字体省略}

Logo configuration 

启动时显示linux的logo(一幅企鹅图像),喜欢炫一下的就选吧 
Backlight & LCD device support

LCD显示器支持,一般无需选择 
Sound 
声卡 
Advanced Linux Sound Architecture

使用声卡者必选 
Sequencer support 

音序器支持(MIDI必需),除非你确定不需要,否则请选上 
Sequencer dummy client

除非你要同时连接到多个MIDI设备或应用程序,否则请不要选择 
OSS Mixer API 

OSS混音器API仿真,许多程序目前仍然需要使用它,建议选择 
OSS PCM (digital audio) API

OSS数字录音(PCM)API模拟,许多程序目前仍然需要使用它,建议选择 
OSS PCM (digital audio) API - Include plugin system

建议不选 
OSS Sequencer API 

OSS音序器支持,许多程序目前仍然需要使用它,建议选择 
RTC Timer support 

为ALSA启用RTC定时器支持,建议选择 
Use RTC as default sequencer timer

将RTC当作默认的时序脉冲发生器 
Dynamic device file minor numbers

仅供拥有多个声卡的用户选择 
Support old ALSA API 

支持已被废弃的老版本ALSA API 
Verbose procfs contents

仅供调试使用 
Verbose printk 

仅供调试使用 
Debug 
仅供调试使用 
Generic devices 

通用设备 
Dummy (/dev/null) soundcard

仅供调试 
Virtual MIDI soundcard

虚拟MIDI驱动,允许将使用原始MIDI设备的应用程序连接到音序器客户端,如果你不知道MIDI是什么就别选

{此处省略的硬件请按照自己实际使用的声卡芯片进行选择}

PCI devices 
PCI接口的声卡,请按实际使用的声卡选择子项 
USB devices 
USB接口的声卡,请按实际使用的声卡选择子项 
PCMCIA devices 

PCMCIA接口的声卡,请按实际使用的声卡选择子项 
Open Sound System 

反对使用 
USB support 
USB支持 
Support for Host-side USB

主机端(Host-side)USB支持.通用串行总线(USB)是一个串行总线子系统规范,它比传统的串口速度更快并且特性更丰富(供电,热插拔,最多可接127个设备等),有望在将来一统PC外设接口.USB的"Host"(主机)被称为"根"(也可以理解为是主板上的USB控制器),外部设备被称为"叶子",而内部的节点则称为"hub"(集线器).基本上只要你想使用任何USB设备都必须选中此项.另外,你还需要从下面选中至少一个"Host Controller
 Driver"(HCD),比如适用于USB1.1的"UHCI HCD support"或"OHCI HCD support",适用于USB2.0的"EHCI HCD (USB 2.0) support".如果你拿不准的话把他们全部选中一般也不会出问题.如果你的系统有设备端的USB接口(也就是你的系统可以作为"叶子"使用),请到"USB Gadget"中进行选择.

USB verbose debug messages

仅供调试使用 
USB device filesystem

在/proc/bus/usb里列出当前连接的usb设备(mount -t usbfs none /proc/bus/usb),这样用户空间的程序就可以直接访问这些USB设备,基本上你要使用USB设备的话就必须选中此项

Enforce USB bandwidth allocation

执行usb带宽分配限制,禁止打开占用usb总线带宽超过90%的设备,关闭该选项可能会导致某些设备无法正常工作

Dynamic USB minor allocation

除非你有超过16个同类型的USB设备,否则不要选择 
USB selective suspend/resume and wakeup

usb设备的挂起和恢复,毛病多多且许多设备尚未支持它,建议不选 
EHCI HCD (USB 2.0) support

USB 2.0支持(大多数2002年以后的主板都支持).如果你选中了此项,一般来说你还需要选中OHCI或UHCI驱动

Full speed ISO transactions

由于USB 2.0支持低速(1.5Mbps)/全速(12Mbps)/高速(480Mbps)三种规格的外部设备,为了将全/低速设备对高速设备可用带宽的影响减到最小,在USB2.0集线器中提供了一种事务转换(Transaction Translator)机制,该机制支持在Hub连接的是全/低速设备的情况下,允许主控制器与Hub之间以高速传输所有设备的数据,从而节省不必要的等待.如果你没有外置的USB集线器就无需选择

Root Hub Transaction Translators

带有USB 2.0接口的主板上都有一个"根集线器"(Root Hub)以允许在无需额外购买hub的情况下就可以提供多个USB插口,其中的某些产品还在其中集成了事务转换(Transaction Translator)功能,这样就不需要再额外使用一个兼容OHCI或UHCI的控制器来兼容USB 1.1,即使你不太清楚自己主板上的根集线器是否集成了事务转换功能也可以安全的选中此项

Improved Transaction Translator scheduling

如果你有一个高速USB 2.0 hub并且某些接在这个hub上的低速或全速设备不能正常工作(显示'cannot submit datapipe: error -28'或'error -71'错误),可以考虑选上

ISP116X HCD support 

ISP1160/ISP1161主机USB控制器,是符合USB2.0全速规范的单片主机控制器和设备控制器,支持OHCI标准

OHCI HCD support 

开放主机控制接口(OHCI)是主要针对嵌入式系统的USB 1.1主机控制器规范 
UHCI HCD (most Intel and VIA) support

通用主机控制器接口(UHCI)是主要针对PC机的USB 1.1主机控制器规范.另外,EHCI也可能需要它

Elan U132 Adapter Host Controller

如果你有这种硬件就选吧 
SL811HS HCD support 

如果你有这种硬件就选吧 
USB Bluetooth TTY support

USB蓝牙TTY设备支持 
USB MIDI support 

USB MIDI设备支持 
USB Modem (CDC ACM) support

USB接口的猫或ISDN适配器 
USB Printer support 

USB打印机 
USB Mass Storage support

USB存储设备(U盘,USB硬盘,USB软盘,USB CD-ROM,USB磁带,memory sticks,数码相机,读卡器等等).该选项依赖于'SCSI device support',且大部分情况下还依赖于'SCSI disk support'(比如U盘或USB硬盘)

USB Mass Storage verbose debug

仅供调试使用 
{省略的部分请按照自己实际使用的硬件选择(事实上大部分人都没有这些设备,可以全不选)}

The shared table of common (or usual) storage devices

该模块包含一张记录了常用USB存储设备及其驱动的表格,这样你无需重新编译模块即可在切换这些设备时自动邦定对应的驱动(还需要对/etc/modprobe.conf进行相应的设置).不确定的建议不选

USB Human Interface Device (full HID) support

USB人机界面设备(鼠标/键盘/游戏杆/手写版等人操作计算机的设备),该驱动不能和"USB HID Boot Protocol drivers"同时使用

HID input layer support

如果你有USB接口的鼠标/键盘/游戏杆/手写板等输入设备就必选 
Enable support for iBook/PowerBook special keys

苹果iBooks/PowerBooks键盘上的Fn/Numlock等功能键支持 
Force feedback support

力反馈设备 
/dev/hiddev raw HID device support

如果你有USB监控装置或不间断电源(UPS)之类的非输入设备就选上 
USB HID Boot Protocol drivers

如果你有绝对的把握确信不为自己的键盘和鼠标使用通常的HID驱动,而要使用Boot Protocol模式的HID驱动(常见于嵌入式环境)就选吧

Aiptek 6000U/8000U tablet support

一种手写板 
Wacom Intuos/Graphire tablet support

一种手写/绘图板 
Acecad Flair tablet support

一种数控绘图板 
KB Gear JamStudio tablet support

一种手写/绘图板 
Griffin PowerMate and Contour Jog support

一种具有调节音量/滚动文本/视频快进快退等功能的产品 
USB Touchscreen Driver

USB触摸屏驱动 
Yealink usb-p1k voip phone

一种VoIP电话 
X-Box gamepad support

X-Box游戏板 
ATI / X10 USB RF remote control

一种usb远程控制设备 
ATI / Philips USB RF remote control

一种usb远程控制设备 
Keyspan DMR USB remote control

一种usb远程控制设备 
Apple USB Touchpad support

苹果机上的触摸板 
USB Mustek MDC800 Digital Camera support

一种数码相机 
Microtek X6USB scanner support

一种扫描仪 
USB Network Adapters 

USB网络适配器,如果你有这种设备请按自己实际使用的硬件选择子项 
USB Monitor 
usb流量监控,一般没必要选它 
USS720 parport driver

一种USB接口转并口的转换设备 
USB Serial Converter support

USB接口转串口的转换设备 
EMI 6|2m USB Audio interface support

一种USB音频设备 
EMI 2|6 USB Audio interface support

一种USB音频设备 
ADU devices from Ontrak Control Systems

Ontrak Control Systems公司的一种自动拨号设备 
USB Auerswald ISDN support

一种ISDN设备 
USB Diamond Rio500 support

一种mp3播放机 
USB Lego Infrared Tower support

一种无线发射机 
SB LCD driver support

USB液晶显示器 
USB LED driver support

USB发光二极管 
Cypress CY7C63xxx USB driver support

德国AK Modul-Bus Computer GmbH公司的一种产品,不知道是用来干什么的 

Cypress USB thermometer driver support

一种温度计?? 
USB Phidgets drivers 

来自Phidgets公司的各种USB产品 
Siemens ID USB Mouse Fingerprint sensor support

西门子公司的一种指纹传感器 
Elan PCMCIA CardBus Adapter USB Client

Elan公司的一种USB转PCMCIA的适配器 
Apple Cinema Display support

苹果公司的一种Cinema Display
SB 2.0 SVGA dongle support (Net2280/SiS315)

一种软件狗
SB LD driver 
USB LD驱动 
PlayStation 2 Trance Vibrator driver support

SONY的PS2上面的"入迷振荡器"(类似于力反馈手柄) 
USB testing driver 

测试中的驱动,别选 
USB DSL modem support

USB DSL猫 
SB Gadget Support 

其他各种杂七杂八的usb小玩艺 
MMC/SD Card support 

MMC/SD卡支持 
LED devices 
发光二级管(LED)设备 
InfiniBand support 

InfiniBand是一个通用的高性能I/O规范,它使得存储区域网中以更低的延时传输I/O消息和集群通讯消息并且提供很好的伸缩性.用于Linux服务器集群系统

EDAC - error detection and reporting (RAS)

错误检测与纠正(EDAC)的目标是发现并报告甚至纠正在计算机系统中发生的错误,这些错误是由CPU或芯片组报告的底层错误(内存错误/缓存错误/PCI错误/温度过高,等等),建议选择.如果这些代码报告了一个错误,请到http://bluesmoke.sourceforge.net/和http://buttersideup.com/edacwiki查看更多信息

Debugging 
仅供调试使用 
Main Memory EDAC (Error Detection And Correction) reporting

一些系统能够检测和修正主内存中的错误,EDAC能够报告这些信息(EDAC自己检测到的或者根据ECC得到的).EDAC还会尽量检测这些错误发生在哪里以便于替换损坏的内存.建议选择并按照你实际使用的芯片组选取子项

Error detecting method

错误检测方法,当前只有一个"Poll for errors"(错误轮询)可用 
Real Time Clock 

所有的PC机主板都包含一个电池动力的实时时钟芯片,以便在断电后仍然能够继续保持时间,RTC通常与CMOS集成在一起,因此BIOS可以从中读取当前时间

RTC class 
通用RTC类支持,选中此项后你就可以在操作系统中使用一个或多个RTC设备(你还必须从下面启用一个或多个RTC接口)

Set system time from RTC on startup

系统启动时使用从指定的RTC设备中读取的时间来设定系统时间,通常这将有助于避免不必要的文件系统检测程序(fsck)的运行,建议选择

The RTC to read the time from

指定具体从哪个RTC设备中读取时间 
RTC debug support 

仅供调试使用 
sysfs 
允许通过sysfs接口使用RTC,允许多个RTC设备,也就是/sys/class/rtc/rtc0~N

proc 
允许通过proc接口使用RTC,仅允许一个RTC设备,也就是/proc/driver/rtc 

dev 
允许通过dev接口使用RTC,允许多个RTC设备,也就是"udev"设置的/dev/rtc0~N,建议你建立一个指向其中之一的软连接/dev/rtc,某些程序(比如hwclock)需要使用/dev/rtc

RTC UIE emulation on dev interface

如果底层rtc芯片驱动没有提供RTC_UIE就仿真一个RTC_UIE.那些请求将产生每秒一次的更新请求以用来同步[这个选项的意思我也搞不清楚究竟时啥意思,翻译的也可能有误]

{此处省略的RTC驱动请按照自己实际使用的RTC芯片进行选择}

DMA Engine support 

从Intel Bensley双核服务器平台开始引入的数据移动加速(Data Movement Acceleration)引擎,它将某些传输数据的操作从CPU转移到专用硬件,从而可以进行异步传输并减轻CPU负载.Intel已将此项技术变为开放的标准,将来应当会有更多的厂商支持

Network: TCP receive copy offload

通过在网络栈中利用DMA引擎来减少接收数据包时的copy-to-user操作以释放CPU资源,这是DMA引擎目前最主要的用途

Intel I/OAT DMA support

Intel I/O加速技术(Intel I/O Acceleration Technology)中的DMA支持,基于Intel Bensley的新一代服务器平台都支持它
==========================
（11----File systems文件系统）

Second extended fs support

Ext2文件系统是Linux的标准文件系统,擅长处理稀疏文件 
Ext2 extended attributes

Ext2文件系统扩展属性(与inode关联的name:value对)支持 
Ext2 POSIX Access Control Lists

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

Ext2 Security Labels 

安全标签允许选择使用不同的安全模型实现(如SELinux)的访问控制模型,如果你没有使用需要扩展属性的安全模型就别选

Ext2 execute in place support

程序在写入存储介质时就已经分配好运行时的地址,因此不需要载入内存即可在芯片内执行,一般仅在嵌入式系统上才有这种设备

Ext3 journalling file system support

Ext3性能平庸,使用journal日志模式时数据完整性非常好(但怪异的是此时多线程并发读写速度却最快)

Ext3 extended attributes

Ext3文件系统扩展属性(与inode关联的name:value对)支持 
Ext3 POSIX Access Control Lists

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

Ext3 Security Labels 

安全标签允许选择使用不同的安全模型实现(如SELinux)的访问控制模型,如果你没有使用需要扩展属性的安全模型就别选

Ext4dev/ext4 extended fs support

尚处于开发状态的Ext4 
JBD (ext3) debugging support

仅供开发者使用 
JBD2 (ext4dev/ext4) debugging support

仅供开发者使用 
Reiserfs support 

性能几乎全面超越Ext2(处理稀疏文件比Ext2慢),小文件(小于4k)性能非常突出,创建和删除文件速度最快,处理大量目录和文件(5k-20k)时仍然非常迅速.日志模式建议使用Ordered,追求极速可使用Writeback模式,追求安全可使用Journal模式.建议使用noatime,notail选项挂载分区以提高速度和避免bug.用于NFS和磁盘限额时需要额外的补丁

Enable reiserfs debug mode

启用ReiserFS调试模式,仅供开发者使用 
Stats in /proc/fs/reiserfs

在/proc/fs/reiserfs文件中显示Reiserfs文件系统的状态,仅供开发者使用 

ReiserFS extended attributes

ReiserFS文件系统扩展属性(与inode关联的name:value对)支持 
ReiserFS POSIX Access Control Lists

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

ReiserFS Security Labels

安全标签允许选择使用不同的安全模型实现(如SELinux)的访问控制模型,如果你没有使用需要扩展属性的安全模型就别选了

JFS filesystem support

IBM的JFS文件系统 
XFS filesystem support

碎片最少,多线程并发读写最佳,大文件(>64k)性能最佳,创建和删除文件速度较慢.由于XFS在内存中缓存尽可能多的数据且仅当内存不足时才会将数据刷到磁盘,所以应当仅在确保电力供应不会中断的情况下才使用XFS

Quota support 

XFS的磁盘配额支持 
Security Label support

扩展的安全标签支持.SElinux之类的安全系统会使用到这样的扩展安全属性 
POSIX ACL support 

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

Realtime support 

实时子卷是专门存储文件数据的卷,可以允许将日志与数据分开在不同的磁盘上 
GFS2 file system support

一种用于集群的文件系统 
OCFS2 file system support

一种用于集群的文件系统 
Minix fs support 

老古董文件系统 
ROM file system support

用于嵌入式系统的内存文件系统的支持 
Inotify file change notification support

新式的文件系统的变化通知机制,简洁而强大,用于代替老旧的Dnotify 
Inotify support for userspace

用户空间的Inotify支持 
Quota support 

磁盘配额支持,限制某个用户或者某组用户的磁盘占用空间,Ext2/Ext3/Reiserfs都支持它

Old quota format support

老式的配额格式支持 
Quota format v2 support

新的v2格式允许使用32位的UID/GID 
Dnotify support 

旧式的基于目录的文件变化的通知机制(新机制是Inotify),目前仍然有一些程序依赖它 

Kernel automounter support

内核自动加载远程文件系统(v3,就算选也不选这个旧的) 
Kernel automounter version 4 support (also supports v3)

新的(v4)的内核自动加载远程文件系统的支持,也支持v3 
Filesystem in Userspace support

FUSE允许在用户空间实现一个文件系统,如果你打算开发一个自己的文件系统或者使用一个基于FUSE的文件系统就选吧

CD-ROM/DVD Filesystems

CD-ROM/DVD文件系统 
ISO 9660 CDROM file system support

CD-ROM的标准文件系统 
Microsoft Joliet CDROM extensions

Microsoft对ISO 9660文件系统的Joliet扩展,允许在文件名中使用Unicode字符,也允许长文件名

Transparent decompression extension

Linux对ISO 9660文件系统的扩展,允许将数据透明的压缩存储在CD上 
UDF file system support

某些新式CD/DVD上的文件系统,很少见 
DOS/FAT/NT Filesystems

DOS/Windows的文件系统 
MSDOS fs support 

古老的MSDOS文件系统 
VFAT (Windows-95) fs support

从Win95开始使用的VFAT文件系统 
Default codepage for FAT

默认代码页 
Default iocharset for FAT

默认字符集 
NTFS file system support

从WinNT开始使用的NTFS文件系统 
NTFS debugging support

仅供调试使用 
NTFS write support 

NTFS写入支持 
Pseudo filesystems 

伪文件系统 
/proc file system support

显示系统状态的虚拟文件系统(irq设置,内存使用,加载的设备驱动器,网络状态等),许多程序依赖于它

/proc/kcore support 

系统物理内存的映象 
/proc/vmcore support 

以ELF格式转储的已崩溃内核镜像,仅供调试使用 
Sysctl support (/proc/sys)

显示各种不同的内核参数,并让root用户能交互地更改其中的某些内容 
sysfs file system support

导出内核内部对象及其属性和对象之间的相互关系的文件系统,它把连接在系统上的设备和总线以及驱动程序等组织成为一个分级的文件,内核启动时依靠它挂载根分区,禁用sysfs后必须在内核引导参数中使用设备号指定根分区

Virtual memory file system support (former shm fs)

tmpfs文件系统(以前叫shm[共享内存]文件系统)支持 
Tmpfs POSIX Access Control Lists

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

HugeTLB file system support

大多数现代计算机体系结构提供对多种内存页面大小的支持(比如IA-32结构支持4K和4M(PAE模式为2M)两种页面).TLB(Translation Lookaside Buffer)是虚拟地址到物理地址的翻译缓冲区,这种缓冲区在处理器上是很宝贵的,操作系统总是尝试将有限的TLB资源发挥到极致.特别是能够轻松获得若干G内存的时候(>4G),这种优化就显得尤为关键.只有开启此选项之后才能提供hugepage支持.

Userspace-driven configuration filesystem

configfs是用户空间驱动的文件系统,提供与sysfs相反的功能 
Miscellaneous filesystems

非主流的杂项文件系统 
Network File Systems 

网络文件系统 
Partition Types 

高级磁盘分区类型,不确定可以全不选 
Native Language Support

本地语言支持.如果你仅仅使用几种主流的Linux文件系统(ext2/3/4,Reiserfs,JFS,XFS),就不需要这个东西.但是如果你需要使用FAT/NTFS分区的话,就需要这个东西了.

Base native language support

如果你启用了本地语言支持,那么这个必选 
Default NLS Option 

默认本地语言,建议使用UTF-8 
{此处省略的部分请按需选择,一般至少需要CP437,ASCII,ISO-8859-1}

Distributed Lock Manager

通用的分布式锁管理器,不明白就不选 
=========================================

Processor type and features中央处理器(CPU)类型及特性）

Symmetric multi-processing support

对称多处理器支持,如果你有多个CPU或者使用的是多核CPU就选上.此时"Enhanced Real Time Clock Support"选项必须开启,"Advanced Power Management"选项必须关闭

Subarchitecture Type 

处理器的子架构,大多数人都应当选择"PC-compatible" 
Processor family 

处理器系列,请按照你实际使用的CPU选择 
Generic x86 support 

通用x86支持,如果你的CPU能够在上述"Processor family"中找到就别选 

HPET Timer Support 

HPET是替代8254芯片的新一代定时器,i686及以上级别的主板都支持,可以安全的选上 

Maximum number of CPUs

支持的最大CPU数,每增加一个内核将增加8K体积 
SMT (Hyperthreading) scheduler support

支持Intel的超线程(HT)技术 
Multi-core scheduler support

针对多核CPU进行调度策略优化 
Preemption Model 

内核抢占模式 
No Forced Preemption (Server)

适合服务器环境的禁止内核抢占 
Voluntary Kernel Preemption (Desktop)

适合普通桌面环境的自愿内核抢占 
Preemptible Kernel (Low-Latency Desktop)

适合运行实时程序的主动内核抢占 
Preempt The Big Kernel Lock

可以抢占大内核锁,应用于实时要求高的场合,不适合服务器环境 
Machine Check Exception

让CPU检测到系统故障时通知内核,以便内核采取相应的措施(如过热关机等) 
Check for non-fatal errors on AMD Athlon/Duron / Intel Pentium 4

每5秒检测一次这些cpu的非致命错误并纠正它们,同时记入日志 
check for P4 thermal throttling interrupt

当P4的cpu过热时显示一条警告消息 
Enable VM86 support 

虚拟X86支持,在DOSEMU下运行16-bit程序或XFree86通过BIOS初始化某些显卡的时候才需要

Toshiba Laptop support

Toshiba笔记本模块支持 
Dell laptop support 

Dell笔记本模块支持 
Enable X86 board specific fixups for reboot

修正某些旧x86主板的重起bug,这种主板基本绝种了 
/dev/cpu/microcode - Intel IA32 CPU microcode support

使用不随Linux内核发行的IA32微代码,你必需有IA32微代码二进制文件,仅对Intel的CPU有效

/dev/cpu/*/msr - Model-specific register support

在多cpu系统中让特权CPU访问x86的MSR寄存器 
/dev/cpu/*/cpuid - CPU information support

能从/dev/cpu/x/cpuid获得CPU的唯一标识符(CPUID) 
Firmware Drivers 

固件驱动程序 
BIOS Enhanced Disk Drive calls determine boot disk

有些BIOS支持从某块特定的硬盘启动(如果BIOS不支持则可能无法启动),目前大多数BIOS还不支持

BIOS update support for DELL systems via sysfs

仅适用于DELL机器 
Dell Systems Management Base Driver

仅适用于DELL机器 
High Memory Support 

最高内存支持,总内存小于等于1G的选"off",大于4G的选"64G" 
Memory split 
如果你不是绝对清楚自己在做什么,不要改动这个选项 
Memory model 
一般选"Flat Memory",其他选项涉及内存热插拔 
64 bit Memory and IO resources

使用64位的内存和IO资源 
Allocate 3rd-level pagetables from highmem

在内存很多(大于4G)的机器上将用户空间的页表放到高位内存区,以节约宝贵的低端内存 

Math emulation 

数学协处理器仿真,486DX以上的cpu就不要选它了 
MTRR (Memory Type Range Register) support

打开它可以提升PCI/AGP总线上的显卡2倍以上的速度,并且可以修正某些BIOS错误 

Boot from EFI support

EFI是一种可代替传统BIOS的技术(目前的Grub/LILO尚不能识别它),但是现在远未普及 

Enable kernel irq balancing

让内核将irq中断平均分配给多个CPU以进行负载均衡,但是要配合irqbanlance守护进程才行

Use register arguments

使用"-mregparm=3"参数编译内核,将前3个参数以寄存器方式进行参数调用,可以生成更紧凑和高效的代码

Enable seccomp to safely compute untrusted bytecode

只有嵌入式系统可以不选 
Timer frequency 

内核时钟频率,桌面推荐"1000 HZ",服务器推荐"100 HZ"或"250 HZ" 

kexec system call 

提供kexec系统调用,可以不必重启而切换到另一个内核 
kernel crash dumps 

被kexec启动后产生内核崩溃转储 
Physical address where the kernel is loaded

内核加载的物理地址,除非你知道自己在做什么,否则不要修改.在提供kexec系统调用的情况下可能要修改它

Support for hot-pluggable CPUs

对热插拔CPU提供支持 
Compat VDSO support 

如果Glibc版本大于等于2.3.3就不选,否则就选上 
==================================================
3----Loadable module support可加载模块支持）

Enable loadable module support

打开可加载模块支持,如果打开它则必须通过"make modules_install"把内核模块安装在/lib/modules/中

Module unloading 

允许卸载已经加载的模块 
Forced module unloading

允许强制卸载正在使用中的模块(比较危险) 
Module versioning support

允许使用其他内核版本的模块(可能会出问题) 
Source checksum for all modules

为所有的模块校验源码,如果你不是自己编写内核模块就不需要它 
Automatic kernel module loading

让内核通过运行modprobe来自动加载所需要的模块,比如可以自动解决模块的依赖关系 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111771
=====================================
（2----General setup常规设置）


Local version - append to kernel release 
在内核版本后面加上自定义的版本字符串(小于64字符),可以用"uname -a"命令看到 
Automatically append version information to the version string

自动在版本字符串后面添加版本信息,编译时需要有perl以及git仓库支持 
Support for paging of anonymous memory (swap) 

使用交换分区或者交换文件来做为虚拟内存 
System V IPC 
System V进程间通信(IPC)支持,许多程序需要这个功能.建议选 
POSIX Message Queues 
POSIX消息队列支持
BSD Process Accounting 
将进程的统计信息写入文件的用户级系统调用,主要包括进程的创建时间/创建者/内存占用等信息 
BSD Process Accounting version 3 file format 

使用新的第三版文件格式,可以包含每个进程的PID和其父进程的PID,但是不兼容老版本的文件格式 
Export task/process statistics through netlink 

通过netlink接口向用户空间导出任务/进程的统计信息,与BSD Process Accounting的不同之处在于这些统计信息在整个任务/进程生存期都是可用的

Enable per-task delay accounting 
在统计信息中包含进程等候系统资源(cpu,IO同步,内存交换等)所花费的时间 
UTS Namespaces 
UTS名字空间支持,不确定可以不选 
Auditing support 
审计支持,某些内核模块(例如SELinux)需要它,只有同时选择其子项才能对系统调用进行审计 
Enable system-call auditing support 
支持对系统调用的审计 
Kernel .config support 
把内核的配置信息编译进内核中,以后可以通过scripts/extract-ikconfig脚本来提取这些信息 
Enable access to .config through /proc/config.gz 

允许通过/proc/config.gz访问内核的配置信息 
Cpuset support 
只有含有大量CPU(大于16个)的SMP系统或NUMA(非一致内存访问)系统才需要它 
Kernel->user space relay support (formerly relayfs)

在某些文件系统上(比如debugfs)提供从内核空间向用户空间传递大量数据的接口 
Initramfs source file(s) 
initrd已经被initramfs取代,如果你不明白这是什么意思,请保持空白 
Optimize for size (Look out for broken compilers!)

编译时优化内核尺寸(使用"-Os"而不是"-O2"参数编译),有时会产生错误的二进制代码 
Enable extended accounting over taskstats 
收集额外的进程统计信息并通过taskstats接口发送到用户空间 
Configure standard kernel features (for small systems)

配置标准的内核特性(为小型系统) 
Enable 16-bit UID system calls 
允许对UID系统调用进行过时的16-bit包装 
Sysctl syscall support 
不需要重启就能修改内核的某些参数和变量,如果你也选择了支持/proc,将能从/proc/sys存取可以影响内核行为的参数或变量 
Load all symbols for debugging/kksymoops 
装载所有的调试符号表信息,仅供调试时选择 
Include all symbols in kallsyms 
在kallsyms中包含内核知道的所有符号,内核将会增大300K 
Do an extra kallsyms pass 
除非你在kallsyms中发现了bug并需要报告这个bug才打开该选项 
Support for hot-pluggable devices 
支持热插拔设备,如usb与pc卡等,Udev也需要它 
Enable support for printk 
允许内核向终端打印字符信息,在需要诊断内核为什么不能运行时选择 
BUG() support 
显示故障和失败条件(BUG和WARN),禁用它将可能导致隐含的错误被忽略 
Enable ELF core dumps 
内存转储支持,可以帮助调试ELF格式的程序 
Enable full-sized data structures for core 

在内核中使用全尺寸的数据结构.禁用它将使得某些内核的数据结构减小以节约内存,但是将会降低性能 
Enable futex support 
快速用户空间互斥体可以使线程串行化以避免竞态条件,也提高了响应速度.禁用它将导致内核不能正确的运行基于glibc的程序 
Enable eventpoll support 
支持事件轮循的系统调用 
Use full shmem filesystem 
完全使用shmem来代替ramfs.shmem是基于共享内存的文件系统(可能用到swap),在启用TMPFS后可以挂载为tmpfs供用户空间使用,它比简单的ramfs先进许多

Use full SLAB allocator 
使用SLAB完全取代SLOB进行内存分配,SLAB是一种优秀的内存分配管理器,推荐使用 
Enable VM event counters for /proc/vmstat 
允许在/proc/vmstat中包含虚拟内存事件记数器 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111755

======================================

7----Bus options (PCI, PCMCIA, EISA, MCA, ISA)总线选项）

PCI support 
PCI支持,如果使用了PCI或PCI Express设备就必选 
PCI access mode 

PCI访问模式,强列建议选"Any"(系统将优先使用"MMConfig",然后使用"BIOS",最后使用"Direct"检测PCI设备)

PCI Express support 

PCI Express支持(目前主要用于显卡和千兆网卡) 
PCI Express Hotplug driver

如果你的主板和设备都支持PCI Express热插拔就可以选上 
Use polling mechanism for hot-plug events

对热插拔事件采用轮询机制,仅用于测试目的 
Root Port Advanced Error Reporting support

由PCI Express AER驱动程序处理发送到Root Port的错误信息 
Message Signaled Interrupts (MSI and MSI-X)

PCI Express支持两类中断:INTx使用传统的IRQ中断,可以与现行的PCI总线的驱动程序和操作系统兼容;MSI则是通过inbound Memory Write触发和发送中断,更适合多CPU系统.可以使用"pci=nomsi"内核引导参数关闭MSI

PCI Debugging 

将PCI调试信息输出到系统日志里 
Interrupts on hypertransport devices

允许本地的hypertransport设备使用中断 
ISA support 
现在基本上没有ISA的设备了,如果你有就选吧 
MCA support 
微通道总线,老旧的IBM的台式机和笔记本上可能会有这种总线 
NatSemi SCx200 support

在使用AMD Geode处理器的机器上才可能有 
PCCARD (PCMCIA/CardBus) support

PCMCIA卡(主要用于笔记本)支持 
Enable PCCARD debugging

仅供调试 
16-bit PCMCIA support

一些老的PCMCIA卡使用16位的CardBus 
32-bit CardBus support

当前的PCMCIA卡基本上都是32位的CardBus 
CardBus yenta-compatible bridge support

使用PCMCIA卡的基本上都需要选择这一项,子项请按照自己实际使用的PCMCIA卡选择 

{省略的部分请按照自己实际使用的PCMCIA卡选择}

PCI Hotplug Support 

PCI热插拔支持,如果你有这样的设备就到子项中去选吧 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111847

================================================
Power management options电源管理选项）

Power Management support

电源管理有APM和ACPI两种标准且不能同时使用.即使关闭该选项,X86上运行的Linux也会在空闲时发出HLT指令将CPU进入睡眠状态

Legacy Power Management API

传统的电源管理API,比如软关机和系统休眠等接口 
Power Management Debug Support

仅供调试使用 
Driver model /sys/devices/.../power/state files

内核帮助文档反对使用该选项,即将被废除 
ACPI (Advanced Configuration and Power Interface) Support

必须运行acpid守护程序ACPI才能起作用.ACPI是为了取代APM而设计的,因此应该尽量使用ACPI而不是APM

AC Adapter 
如果你的系统可以在AC和电池之间转换就可以选 
Battery
通过/proc/acpi/battery向用户提供电池状态信息,用电池的笔记本可以选 

Button 
守护程序捕获Power,Sleep,Lid按钮事件,并根据/proc/acpi/event做相应的动作,软件控制的poweroff需要它

Video 
仅对集成在主板上的显卡提供ACPI2.0支持,且不是所有集成显卡都支持 
Generic Hotkey 

统一的热键驱动,建议不选 
Fan 
允许通过用户层的程序来对系统风扇进行控制(开,关,查询状态),支持它的硬件并不多 
Dock 
支持由ACPI控制的集线器(docking stations) 
Processor 
让ACPI处理空闲状态,并使用ACPI C2和C3处理器状态在空闲时节省电能,同时它还被cpufreq的"Performance-state drivers"选项所依赖

Thermal Zone 
系统温度过高时可以利用ACPI thermal zone及时调整工作状态以避免你的CPU被烧毁 

ASUS/Medion Laptop Extras

ASUS笔记本专用,以提供额外按钮的支持,用户可以通过/proc/acpi/asus来打开或者关闭LCD的背光/调整亮度/定制LED的闪烁指示等功能

IBM ThinkPad Laptop Extras

IBM ThinkPad专用 
Toshiba Laptop Extras

Toshiba笔记本专用 
Disable ACPI for systems before Jan 1st this year

输入四位数的年份,在该年的1月1日前不使用ACPI的功能("0"表示一直使用) 
Debug Statements 

详细的ACPI调试信息,不搞开发就别选 
Power Management Timer Support

这个Timer在所有ACPI兼容的平台上都可用,且不会受PM功能的影响,建议总是启用它.如果你在kernel log中看到了'many lost ticks'那就必须启用它

ACPI0004,PNP0A05 and PNP0A06 Container Driver

支持内存和CPU的热插拔 
Smart Battery System 

支持依赖于I2C的"智能电池".这种电池非常老旧且罕见,还与当前的ACPI标准兼容性差 

APM (Advanced Power Management) BIOS Support

APM在SMP机器上必须关闭,一般来说当前的笔记本都支持ACPI,所以应尽量关闭该该选项 

Ignore USER SUSPEND 

只有NEC Versa M系列的笔记本才需要选择这一项 
Enable PM at boot time

系统启动时即启用APM,选上这个选项能让系统自动的进行电源管理,但常常导致启动时死机 

Make CPU Idle calls when idle

系统空闲时调用空闲指令(halt),只有老式的CPU才需要选它,且对于SMP系统必须关闭 

Enable console blanking using APM

在屏幕空白时关闭LCD背光,事实上对所有的笔记本都无效 
RTC stores time in GMT

将硬件时钟应该设为格林威治时间,否则视为本地时间.建议你使用GMT,这样你无须为时区的改变而担心 

Allow interrupts during APM BIOS calls

允许APM的BIOS调用时中断,IBM Thinkpad的一些新机器需要这项.如果休眠时挂机(包括睡下去就醒不来),可以试试它

Use real mode APM BIOS call to power off

此驱动为某些有Bug的BIOS准备,如果你的系统不能正常关机或关机时崩溃,可以试试它 

CPU Frequency scaling

允许动态改变CPU主频,达到省电和降温的目的,必须同时启用下面的一种governor才行 

Enable CPUfreq debugging

允许对CPUfreq进行调试 
CPU frequency translation statistics

通过sysfs文件系统输出CPU频率变换的统计信息 
CPU frequency translation statistics details

输出详细的CPU频率变换统计信息 
Default CPUFreq governor

默认的CPU频率调节器 
'performance' governor

'性能'优先,静态的将频率设置为cpu支持的最高频率 
'powersave' governor 

'节能'优先,静态的将频率设置为cpu支持的最低频率 
'userspace' governor for userspace frequency scaling

既允许手动调整cpu频率,也允许用户空间的程序动态的调整cpu频率(需要额外的调频软件,比如cpufreqd)

'ondemand' cpufreq policy governor

'立即响应',周期性的考察CPU负载并自动的动态调整cpu频率(不需要额外的调频软件),适合台式机

'conservative' cpufreq governor

'保守',和'ondemand'相似,但是频率的升降是渐变式的(幅度不会很大),更适合用于笔记本/PDA/AMD64环境

ACPI Processor P-States driver

将ACPI2.0的处理器性能状态报告给CPUFreq processor drivers以决定如何调整频率,该选项依赖于ACPI->Processor

{省略的部分请按照自己实际使用的CPU选择}

/proc/acpi/processor/../performance interface

内核帮助文档反对使用该选项,即将被废除 
Relaxed speedstep capability checks

放松对系统的speedstep兼容性检查,仅在某些老旧的Intel系统上需要打开 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111835
===========================================================================
（4----Block layer块设备层）

Enable the block layer

块设备支持,使用硬盘/USB/SCSI设备者必选 
Support for Large Block Devices

仅在使用大于2TB的块设备时需要 
Support for tracing block io actions

块队列IO跟踪支持,它允许用户查看在一个块设备队列上发生的所有事件,可以通过blktrace程序获得磁盘当前的详细统计数据

Support for Large Single Files

仅在可能使用大于2TB的文件时需要 
IO Schedulers 

IO调度器 
Anticipatory I/O scheduler

假设一个块设备只有一个物理查找磁头(例如一个单独的SATA硬盘),将多个随机的小写入流合并成一个大写入流,用写入延时换取最大的写入吞吐量.适用于大多数环境,特别是写入较多的环境(比如文件服务器)

Deadline I/O scheduler

使用轮询的调度器,简洁小巧,提供了最小的读取延迟和尚佳的吞吐量,特别适合于读取较多的环境(比如数据库)

CFQ I/O scheduler 

使用QoS策略为所有任务分配等量的带宽,避免进程被饿死并实现了较低的延迟,可以认为是上述两种调度器的折中.适用于有大量进程的多用户系统

Default I/O scheduler

默认IO调度器 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111793
===============================================================================
（14----Security options安全选项）
Enable access key retention support

在内核中保留authentication token和access key 
Enable the /proc/keys file by which keys may be viewed

允许有权限的进程通过/proc/keys读取所有的key 
Enable different security models

允许内核选择不同的安全模型,如果未选中则内核将使用默认的安全模型 
Socket and Networking Security Hooks

允许安全模型通过Security Hook对Socket与Networking进行访问控制 

XFRM (IPSec) Networking Security Hooks

启用XFRM安全Hook 
Default Linux Capabilities

启用与"默认"Linux的兼容性 
Root Plug Support 

一个简单的Linux安全模块,在特定的USB设备不存在时它简单的禁止一切egid==0的进程运行 

NSA SELinux Support 

美国国家安全局(NSA)开发的安全增强Linux(SELinux),你还需要进行策略配置(checkpolicy)并且对文件系统进行标记(setfiles)

NSA SELinux boot parameter

添加一个内核引导参数以允许在引导时使用'selinux=0'禁用SELinux或'selinux=1'启用SELinux

NSA SELinux boot parameter default value

上述参数的默认值 
NSA SELinux runtime disable

允许在运行时禁用SELinux 
NSA SELinux Development Support

SELinux开发支持 
NSA SELinux AVC Statistics

搜集存取向量(access vector)缓冲区的统计信息并在/selinux/avc/cache_stats中显示出来.这些信息可以用avcstat之类的工具查看

NSA SELinux checkreqprot default value

checkreqprot标志的默认值 
NSA SELinux enable new secmark network controls by default

默认启用新的基于安全标记(secmark)的网络 
NSA SELinux maximum supported policy format version

允许将支持的最高策略格式版本设置为一个特定的数值 
NSA SELinux maximum supported policy format version value

支持的最高策略格式版本的数值
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111979
============================================================================================================
（13----Kernel hacking内核hack选项）
Show timing information on printks

在printk的输出中包含时间信息,可以用来分析内核启动过程各步骤所用时间 
Enable __must_check logic

在编译内核的过程中使用"必须检查"的逻辑,禁用它将不会显示某些警告信息 
Magic SysRq key 

不懂的千万别选 
Enable unused/obsolete exported symbols

导出无用和废弃的符号,这将使内核不必要的增大 
Kernel debugging 

不是内核开发者的别选 
Debug Filesystem 

不是内核开发者的别选 
Compile the kernel with frame unwind information

不是内核开发者的别选 
Run 'make headers_check' when building vmlinux

在编译内核时运行'make headers_check'命令检查内核头文件,当你修改了与用户空间相关的内核头文件后建议启用该选项

Linux Kernel Dump Test Tool Module

不是内核开发者的别选 
Enable doublefault exception handler

允许捕获非常罕见的导致系统无警告重启的doublefault异常,对于调试非常重要
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111953
====================================================================================
（12----Instrumentation Support分析支持）
Profiling support  

对系统的活动进行分析,仅供内核开发者使用 

Kprobes 

仅供内核开发者使用 
=================================
（9----Networking网络）
Networking options 

网络选项 
Network packet debugging

在调试不合格的包时加上额外的附加信息,但在遇到Dos攻击时你可能会被日志淹没 
Packet socket 

这种Socket可以让应用程序(比如tcpdump,iptables)直接与网络设备通讯,而不通过内核中的其它中介协议

Packet socket: mmapped IO

让Packet socket驱动程序使用IO映射机制以使连接速度更快 
Unix domain sockets 

一种仅运行于本机上的效率高于TCP/IP的Socket,简称Unix socket.许多程序都使用它在操作系统内部进行进程间通信(IPC),比如X Window和syslog

Transformation user configuration interface

为IPsec(可在ip层加密)之类的工具提供XFRM用户配置接口支持 
Transformation sub policy support

XFRM子策略支持,仅供开发者使用 
PF_KEY sockets 

用于可信任的密钥管理程序和操作系统内核内部的密钥管理进行通信,IPsec依赖于它 
TCP/IP networking 

TCP/IP协议当然要选 
IP: multicasting 

群组广播,似乎与网格计算有关,仅在使用MBONE的时候才需要 
IP: advanced router 

高级路由,如果想做一个路由器就选吧 
IP: policy routing 

策略路由 
IP: equal cost multipath

用于路由的基于目的地址的负载均衡 
IP: verbose route monitoring

显示冗余的路由监控信息 
IP: kernel level autoconfiguration

在内核启动时自动配置ip地址/路由表等,需要从网络启动的无盘工作站才需要这个东西 
IP: tunneling 

IP隧道,将一个IP报文封装在另一个IP报文内的技术 
IP: GRE tunnels over IP

基于IP的GRE(通用路由封装)隧道 
IP: multicast routing

多重传播路由 
IP: ARP daemon support

这东西尚处于试验阶段就已经被废弃了 
IP: TCP syncookie support

抵抗SYN flood攻击的好东西,要启用它必须同时启用/proc文件系统和"Sysctl support",然后在系统启动并挂载了/proc之后执行"echo 1 >/proc/sys/net/ipv4/tcp_syncookies"命令

IP: AH transformation

IPsec验证头(AH)实现了数据发送方的验证处理,可确保数据既对于未经验证的站点不可用也不能在路由过程中更改

IP: ESP transformation

IPsec封闭安全负载(ESP)实现了发送方的验证处理和数据加密处理,用以确保数据不会被拦截/查看或复制

IP: IPComp transformation

IPComp(IP静荷载压缩协议),用于支持IPsec 
IP: IPsec transport mode

IPsec传输模式,常用于对等通信,用以提供内网安全.数据包经过了加密但IP头没有加密,因此任何标准设备或软件都可查看和使用IP头

IP: IPsec tunnel mode

IPsec隧道模式,用于提供外网安全(包括虚拟专用网络).整个数据包(数据头和负载)都已经过加密处理且分配有新的ESP头/IP头和验证尾,从而能够隐藏受保护站点的拓扑结构

IP: IPsec BEET mode 

IPsec BEET模式 
INET: socket monitoring interface

socket监视接口,一些Linux本地工具(如:包含ss的iproute2)需要使用它 

TCP: advanced congestion control

高级拥塞控制,如果没有特殊需求(比如无线网络)就别选了,内核会自动将默认的拥塞控制设为"Cubic"并将"Reno"作为候补

IP: Virtual Server Configuration

IP虚拟服务器允许你基于多台物理机器构建一台高性能的虚拟服务器,不玩集群就别选了 
The IPv6 protocol 

你要是需要IPv6就选吧 
NetLabel subsystem support

NetLabel子系统为诸如CIPSO与RIPSO之类能够在分组信息上添加标签的协议提供支持,如果你看不懂就别选了

Security Marking 

对网络包进行安全标记,类似于nfmark,但主要是为安全目的而设计,如果你不明白的话就别选 

Network packet filtering (replaces ipchains)

Netfilter可以对数据包进行过滤和修改,可以作为防火墙("packet filter"或"proxy-based")或网关(NAT)或代理(proxy)或网桥使用.选中此选项后必须将"Fast switching"关闭,否则将前功尽弃

Network packet filtering debugging

仅供开发者调试Netfilter使用 
Bridged IP/ARP packets filtering

如果你希望使用一个针对桥接的防火墙就打开它 
Core Netfilter Configuration

核心Netfilter配置(当包流过Chain时如果match某个规则那么将由该规则的target来处理,否则将由同一个Chain中的下一个规则进行匹配,若不match所有规则那么最终将由该Chain的policy进行处理)

Netfilter netlink interface

允许Netfilter在与用户空间通信时使用新的netlink接口.netlink Socket是Linux用户态与内核态交流的主要方法之一,且越来越被重视.

Netfilter NFQUEUE over NFNETLINK interface

通过NFNETLINK接口对包进行排队 
Netfilter LOG over NFNETLINK interface

通过NFNETLINK接口对包记录.该选项废弃了ipt_ULOG和ebg_ulog机制,并打算在将来废弃基于syslog的ipt_LOG和ip6t_LOG模块

Layer 3 Independent Connection tracking

独立于第三层的链接跟踪,通过广义化的ip_conntrack支持其它非IP协议的第三层协议 

Netfilter Xtables support

如果你打算使用ip_tables,ip6_tables,arp_tables之一就必须选上 

"CLASSIFY" target support

允许为包设置优先级,一些排队规则(atm,cbq,dsmark,pfifo_fast,htb,prio)需要使用它

"CONNMARK" target support

类似于"MARK",但影响的是连接标记的值 
"DSCP" target support

允许对ip包头部的DSCP(Differentiated Services Codepoint)字段进行修改,该字段常用于Qos

"MARK" target support

允许对包进行标记(通常配合ip命令使用),这样就可以改变路由策略或者被其它子系统用来改变其行为 

"NFQUEUE" target Support

用于替代老旧的QUEUE(iptables内建的target之一),因为NFQUEUE能支持最多65535个队列,而QUEUE只能支持一个

"NOTRACK" target support

允许规则指定哪些包不进入链接跟踪/NAT子系统 
"SECMARK" target support

允许对包进行安全标记,用于安全子系统 
"CONNSECMARK" target support

针对链接进行安全标记,同时还会将连接上的标记还原到包上(如果链接中的包尚未进行安全标记),通常与SECMARK target联合使用

"comment" match support

允许你在iptables规则集中加入注释 
"connbytes" per-connection counter match support

允许针对单个连接内部每个方向(进/出)匹配已经传送的字节数/包数 
"connmark" connection mark match support

允许针对每个会话匹配先前由"CONNMARK"设置的标记值 
"conntrack" connection tracking match support

连接跟踪匹配,是"state"的超集,它允许额外的链接跟踪信息,在需要设置一些复杂的规则(比如网关)时很有用

"DCCP" protocol match support

DCCP是打算取代UDP的新传输协议,它在UDP的基础上增加了流控和拥塞控制机制,面向实时业务 

"DSCP" match support 

允许对IP包头的DSCP字段进行匹配 
"ESP" match support 

允许对IPSec包中的ESP头进行匹配,使用IPsec的话就选上吧 
"helper" match support

加载特定协议的连接跟踪辅助模块,由该模块过滤所跟踪的连接类型的包,比如ip_conntrack_ftp模块

"length" match support

允许对包的长度进行匹配 
"limit" match support

允许根据包的进出速率进行规则匹配,常和"LOG target"配合使用以抵抗某些Dos攻击 

"mac" address match support

允许根据以太网的MAC进行匹配,常用于无线网络环境 
"mark" match support 

允许对先前由"MARK"标记的特定标记值进行匹配 
IPsec "policy" match support

使用IPsec就选上吧 
Multiple port match support

允许对TCP或UDP包同时匹配多个端口(通常情况下只能匹配一个端口) 
"physdev" match support

允许对到达的或将要离开的物理桥端口进行匹配 
"pkttype" packet type match support

允许对封包目的地址类别(广播/群播/直播)进行匹配 
"quota" match support

允许对总字节数的限额值进行匹配 
"realm" match support

允许对iptables中的路由子系统中的realm值进行匹配 
"sctp" protocol match support

流控制传输协议(SCTP),十年以后也许能够普及的东西 
"state" match support

这是对包进行分类的有力工具,它允许利用连接跟踪信息对连接中处于特定状态的包进行匹配 

"statistic" match support

允许根据一个给定的百分率对包进行周期性的或随机性的匹配 
sring" match support 

允许根据包所承载的数据中包含的特定字符串进行匹配 
 
Connection tracking (required for masq/NAT)

链接跟踪.可用于报文伪装或地址转换,也可用于增强包过滤能力 
Connection tracking flow accounting

允许针对每个连接记录已经传送的字节/包数,常用于connbytes match 
Connection mark tracking support

允许对连接进行标记,与针对单独的包进行标记的不同之处在于它是针对连接流的.CONNMARK target和connmark match需要它的支持

Connection tracking security mark support

允许对连接进行安全标记,通常这些标记包(SECMARK)复制到其所属连接(CONNSECMARK),再从连接复制到其关联的包(SECMARK)

Connection tracking events

连接跟踪事件支持.如果启用这个选项,连接跟踪代码将提供一个notifier链,它可以被其它内核代码用来获知连接跟踪状态的改变

Connection tracking netlink interface

支持基于netlink的用户空间接口 
SCTP protocol connection tracking support

SCTP是IP网面向多媒体通信的新一代的流控制传输协议 
FTP protocol support 

FTP协议 
IRC protocol support 

IRC协议是一种用来实时聊天协议,用过mIRC的人应当不陌生 
NetBIOS name service protocol support

NetBIOS名字服务协议 
TFTP protocol support

TFTP是基于UDP的比FTP简单的文件传输协议 
Amanda backup protocol support

Amanda备份协议 
PPTP protocol support

点对点隧道协议(PPTP)是一种支持多协议虚拟专用网络的网络技术,ADSL用户对它应该很熟悉 

H.323 protocol support

ITU-T提出的用于IP电话的协议 
SIP protocol support 

IETE提出的用于IP电话的协议 
IP Userspace queueing via NETLINK

已废弃 
IP tables support (required for filtering/masq/NAT)

要用iptables就肯定要选上 
IP range match support

允许对ip地址的范围进行匹配 
TOS match support 

允许对ip包头的TOS(Type Of Service)字段进行匹配 
recent match support 

可以创建一个或多个刚刚使用过的ip地址列表,然后根据这些列表进行匹配 
ECN match support 

允许对TCP/IP包头的ECN(Explicit Congestion Notification)字段进行匹配.ECN是一种显式拥塞通知技术,它不但要求路由器支持而且要求端到端主机的支持,其基本思想是当路由器发生早期拥塞时不是丢弃包而是尽量对包进行标记,接收方接到带有ECN提示的包时,通知发送方网络即将发生拥塞,也就是它通过对包的标记提示TCP源即将发生拥塞,从而引发拥塞避免算法

AH match support 

允许对IPSec包头的AH字段进行匹配 
TTL match support 

允许对ip包头的TTL(生存期)字段进行匹配 
Owner match support 

允许对本地生成的包按照其宿主(user,group,process,session)进行匹配 

address type match support

允许对地址类型(单播,本地,广播)进行匹配 
hashlimit match support

是limit的升级,它基于你选择的ip地址与/或端口动态的创建以limit为桶(bucket)的哈希表.它可以创建诸如"为每个特定的目标IP分配10kpps"或"允许每个特定的源IP分配500pps"之类的规则

Packet filtering 

定义filter表以允许对包进行过滤 
REJECT target support

允许返回一个ICMP错误而不是简单的丢弃包 
LOG target support 

允许将符合条件的包头信息通过syslog进行记录 
ULOG target support 

透过netlink socket将符合条件的封包交给用户空间的ulogd守护进程.反对使用该选项,因为它已经被NETFILTER_NETLINK_LOG代替

TCPMSS target support

允许修改TCP包头中的MSS(最大分段长度)选项值 
Full NAT 
允许进行伪装/端口转发以及其它的NAT功能,仅在你需要使用iptables中的nat表时才需要选择

Packet mangling 

在iptables中启用mangle表以便对包进行各种修改,常用于改变包的路由 
raw table support (required for NOTRACK/TRACE)

在iptables中添加一个'raw'表,该表在netfilter框架中非常靠前,并在PREROUTING和OUTPUT链上有钩子,从而可以对收到的数据包在连接跟踪前进行处理

ARP tables support 

ARP表支持.只有在局域网中才有ARP欺骗问题,另外路由器也会遭到ARP欺骗 
ARP packet filtering 

ARP包过滤.对于进入和离开本地的ARP包定义一个filter表,在桥接的情况下还可以应用于被转发ARP包

ARP payload mangling 

允许对ARP包的荷载部分进行修改,比如修改源和目标物理地址 
IPv6: Netfilter Configuration

针对IPv6的Netfilter配置,需要的话可以参考前面IPv4的Netfilter配置进行选择

DECnet: Netfilter Configuration

针对DECnet的Netfilter配置 
Bridge: Netfilter Configuration

针对桥接的Netfilter配置 
DCCP Configuration 

数据报拥塞控制协议在UDP的基础上增加了流控和拥塞控制机制,使数据报协议能够更好地用于流媒体业务的传输

SCTP Configuration 

流控制传输协议是一种新兴的传输层协议.TCP协议一次只能连接一个IP地址而在SCTP协议一次可以连接多个IP地址且可以自动平衡网络负载,一旦某一个IP地址失效会自动将网络负载转移到其他IP地址上

TIPC Configuration 

透明内部进程间通信协议,以共享内存为基础实现任务和资源的调度,专门用于内部集群通信 

Asynchronous Transfer Mode (ATM)

异步传输模式(ATM)支持 
802.1d Ethernet Bridging

802.1d以太网桥 
802.1Q VLAN Support 

802.1Q虚拟局域网 
DECnet Support 

DECnet是一种很生僻的协议 
ANSI/IEEE 802.2 LLC type 2 Support

看不懂可以不选 
The IPX protocol 

IPX协议 
Appletalk protocol support

与Mac机器通信的协议 
CCITT X.25 Packet Layer

大约没人需要这东西 
LAPB Data Link Driver

大约没人需要这东西 
Acorn Econet/AUN protocols

一种被Acorn计算机使用的又老又慢的协议 
WAN router 
广域网路由 
QoS and/or fair queueing

如果你需要Qos或公平队列就选吧 
Network testing 

网络测试,仅供调试使用 
Amateur Radio support

业余无线电支持 
IrDA (infrared) subsystem support

红外线支持,比如无线鼠标或无线键盘 
Bluetooth subsystem support

蓝牙支持 
Generic IEEE 802.11 Networking Stack

通用无线局域网(IEEE 802.11系列协议)支持 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111873
======================================================================
（8----Executable file formats可执行文件格式）
Kernel support for ELF binaries

ELF是开放平台下最常用的二进制文件格式,支持动态连接,支持不同的硬件平台.除非你知道自己在做什么,否则必选

Kernel support for a.out and ECOFF binaries

早期UNIX系统的可执行文件格式,目前已经被ELF格式取代 
Kernel support for MISC binaries

允许插入二进制的封装层到内核中,使用Java,.NET,Python,Lisp等语言编写的程序时需要它
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111863
=================================================================================
（15----Cryptographic options加密选项）
Cryptographic API 

提供核心的加密API支持.这里的加密算法被广泛的应用于驱动程序通信协议等机制中.子选项可以全不选,内核中若有其他部分依赖它,会自动选上

Cryptographic algorithm manager

创建加密模版实例,必须要选 
HMAC support 
为IPSec所必须,可为PPPoE提供压缩支持 
Null algorithms 

NULL加密算法(什么也不做),用于IPsec协议的封装安全载荷模块(ESP) 
MD4 digest algorithm 

老旧的摘要算法,已经过时 
MD5 digest algorithm 

主流摘要算法,128位(已被中国山东大学王小云攻破,可以快速找到碰撞) 
SHA1 digest algorithm

主流摘要算法,160位(已被中国山东大学王小云攻破,可以快速找到碰撞),速度与MD5相当 

SHA256 digest algorithm

更好的摘要算法,256位,速度较SHA1稍慢 
SHA384 and SHA512 digest algorithms

更好的摘要算法,384/512位,速度大约只有SHA1的40-50% 
Whirlpool digest algorithms

最安全的摘要算法,512位,已被列入ISO标准,目前最新版本为3.0(2003年发布) 

Tiger digest algorithms

号称最快的摘要算法,192位,专门为64位CPU进行了优化 
ECB support 
电子密码本,最简单的加密方法 
CBC support 
密码块链,IPSec需要使用它 
DES and Triple DES EDE cipher algorithms

老迈的(DES)和尚佳的(Triple DES)对称加密算法 
Blowfish cipher algorithm

又老又慢的对称加密算法 
Twofish cipher algorithm

很强的对称加密算法,使用较广 
Twofish cipher algorithms (i586)

很强的对称加密算法,使用较广(针对i586的版本) 
Serpent cipher algorithm

很强的对称加密算法 
AES cipher algorithms

最佳的对称加密算法(Rijndael),128/192/256位,强度最高,快速且节省内存 

AES cipher algorithms (i586)

最佳的对称加密算法(Rijndael),128/192/256位,强度最高,快速且节省内存(针对i586的版本)

CAST5 (CAST-128) cipher algorithm

对称加密算法 
CAST6 (CAST-256) cipher algorithm

对称加密算法 
TEA, XTEA and XETA cipher algorithms

较弱的对称加密算法 
ARC4 cipher algorithm

脆弱的流对称加密算法 
Khazad cipher algorithm

对称加密算法 
Anubis cipher algorithm

对称加密算法 
Deflate compression algorithm

压缩算法,当在IPSec中使用IPCOMP协议时才需要 
Michael MIC keyed digest algorithm

摘要算法,仅仅用于校验iSCSI设备传输的数据,因为算法本身比较脆弱 
CRC32c CRC algorithm 

摘要算法,可用于校验iSCSI设备传输的数据 
Testing module 

快速且丑陋的测试模块 
Hardware crypto devices

仅有VIA C7系列处理器支持硬件加密(VIA PadLock高级加密引擎) 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111993
===============================================================================
（1----Code maturity level options代码成熟度选项）
Prompt for development and/or incomplete code/drivers 

显示尚在开发中或尚未完成的代码与驱动.除非你是测试人员或者开发者,否则请勿选择 

==================================================================

Linux内核Kconfig解读


内核的编译过程
arch=arm，tisdk_am57xx-evm-rt_defconfig确定了.config中的配置，主目录的Makefile按照.config文件中的选择遍历所有文件中的Kconfig（首先是arch/arm/Kconfig），按照Kconfig文件中的依赖关系编译文件，再回到顶层目录生成目标文件。
Kconfig ---> （每个源码目录下）提供选项
.config ---> （源码顶层目录下）保存选择结果
Makefile---> （每个源码目录下）根据.config中的内容来告知编译系统如何编译


配置过程–以驱动为例

新建Kconfig

在/drivers/test下建立Kconfig：
config TEST
    bool "Test driver"
    help
    This driver is for test kernel making.
	
	
这里定义了TEST选项，也就是.config中的CONFIG_TEST，Test driver是显示在menuconfig中的名称。

新建Makefile

建立编译规则，例如CONFIG_TEST=y，目录下源码编译进内核；CONFIG_TEST=m，目录下源码编译为模块。
obj-$(CONFIG_TEST) += test.o

配置上层Makefile和Kconfig

修改Kconfig，增加test子项，在drivers/Kconfig中添加：
source "drivers/test/Kconfig"
修改Makefile，添加编译规则：
obj-y               += test/

Kconfig详细语法

关键词

以下面为例：
config SMP
	bool "Symmetric Multi-Processing"
	depends on CPU_V6K || CPU_V7
	depends on GENERIC_CLOCKEVENTS
	depends on HAVE_SMP
	depends on MMU || ARM_MPU
	select IRQ_WORK
	help
	  This enables support for systems with more than one CPU. If you have
	  a system with only one CPU, say N. If you have a system with more
	  than one CPU, say Y.

关键词
功能




config
紧跟句柄，SMP即为CONFIG_SMP


bool
表示选择，0或1 [Y]


“name”
在menuconfig中显示的字符串，没有则不显示


depends on
表示依赖某一项，支持 || 、&&、!运算符


select
表示选中后，也会选择select指定的项（被选择的无法取消，符号为-Y-或者{Y}）


help
打印帮助，menuconfig可以用shift+？查看


tristate
模块选项，<M>或者<Y>或者<N>（三态）


int/hex/string
选项值为整型数或十六进制数或字符串


range
整型数的范围


default
默认值，数值或者布尔y/n或者字符串或者choice中的选项


prompt
出现在choice中的菜单文字


source
引入子目录的Kconfig


补充：


无depends on，default 为y：默认为y，一般用于必须要设置的选项，此时不要设置prompt；


有depends on，default 为y：所依赖的条目己设置，则默认为y；所依赖的条目未设置，则为n；


有depends on，default 为n：所依赖的条目己设置，则默认为n；所依赖的条目未设置，则为n；


无depends on，default 为n：在为设置prompt的情况下，此选项想要被设置，需要由其他选项来select它。

结构语法

if…endif


if ARCH_S5PC100 --->如果ARCH_S5PC100选项选中了，则在endif范围内的选项才会被选
config CPU_S5PC100
    bool "选项名"
    select S5P_EXT_INT
    select SAMSUNG_DMADEV
    help
      Enable S5PC100 CPU support

endif

choice…endchoice
choice      --->表示选择列表
    prompt "Default I/O scheduler"         //主目录名字
    default DEFAULT_CFQ                    //默认CFQ
    help
      Select the I/O scheduler which will be used by default for all
      block devices.

    config DEFAULT_DEADLINE
        bool "Deadline" if IOSCHED_DEADLINE=y 

    config DEFAULT_CFQ
        bool "CFQ" if IOSCHED_CFQ=y

    config DEFAULT_NOOP
        bool "No-op"

endchoice

menu "Boot options"  ----> menu表示该选项是`不可选`的菜单，其后是在选择列表的菜单名

menu
config USE_OF
    bool "Flattened Device Tree support"
    select IRQ_DOMAIN
    select OF
    select OF_EARLY_FLATTREE
    help
      Include support for flattened device tree machine descriptions.
....

endmenu     ----> menu菜单结束

menuconfig
menuconfig TEST ---> menuconfig表示TEST是一个`可选`菜单，其选中后是CONFIG_TEST
    bool "菜单名"
if TEST
...
endif # TEST

•menu 和 choice 的区别：
menu可以多选；choice为单选。
•menuconfig 和 menu 的区别：
menuconfig本身是可以选中，而menu只能进入子菜单选择，一般menuconfig的句柄是子项的依赖项，而menu是子项的汇总。




Generic Driver Options

驱动程序通用选项 
Select only drivers that don't need compile-time external firmware

只显示那些不需要内核对外部设备的固件作map支持的驱动程序,除非你有某些怪异硬件,否则请选上 

Prevent firmware from being built

不编译固件.固件一般是随硬件的驱动程序提供的,仅在更新固件的时候才需要重新编译.建议选上 

Userspace firmware loading support

提供某些内核之外的模块需要的用户空间固件加载支持,在内核树之外编译的模块可能需要它 

Driver Core verbose debug messages

让驱动程序核心在系统日志中产生冗长的调试信息,仅供调试 
Connector - unified userspace <-> kernelspace linker

统一的用户空间和内核空间连接器,工作在netlink socket协议的顶层.不确定可以不选 

Report process events to userspace

向用户空间报告进程事件(fork,exec,id变化(uid,gid,suid) 
Memory Technology Devices (MTD)

特殊的存储技术装置,如常用于数码相机或嵌入式系统的闪存卡 
Parallel port support

并口支持(传统的打印机接口) 
Plug and Play support

即插即用支持,若未选则应当在BIOS中关闭"PnP OS".这里的选项与PCI设备无关 

PnP Debug Messages 

该选项仅供调试使用 
ISA Plug and Play support

ISA设备即插即用支持 
Plug and Play BIOS support

Linux使用"Plug and Play BIOS"规范v1.0A(1994年)中定义的PNPBIOS自动检测主板上的资源和设备,但是其中的某些特性目前尚未实现,比如:事件通知/扩展坞(Docking Station)信息/ISAPNP服务.如果你希望由内核检测主板上的设备并为其分配资源(此时BIOS中的"PnP OS"必须开启)可以选上,此外,PNPBIOS还有助于防止主板上的设备与其他总线设备冲突.不过需要注意的是ACPI将会逐渐取代PNPBIOS(虽然目前两者可以共存),所以如果你的系统不使用ISA设备并且支持ACPI,建议你不要选中该选项并将BIOS中的"PnP
 OS"关闭 
Plug and Play BIOS /proc interface

该选项仅供调试使用 
Plug and Play ACPI support

让Linux使用PNPACPI自动检测主板上内建的设备并为其分配资源(即使这些设备已被BIOS禁用),它有助于避免设备之间的资源(如中断)冲突

Block devices 

块设备 
Normal floppy disk support

通用软驱支持 
XT hard disk support 

古董级产品 
Parallel port IDE device support

通过并口与计算机连接的IDE设备,比如某些老旧的外接光驱或硬盘之类 
Compaq SMART2 support

基于Compaq SMART2控制器的磁盘阵列卡 
Compaq Smart Array 5xxx support

基于Compaq SMART控制器的磁盘阵列卡 
Mylex DAC960/DAC1100 PCI RAID Controller support

古董级产品 
Micro Memory MM5415 Battery Backed RAM support

一种使用电池做后备电源的内存 
Loopback device support

Loopback是指拿文件来模拟块设备,比如可以将一个iso9660镜像文件挂成一个文件系统 

Cryptoloop Support 

使用系统提供的加密API对Loopback设备加密,但不能用于日志型文件系统 
Network block device support

让你的电脑成为网络块设备的客户端 
Promise SATA SX8 support

基于Promise公司的SATA SX8控制器的RAID卡 
Low Performance USB Block driver

它不是用来支持U盘的,不懂的就别选 
RAM disk support 

内存中的虚拟磁盘,大小固定(由下面的选项决定,也可给内核传递"ramdisk_size=参数"来决定),它的功能和代码都比shmem简单许多

Default number of RAM disks

默认RAM disk的数量 
Default RAM disk size (kbytes)

仅在你真正知道它的含义时才允许修改 
Default RAM disk block size (bytes)

每一个RAM disk的默认块大小,设为PAGE_SIZE的值时效率最高 
Initial RAM filesystem and RAM disk (initramfs/initrd) support

如果启动计算机所必须的模块都在内核里的话可以不选此项 
Packet writing on CD/DVD media

CD/DVD刻录支持 
Free buffers for data gathering

用于收集写入数据的缓冲区个数(每个占用64Kb内存),缓冲区越多性能越好 
Enable write caching 

为CD-R/W设备启用写入缓冲,目前这是一个比较危险的选项 
ATA over Ethernet support

以太网ATA设备支持 
Misc devices 
杂项设备 
ATA/ATAPI/MFM/RLL support

通常是IDE硬盘和ATAPI光驱.纯SCSI系统且不使用这些接口可以不选 
Max IDE interfaces 

最大IDE接口数,两个IDE插槽一般相当于4个接口 
Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support

EIDE支持是当然要选的,否则540MB以上的硬盘都不认识而且不支持主从设备 
Support for SATA (deprecated; conflicts with libata SATA driver)

反对使用,该选项与libata SATA驱动有冲突 
Use old disk-only driver on primary interface

没人用这些古董了 
Include IDE/ATA-2 DISK support

ATA-2支持,除非你的硬盘是古董,否则必选 
Use multi-mode by default

如果不确定就别选,除非出现帮助中指出的错误 
PCMCIA IDE support 

通过PCMCIA卡与计算机连接的IDE设备,比如某些外置硬盘或光驱 
Include IDE/ATAPI CDROM support

有IDE光驱的就选 
Include IDE/ATAPI TAPE support

有IDE磁带的就选 
Include IDE/ATAPI FLOPPY support

有IDE软驱的就选 
SCSI emulation support

SCSI仿真,以前刻录光碟时需要,现在不需要了 
IDE Taskfile Access 

对介质进行直接的原始访问,它是一个复杂且有效的测试和校验硬件的方案,可以在驱动层之下执行数据恢复工作

generic/default IDE chipset support

通用IDE芯片组支持 
CMD640 chipset bugfix/support

586以前的主板上常用,毛病多多 
PNP EIDE support 

外接的即插即用EIDE卡支持 
PCI IDE chipset support

基于PCI总线的IDE芯片组支持,帮助IDE驱动自动检测和配置所有基于PCI的IDE接口 

Sharing PCI IDE interrupts support

与其他PCI设备共享中断,一来可能冲突,二来降低性能,不选为妙 
Boot off-board chipsets first support

不使用外接IDE控制器的就别选,使用外接IDE控制器的注意看帮助 
Generic PCI IDE Chipset Support

通用的PCI IDE芯片组支持,如果你的芯片组在下面能找到就别选 
OPTi 82C621 chipset enhanced support

OPTi 82C621 EIDE控制器 
RZ1000 chipset bugfix/support

486/586年代的玩艺 
Generic PCI bus-master DMA support

通用的PCI总线控制器DMA支持,586以上的系统都支持 
Force enable legacy 2.0.X HOSTS to use DMA

历史遗留问题,别管它,不选 
Use PCI DMA by default when available

默认启用DMA,586以上的系统都支持,建议选择 
Enable DMA only for disks

只对硬盘启用DMA,若你的光驱不支持DMA就选上 
{此处省略的部分按照自己主板上实际使用的芯片组进行选择}

Other IDE chipset support

其它IDE芯片组支持(多数需要在引导时指定特定的内核参数),如果你使用这样的芯片组就按实际情况选择子项吧

IGNORE word93 Validation BITS

ATA-4和ATA-5规范中对于如何在80针的数据线上探测解释的不明确,导致了两种不同标准的产品同时出现,这可能导致ATA-66/100降低为ATA-33,若出现这个问题,可以打开这个选项忽略这种不同,但是又有可能导致另外的问题

Old hard disk (MFM/RLL/IDE) driver

旧版本的MFM/RLL/IDE驱动,不建议使用 
SCSI device support 

SCSI设备 
RAID Transport Class 

用于SCSI设备的软件RAID支持,需要配合外部工具 
SCSI device support 

有任何SCSI/SATA/USB/光纤/FireWire/IDE-SCSI仿真设备之一就必须选上 

legacy /proc/scsi/ support

一些老的刻录程序可能需要它 
SCSI disk support 

SCSI硬盘或U盘 
SCSI tape support 

SCSI磁带 
SCSI OnStream SC-x0 tape support

另一种SCSI磁带 
SCSI CDROM support 

SCSI CDROM 
Enable vendor-specific extensions

仅在古董级的SCSI CDROM设备上才需要 
SCSI generic support 

若有SCSI硬盘/CD-ROM/tape之外的SCSI设备才需要选择 
SCSI media changer support

一种SCSI备份设备 
Probe all LUNs on each SCSI device

在每个SCSI设备上探测逻辑设备数.只在一个SCSI设备上有多个逻辑设备(模拟多个SCSI设备,比如多口读卡器)时才需要选它,一般的SCSI设备不需要

Verbose SCSI error reporting

以易读的方式报告SCSI错误,内核将会增大12K 
SCSI logging facility

启用SCSI日志(默认并不开启,需要在挂载/proc后执行echo "scsi log token [level]" > /proc/scsi/scsi命令才能打开日志),可用于跟踪和捕获SCSI设备的错误

SCSI Transports 

SCSI接口类型,下面的子项可以全不选,内核中若有其他部分依赖它,会自动选上 
Parallel SCSI (SPI) Transport Attributes

传统且常见的并行SCSI(Ultra320/160之类) 
FiberChannel Transport Attributes

光纤通道 
iSCSI Transport Attributes

iSCSI是利用TCP/IP网络传送SCSI命令和数据的I/O技术 
SAS Transport Attributes

串行SCSI传输属性支持(SAS对于的关系SPI犹如SATA对于ATA) 
SAS Domain Transport Attributes

为使用了SAS Domain的驱动程序提供帮助 
Compile the SAS Domain Transport Attributes in debug mode

仅供调试使用 
SCSI low-level drivers

底层SCSI驱动程序,按你实际使用的产品选择 
iSCSI Initiator over TCP/IP

用于iSCSI在TCP/IP网络上传播的起动程序 
{此处省略的部分按照自己实际使用的控制器进行选择,仅用一个例子解说子项}

Adaptec AIC79xx U320 support

以基于PCI-X的Adaptec Ultra 320 SCSI控制器为例解说子项 
Maximum number of TCQ commands per device

每个SCSI设备的标记指令队列的最大长度(上限253).上限越高性能越好,但是对于SCSI设备较多的系统来说可能造成内存分配失败.此值还可以通过tag_info内核引导参数指定

Initial bus reset delay in milli-seconds

初始总线reset之后的延时微秒数(默认5000) 
Enable Read Streaming for All Targets

对所有的标记队列启用Read Streaming(可以增强效能,但是在一些Adaptec早期的U320产品上有缺陷),此特性还可以通过rd_strm内核引导参数指定

Compile in Debugging Code

仅用于调试 
Debug code enable mask (16383 for all debugging)

出错代码的掩码,0表示禁止所有,16383表示打开所有 
Decode registers during diagnostics

将出错代码的解释内容编译进去,这样就不需要查看aic7xxx.reg中的出错代码表以确定出错代码的含意了

PCMCIA SCSI adapter support

通过PCMCIA卡与计算机连接的SCSI设备 
Serial ATA and Parallel ATA drivers

SATA与PATA设备 
ATA device support 

SATA或PATA接口的硬盘或光驱等设备 
AHCI SATA support 

SATA高级主机控制器接口.要使用NCQ功能就必须选中它,另外BIOS中的SATA工作模式亦要选AHCI模式

Generic ATA support 

基于新的ATA层的通用ATA控制器驱动,仅在你的芯片组在列表中找不到时才需要 
{此处省略的部分按照自己主板上实际使用的芯片组进行选择}

Old CD-ROM drivers (not SCSI, not IDE)

老旧的CD-ROM驱动,这种CD-ROM既不使用SCSI接口,也不使用IDE接口 
Multi-device support (RAID and LVM)

多设备支持(RAID和LVM).RAID和LVM的功能是使多个物理设备组建成一个单独的逻辑磁盘 

RAID support 
软件RAID(需要使用外部工具),若你有硬件RAID控制器,可以不选 
Linear (append) mode 

追加模式(简单的将一个分区追加在另一个分区之后) 
RAID-0 (striping) mode

RAID-0(等量分割)模式 
RAID-1 (mirroring) mode

RAID-1(镜像)模式 
RAID-10 (mirrored striping) mode

RAID 0+1模式 
RAID-4/RAID-5/RAID-6 mode

这些模式比较复杂,一般不用 
Support adding drives to a raid-5 array

RAID-5阵列可以通过添加额外的驱动器进行扩展(restriping),这个选项允许在线进行这样的操作,同时要求mdadm的版本大于2.4.1

Multipath I/O support

多路IO支持是指在服务器和存储设备之间使用冗余的物理路径组件创建"逻辑路径",如果这些组件发生故障并造成路径失败,多路径逻辑将为I/O使用备用路径以使应用程序仍然可以访问其数据

Faulty test module for MD

用于MD(Multi-device)的缺陷测试模块 
Device mapper support

Device-mapper是一个底层的卷管理器,不用LVM就别选了 
Fusion MPT device support

Fusion MPT设备支持 
IEEE 1394 (FireWire) support

IEEE 1394(火线) 
I2O device support 

I2O(智能IO)设备使用专门的I/O处理器负责中断处理/缓冲存取/数据传输等烦琐任务以减少CPU占用,一般的主板上没这种东西

Network device support

网络设备 
Network device support

网络设备支持,当然要选啦 
Intermediate Functional Block support

这是一个中间层驱动,可以用来灵活的配置资源共享,看不懂的可以不选 
Dummy net driver support

哑接口网络,使用SLIP或PPP传输协议(如ADSL用户)的需要它 
Bonding driver support

将多个以太网通道绑定为一个,也就是两块网卡具有相同的IP地址并且聚合成一个逻辑链路工作,可以用来实现负载均衡或硬件冗余

EQL (serial line load balancing) support

串行线路的负载均衡.如果有两个MODEM和两条电话线而且用SLIP或PPP协议,该选项可以让您同时使用这两个MODEM以达到双倍速度(在网络的另一端也要有同样的设备)

Universal TUN/TAP device driver support

TUN/TAP可以为用户空间提供包的接收和发送服务,比如可以用来虚拟一张网卡或点对点通道 

General Instruments Surfboard 1000

SURFboard 1000插卡式Cable Medem(ISA接口),这玩意大概早就绝种了 

ARCnet devices 

一般人没有ARCnet类型的网卡 
PHY device support 

数据链路层芯片简称为MAC控制器,物理层芯片简称之为PHY,通常的网卡把MAC和PHY的功能做到了一颗芯片中,但也有一些仅含PHY的"软网卡"

Ethernet (10 or 100Mbit)

目前最广泛的10/100M网卡 
Ethernet (1000 Mbit) 

目前已成装机主流的1000M网卡 
Ethernet (10000 Mbit)

万兆网卡无福消受啦 
Token Ring devices 

令牌环网设备 
Wireless LAN (non-hamradio)

无线LAN 
PCMCIA network device support

PCMCIA或CardBus网卡 
Wan interfaces 

WAN接口 
ATM drivers 
异步传输模式 
FDDI driver support 

光纤分布式数据接口 
HIPPI driver support 

HIPPI(高性能并行接口)是一个在短距离内高速传送大量数据的点对点协议 
PLIP (parallel port) support

将并口映射成网络设备,这样两台机器即使没有网卡也可以使用并口通过并行线传输IP数据包 

PPP (point-to-point protocol) support

点对点协议,PPP已经基本取代SLIP了,用ADSL的可要仔细选择了 
PPP multilink support

多重链路协议(RFC1990)允许你将多个线路(物理的或逻辑的)组合为一个PPP连接一充分利用带宽,这不但需要pppd的支持,还需要ISP的支持

PPP filtering 

允许对通过PPP接口的包进行过滤 
PPP support for async serial ports

通过标准异步串口(COM1,COM2)使用PPP,比如使用老式的外置modem(非同步modem或ISDN modem)上网

PPP support for sync tty ports

通过同步tty设备(比如SyncLink适配器)使用PPP,常用于高速租用线路(比如T1/E1) 

PPP Deflate compression

为PPP提供Deflate(等价于gzip压缩算法)压缩算法支持,需要通信双方的支持才有效 

PPP BSD-Compress compression

为PPP提供BSD(等价于LZW压缩算法,没有gzip高效)压缩算法支持,需要通信双方的支持才有效

PPP MPPE compression (encryption)

为PPP提供MPPE加密协议支持,它被用于微软的P2P隧道协议中 
PPP over Ethernet 

这就是ADSL用户最常见的PPPoE啦,也就是在以太网上跑的PPP协议 
PPP over ATM 
在ATM上跑的PPP 
SLIP (serial line) support

一个在串行线上(例如电话线)传输IP数据报的TCP/IP协议.小猫一族的通讯协议,与宽带用户无关 

CSLIP compressed headers

CSLIP协议比SLIP快,它将TCP/IP头(而非数据)进行压缩传送,需要通信双方的支持才有效 

Keepalive and linefill

让SLIP驱动支持RELCOM linefill和keepalive监视,这在信号质量比较差的模拟线路上是个好主意

Six bit SLIP encapsulation

这种线路非常罕见,不要选它 
Fibre Channel driver support

光纤通道 
Traffic Shaper 

流量整形,已废弃 
Network console logging support

通过网络记录内核信息 
Netpoll support for trapping incoming packets

不知道Netpoll是什么的可以不选 
Netpoll traffic trapping

不知道Netpoll是什么的可以不选 
ISDN subsystem 

综合业务数字网(Integrated Service Digital Network) 

Telephony Support 

VoIP支持 
Input device support 

输入设备 
Generic input layer (needed for keyboard,mouse...)

通用输入层,要使用键盘鼠标的就必选 
Support for memoryless force-feedback devices

游戏玩家使用的力反馈设备 
Mouse interface 

鼠标接口 
Provide legacy /dev/psaux device

仍然支持作为传统的/dev/psaux设备 
Horizontal screen resolution

数字化转换器或图形输入板的水平分辩率 
Vertical screen resolution

数字化转换器或图形输入板的垂直分辨率 
Joystick interface 

游戏杆 
Touchscreen interface

触摸屏 
Event interface 

能够利用/dev/input/eventX来存取输入设备的事件 
Event debugging 

该选项仅供调试 
Keyboards 
键盘驱动,一般选个AT键盘即可 
Mouse 
鼠标驱动,一般选个PS/2鼠标即可 
Joysticks 
游戏杆驱动 
Touchscreens 
触摸屏驱动 
Miscellaneous devices

其他杂项驱动,一般选个PC喇叭即可 
Hardware I/O ports 

硬件I/O端口 
Serial I/O support 

使用PS/2键盘或鼠标的就必选 
i8042 PC Keyboard controller

PS/2接口的键盘和鼠标 
Serial port line discipline

串口键盘或鼠标 
ct82c710 Aux port controller

一种德州仪器TravelMate笔记本上使用QuickPort接口的鼠标 
Parallel port keyboard adapter

并口键盘或鼠标 
PCI PS/2 keyboard and PS/2 mouse controller

接在移动式扩展坞(Docking station)上的键盘或鼠标 
PS/2 driver library 

为PS/2接口上的设备提供驱动(比如PS/2鼠标或标准AT键盘) 
Raw access to serio ports

不是hacker就别选了 
Gameport support 

就是早年"小霸王"游戏机上的那种手柄 
Character devices 

字符设备 
Virtual terminal 

虚拟终端.除非是嵌入式系统,否则必选 
Support for console on virtual terminal

内核将一个虚拟终端用作系统控制台(将诸如模块错误/内核错误/启动信息之类的警告信息发送到这里,通常是第一个虚拟终端).除非是嵌入式系统,否则必选

Support for binding and unbinding console drivers

虚拟终端是通过控制台驱动程序与物理终端相结合的,但在某些系统上可以使用多个控制台驱动程序(如framebuffer控制台驱动程序),该选项使得你可以选择其中之一

Non-standard serial port support

非标准串口支持.这样的设备早就绝种了 
Serial drivers 

串口驱动.如果你有老式的串口鼠标或小猫之类的就选吧 
Unix98 PTY support 

伪终端(PTY)可以模拟一个终端,它由slave(等价于一个物理终端)和master(被一个诸如xterms之类的进程用来读写slave设备)两部分组成的软设备.使用telnet或ssh远程登录者必选

Legacy (BSD) PTY support

使用过时的BSD风格的/dev/ptyxx作为master,/dev/ttyxx作为slave,这个方案有一些安全问题,建议不选

Parallel printer support

并口打印机 
Support for console on line printer

允许将内核信息输出到并口,这样就可以打印出来 
Support for user-space parallel port device drivers

/dev/parport设备支持,比如deviceid之类的程序需要使用它,大部分人可以关闭该选项

Texas Instruments parallel link cable support

德州仪器生产的一种使用并行电缆的图形计算器,如果你不知道这是什么设备就别选了 
IPMI 
可以利用IPMI远程监视服务器的物理特征(温度,电压,风扇,电源,机箱入侵),它是独立于CPU,BIOS,OS的,只要接通电源就可以实现对服务器的监控

IPMI top-level message handler

IPMI消息处理器,要启用IPMI远程监视这个就必选 
Generate a panic event to all BMCs on a panic

当发生紧急情况(panic)时,IPMI消息处理器将会向每一个已注册的底板管理控制器(BMC)接口生成一个描述该panic的IPMI事件,这些事件可以引发日志记录/报警/重启/关机等动作

Generate OEM events containing the panic string

当发生紧急情况(panic)时,IPMI消息处理器将会产生OEM类型的事件 
Device interface for IPMI

为IPMI消息处理器提供一个IOCTL接口已便用户空间的进程也可以使用IPMI 
IPMI System Interface handler

向系统提供接口(KCS,SMIC),一般你用了IPMI就需要选上 
IPMI Watchdog Timer 

启用IPMI Watchdog定时器 
IPMI Poweroff 

允许IPMI消息处理器关闭机器 
Watchdog Cards 

能让系统在出现致命故障后自动重启,如果没有硬件Watchdog,建议使用Hangcheck timer而不是软件Watchdog

Watchdog Timer Support

选中它并选中下面的一个Driver之后,再创建一个/dev/watchdog节点即可拥有一只Watchdog了.更多信息请参考内核帮助

Disable watchdog shutdown on close

一旦Watchdog启动后就禁止将其停止 
Software watchdog 

软件Watchdog,使用它不需要有任何硬件的支持,但是可靠性没有硬件Watchdog高 

{此处省略的硬件Watchdog部分请按照自己主板实际使用的芯片(可能在南桥中)进行选择}

Hardware Random Number Generator Core support

硬件随机数发生器核心支持 
Intel HW Random Number Generator support

Intel芯片组的硬件随机数发生器 
AMD HW Random Number Generator support

AMD芯片组的硬件随机数发生器 
AMD Geode HW Random Number Generator support

AMD Geode LX的硬件随机数发生器 
VIA HW Random Number Generator support

VIA芯片组的硬件随机数发生器 
/dev/nvram support 

直接存取主板上CMOS的接口,太危险了!建议别选 
Enhanced Real Time Clock Support

启用该选项并创建/dev/rtc文件后就可以通过/proc/driver/rtc访问系统的硬件时钟(RTC),众多功能依赖于它(如SMP,IRQ共享,定时器),建议选择

Double Talk PC internal speech card support

由RC Systems公司制造的一种语音合成器 
Siemens R3964 line discipline

与使用西门子R3964协议的设备同步通信,除非你有一些诸如PLC之类的特殊设备,否则别选 

Applicom intelligent fieldbus card support

Applicom international公司生产的用于现场总线连接卡 
Sony Vaio Programmable I/O Control Device support

Sony VAIO笔记本上的东西 
Ftape, the floppy tape device driver

还使用磁带的就选吧 
/dev/agpgart (AGP Support)

AGP总线支持,有AGP显卡的还必须从子项中选取符合自己显卡型号的驱动 
Direct Rendering Manager

DRI允许应用程序以高效安全的方式直接访问图形处理,主要用于硬件3D加速.桌面用户建议选择,同时还必须从子项中选取符合自己显卡型号的驱动

PCMCIA character devices

使用PCMCIA接口的字符设备,如果你有这种设备就到子项中去选吧 
ACP Modem (Mwave) support

IBM Thinkpad上的一种软猫,古董产品 
NatSemi SCx200 GPIO Support

松下的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 
NatSemi PC8736x GPIO Support

松下的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 
NatSemi Base GPIO Support

松下的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 
 
I2C support 
I2C是Philips极力推动的微控制应用中使用的低速串行总线协议,可用于监控电压/风扇转速/温度等.SMBus(系统管理总线)是I2C的子集.除硬件传感器外"Video For Linux"也需要该模块的支持

I2C device interface 

I2C设备接口,允许用户空间的程序通过/dev/i2c-*设备文件使用I2C总线 
I2C Algorithms 

I2C算法,可以全不选,若有其他部分依赖其子项时,会自动选上 
I2C Hardware Bus support

按实际硬件情况选对应的子项即可 
Miscellaneous I2C Chip support

其他不常见的产品,按需选择 
I2C Core debugging messages

仅供调试 
I2C Algorithm debugging messages

仅供调试 
I2C Bus debugging messages

仅供调试 
I2C Chip debugging messages

仅供调试 
SPI support 
串行外围接口(SPI)常用于微控制器(MCU)与外围设备(传感器,eeprom,flash,编码器,模数转换器)之间的通信,比如MMC和SD卡就通常需要使用SPI

Dallas's 1-wire bus 

一线总线 
Hardware Monitoring support

当前主板大多都有一个监控硬件健康的设备用于监视温度/电压/风扇转速等,请按照自己主板实际使用的芯片选择相应的子项.另外,该功能还需要I2C的支持

Multimedia devices 

多媒体设备 
Video For Linux 

要使用音频/视频设备或FM收音卡的就必选,此功能还需要I2C的支持 
Enable Video For Linux API 1

使用老旧的V4L第一版API,反对使用 
Enable Video For Linux API 1 compatible Layer

提供对第一版V4L的兼容,建议不选 
Video Capture Adapters

视频捕获卡 
Enable advanced debug functionality

该选项仅供调试 
Autoselect pertinent encoders/decoders and other helper chips

为视频卡自动选择所需的编码和解码模块,建议选择 
Virtual Video Driver 

虚拟视频卡,仅供测试视频程序和调试 
SAA5246A, SAA5281 Teletext processor

该选项仅对欧洲用户有意义,中国用户不需要 
SAA5249 Teletext processor

该选项仅对欧洲用户有意义,中国用户不需要 
{此处省略的硬件请按照自己实际使用的芯片进行选择}

V4L USB devices 

使用USB接口的视频卡,子项请按照自己实际使用的视频卡选择 
Radio Adapters 

音频卡,子项请按照自己实际使用的音频卡选择 
Digital Video Broadcasting Devices

数字视频广播设备(DVB卡或机顶盒),子项请按自己实际使用的硬件选择 
DABUSB driver 

USB接口的数字音频广播设备接收器 
Graphics support 

图形设备/显卡支持 
Enable firmware EDID 

允许访问Video BIOS中的扩展显示器识别数据(EDID),使用Matrox显卡的建议关闭,建议桌面用户选择

Support for frame buffer devices

帧缓冲设备是为了让应用程序使用统一的接口操作显示设备而对硬件进行的抽象,建议桌面用户选择 

Enable Video Mode Handling Helpers

使用GTF和EDID来帮助处理显示模式,可以不选,若有其他选项依赖于它时,会自动选上 

Enable Tile Blitting Support

可以不选,若有其他选项依赖于它时,会自动选上 
VGA 16-color graphics support

16色VGA显卡.如果你有这种古董就选吧 
VESA VGA graphics support

符合VESA 2.0标准的显卡的通用驱动,如果显卡芯片在下面能够找到就可以不选 
{此处省略的硬件请按照自己实际使用的显卡芯片进行选择}

Virtual Frame Buffer support

仅供调试使用 
Console display driver support

控制台显示驱动 
VGA text console 

文本控制台,必选 
Enable Scrollback Buffer in System RAM

在内存中开辟额外的屏幕缓冲区,这将允许你回滚屏幕 
Scrollback Buffer Size (in KB)

在内存中开辟的额外屏幕缓冲区大小 
Video mode selection support

允许在内核启动时使用"vga="选择文本模式,如果你希望一行能够显示更多字符的话可以打开它 

MDA text console (dual-headed)

如果你有古董级别的单色显卡并且作为第二块显卡使用以实现双头显示就选上吧 
Framebuffer Console support

基于framebuffer的控制台驱动,服务器可以不选 
Framebuffer Console Rotation

显示画面旋转,它可能大大降低显示速度,建议不选 
Select compiled-in fonts

选择内建字体 
VGA 8x8 font 
高分辨率下的小字体 
VGA 8x16 font 

底分辨率下的大字体 
{其它字体省略}

Logo configuration 

启动时显示linux的logo(一幅企鹅图像),喜欢炫一下的就选吧 
Backlight & LCD device support

LCD显示器支持,一般无需选择 
Sound 
声卡 
Advanced Linux Sound Architecture

使用声卡者必选 
Sequencer support 

音序器支持(MIDI必需),除非你确定不需要,否则请选上 
Sequencer dummy client

除非你要同时连接到多个MIDI设备或应用程序,否则请不要选择 
OSS Mixer API 

OSS混音器API仿真,许多程序目前仍然需要使用它,建议选择 
OSS PCM (digital audio) API

OSS数字录音(PCM)API模拟,许多程序目前仍然需要使用它,建议选择 
OSS PCM (digital audio) API - Include plugin system

建议不选 
OSS Sequencer API 

OSS音序器支持,许多程序目前仍然需要使用它,建议选择 
RTC Timer support 

为ALSA启用RTC定时器支持,建议选择 
Use RTC as default sequencer timer

将RTC当作默认的时序脉冲发生器 
Dynamic device file minor numbers

仅供拥有多个声卡的用户选择 
Support old ALSA API 

支持已被废弃的老版本ALSA API 
Verbose procfs contents

仅供调试使用 
Verbose printk 

仅供调试使用 
Debug 
仅供调试使用 
Generic devices 

通用设备 
Dummy (/dev/null) soundcard

仅供调试 
Virtual MIDI soundcard

虚拟MIDI驱动,允许将使用原始MIDI设备的应用程序连接到音序器客户端,如果你不知道MIDI是什么就别选

{此处省略的硬件请按照自己实际使用的声卡芯片进行选择}

PCI devices 
PCI接口的声卡,请按实际使用的声卡选择子项 
USB devices 
USB接口的声卡,请按实际使用的声卡选择子项 
PCMCIA devices 

PCMCIA接口的声卡,请按实际使用的声卡选择子项 
Open Sound System 

反对使用 
USB support 
USB支持 
Support for Host-side USB

主机端(Host-side)USB支持.通用串行总线(USB)是一个串行总线子系统规范,它比传统的串口速度更快并且特性更丰富(供电,热插拔,最多可接127个设备等),有望在将来一统PC外设接口.USB的"Host"(主机)被称为"根"(也可以理解为是主板上的USB控制器),外部设备被称为"叶子",而内部的节点则称为"hub"(集线器).基本上只要你想使用任何USB设备都必须选中此项.另外,你还需要从下面选中至少一个"Host Controller
 Driver"(HCD),比如适用于USB1.1的"UHCI HCD support"或"OHCI HCD support",适用于USB2.0的"EHCI HCD (USB 2.0) support".如果你拿不准的话把他们全部选中一般也不会出问题.如果你的系统有设备端的USB接口(也就是你的系统可以作为"叶子"使用),请到"USB Gadget"中进行选择.

USB verbose debug messages

仅供调试使用 
USB device filesystem

在/proc/bus/usb里列出当前连接的usb设备(mount -t usbfs none /proc/bus/usb),这样用户空间的程序就可以直接访问这些USB设备,基本上你要使用USB设备的话就必须选中此项

Enforce USB bandwidth allocation

执行usb带宽分配限制,禁止打开占用usb总线带宽超过90%的设备,关闭该选项可能会导致某些设备无法正常工作

Dynamic USB minor allocation

除非你有超过16个同类型的USB设备,否则不要选择 
USB selective suspend/resume and wakeup

usb设备的挂起和恢复,毛病多多且许多设备尚未支持它,建议不选 
EHCI HCD (USB 2.0) support

USB 2.0支持(大多数2002年以后的主板都支持).如果你选中了此项,一般来说你还需要选中OHCI或UHCI驱动

Full speed ISO transactions

由于USB 2.0支持低速(1.5Mbps)/全速(12Mbps)/高速(480Mbps)三种规格的外部设备,为了将全/低速设备对高速设备可用带宽的影响减到最小,在USB2.0集线器中提供了一种事务转换(Transaction Translator)机制,该机制支持在Hub连接的是全/低速设备的情况下,允许主控制器与Hub之间以高速传输所有设备的数据,从而节省不必要的等待.如果你没有外置的USB集线器就无需选择

Root Hub Transaction Translators

带有USB 2.0接口的主板上都有一个"根集线器"(Root Hub)以允许在无需额外购买hub的情况下就可以提供多个USB插口,其中的某些产品还在其中集成了事务转换(Transaction Translator)功能,这样就不需要再额外使用一个兼容OHCI或UHCI的控制器来兼容USB 1.1,即使你不太清楚自己主板上的根集线器是否集成了事务转换功能也可以安全的选中此项

Improved Transaction Translator scheduling

如果你有一个高速USB 2.0 hub并且某些接在这个hub上的低速或全速设备不能正常工作(显示'cannot submit datapipe: error -28'或'error -71'错误),可以考虑选上

ISP116X HCD support 

ISP1160/ISP1161主机USB控制器,是符合USB2.0全速规范的单片主机控制器和设备控制器,支持OHCI标准

OHCI HCD support 

开放主机控制接口(OHCI)是主要针对嵌入式系统的USB 1.1主机控制器规范 
UHCI HCD (most Intel and VIA) support

通用主机控制器接口(UHCI)是主要针对PC机的USB 1.1主机控制器规范.另外,EHCI也可能需要它

Elan U132 Adapter Host Controller

如果你有这种硬件就选吧 
SL811HS HCD support 

如果你有这种硬件就选吧 
USB Bluetooth TTY support

USB蓝牙TTY设备支持 
USB MIDI support 

USB MIDI设备支持 
USB Modem (CDC ACM) support

USB接口的猫或ISDN适配器 
USB Printer support 

USB打印机 
USB Mass Storage support

USB存储设备(U盘,USB硬盘,USB软盘,USB CD-ROM,USB磁带,memory sticks,数码相机,读卡器等等).该选项依赖于'SCSI device support',且大部分情况下还依赖于'SCSI disk support'(比如U盘或USB硬盘)

USB Mass Storage verbose debug

仅供调试使用 
{省略的部分请按照自己实际使用的硬件选择(事实上大部分人都没有这些设备,可以全不选)}

The shared table of common (or usual) storage devices

该模块包含一张记录了常用USB存储设备及其驱动的表格,这样你无需重新编译模块即可在切换这些设备时自动邦定对应的驱动(还需要对/etc/modprobe.conf进行相应的设置).不确定的建议不选

USB Human Interface Device (full HID) support

USB人机界面设备(鼠标/键盘/游戏杆/手写版等人操作计算机的设备),该驱动不能和"USB HID Boot Protocol drivers"同时使用

HID input layer support

如果你有USB接口的鼠标/键盘/游戏杆/手写板等输入设备就必选 
Enable support for iBook/PowerBook special keys

苹果iBooks/PowerBooks键盘上的Fn/Numlock等功能键支持 
Force feedback support

力反馈设备 
/dev/hiddev raw HID device support

如果你有USB监控装置或不间断电源(UPS)之类的非输入设备就选上 
USB HID Boot Protocol drivers

如果你有绝对的把握确信不为自己的键盘和鼠标使用通常的HID驱动,而要使用Boot Protocol模式的HID驱动(常见于嵌入式环境)就选吧

Aiptek 6000U/8000U tablet support

一种手写板 
Wacom Intuos/Graphire tablet support

一种手写/绘图板 
Acecad Flair tablet support

一种数控绘图板 
KB Gear JamStudio tablet support

一种手写/绘图板 
Griffin PowerMate and Contour Jog support

一种具有调节音量/滚动文本/视频快进快退等功能的产品 
USB Touchscreen Driver

USB触摸屏驱动 
Yealink usb-p1k voip phone

一种VoIP电话 
X-Box gamepad support

X-Box游戏板 
ATI / X10 USB RF remote control

一种usb远程控制设备 
ATI / Philips USB RF remote control

一种usb远程控制设备 
Keyspan DMR USB remote control

一种usb远程控制设备 
Apple USB Touchpad support

苹果机上的触摸板 
USB Mustek MDC800 Digital Camera support

一种数码相机 
Microtek X6USB scanner support

一种扫描仪 
USB Network Adapters 

USB网络适配器,如果你有这种设备请按自己实际使用的硬件选择子项 
USB Monitor 
usb流量监控,一般没必要选它 
USS720 parport driver

一种USB接口转并口的转换设备 
USB Serial Converter support

USB接口转串口的转换设备 
EMI 6|2m USB Audio interface support

一种USB音频设备 
EMI 2|6 USB Audio interface support

一种USB音频设备 
ADU devices from Ontrak Control Systems

Ontrak Control Systems公司的一种自动拨号设备 
USB Auerswald ISDN support

一种ISDN设备 
USB Diamond Rio500 support

一种mp3播放机 
USB Lego Infrared Tower support

一种无线发射机 
SB LCD driver support

USB液晶显示器 
USB LED driver support

USB发光二极管 
Cypress CY7C63xxx USB driver support

德国AK Modul-Bus Computer GmbH公司的一种产品,不知道是用来干什么的 

Cypress USB thermometer driver support

一种温度计?? 
USB Phidgets drivers 

来自Phidgets公司的各种USB产品 
Siemens ID USB Mouse Fingerprint sensor support

西门子公司的一种指纹传感器 
Elan PCMCIA CardBus Adapter USB Client

Elan公司的一种USB转PCMCIA的适配器 
Apple Cinema Display support

苹果公司的一种Cinema Display
SB 2.0 SVGA dongle support (Net2280/SiS315)

一种软件狗
SB LD driver 
USB LD驱动 
PlayStation 2 Trance Vibrator driver support

SONY的PS2上面的"入迷振荡器"(类似于力反馈手柄) 
USB testing driver 

测试中的驱动,别选 
USB DSL modem support

USB DSL猫 
SB Gadget Support 

其他各种杂七杂八的usb小玩艺 
MMC/SD Card support 

MMC/SD卡支持 
LED devices 
发光二级管(LED)设备 
InfiniBand support 

InfiniBand是一个通用的高性能I/O规范,它使得存储区域网中以更低的延时传输I/O消息和集群通讯消息并且提供很好的伸缩性.用于Linux服务器集群系统

EDAC - error detection and reporting (RAS)

错误检测与纠正(EDAC)的目标是发现并报告甚至纠正在计算机系统中发生的错误,这些错误是由CPU或芯片组报告的底层错误(内存错误/缓存错误/PCI错误/温度过高,等等),建议选择.如果这些代码报告了一个错误,请到http://bluesmoke.sourceforge.net/和http://buttersideup.com/edacwiki查看更多信息

Debugging 
仅供调试使用 
Main Memory EDAC (Error Detection And Correction) reporting

一些系统能够检测和修正主内存中的错误,EDAC能够报告这些信息(EDAC自己检测到的或者根据ECC得到的).EDAC还会尽量检测这些错误发生在哪里以便于替换损坏的内存.建议选择并按照你实际使用的芯片组选取子项

Error detecting method

错误检测方法,当前只有一个"Poll for errors"(错误轮询)可用 
Real Time Clock 

所有的PC机主板都包含一个电池动力的实时时钟芯片,以便在断电后仍然能够继续保持时间,RTC通常与CMOS集成在一起,因此BIOS可以从中读取当前时间

RTC class 
通用RTC类支持,选中此项后你就可以在操作系统中使用一个或多个RTC设备(你还必须从下面启用一个或多个RTC接口)

Set system time from RTC on startup

系统启动时使用从指定的RTC设备中读取的时间来设定系统时间,通常这将有助于避免不必要的文件系统检测程序(fsck)的运行,建议选择

The RTC to read the time from

指定具体从哪个RTC设备中读取时间 
RTC debug support 

仅供调试使用 
sysfs 
允许通过sysfs接口使用RTC,允许多个RTC设备,也就是/sys/class/rtc/rtc0~N

proc 
允许通过proc接口使用RTC,仅允许一个RTC设备,也就是/proc/driver/rtc 

dev 
允许通过dev接口使用RTC,允许多个RTC设备,也就是"udev"设置的/dev/rtc0~N,建议你建立一个指向其中之一的软连接/dev/rtc,某些程序(比如hwclock)需要使用/dev/rtc

RTC UIE emulation on dev interface

如果底层rtc芯片驱动没有提供RTC_UIE就仿真一个RTC_UIE.那些请求将产生每秒一次的更新请求以用来同步[这个选项的意思我也搞不清楚究竟时啥意思,翻译的也可能有误]

{此处省略的RTC驱动请按照自己实际使用的RTC芯片进行选择}

DMA Engine support 

从Intel Bensley双核服务器平台开始引入的数据移动加速(Data Movement Acceleration)引擎,它将某些传输数据的操作从CPU转移到专用硬件,从而可以进行异步传输并减轻CPU负载.Intel已将此项技术变为开放的标准,将来应当会有更多的厂商支持

Network: TCP receive copy offload

通过在网络栈中利用DMA引擎来减少接收数据包时的copy-to-user操作以释放CPU资源,这是DMA引擎目前最主要的用途

Intel I/OAT DMA support

Intel I/O加速技术(Intel I/O Acceleration Technology)中的DMA支持,基于Intel Bensley的新一代服务器平台都支持它
==========================
（11----File systems文件系统）

Second extended fs support

Ext2文件系统是Linux的标准文件系统,擅长处理稀疏文件 
Ext2 extended attributes

Ext2文件系统扩展属性(与inode关联的name:value对)支持 
Ext2 POSIX Access Control Lists

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

Ext2 Security Labels 

安全标签允许选择使用不同的安全模型实现(如SELinux)的访问控制模型,如果你没有使用需要扩展属性的安全模型就别选

Ext2 execute in place support

程序在写入存储介质时就已经分配好运行时的地址,因此不需要载入内存即可在芯片内执行,一般仅在嵌入式系统上才有这种设备

Ext3 journalling file system support

Ext3性能平庸,使用journal日志模式时数据完整性非常好(但怪异的是此时多线程并发读写速度却最快)

Ext3 extended attributes

Ext3文件系统扩展属性(与inode关联的name:value对)支持 
Ext3 POSIX Access Control Lists

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

Ext3 Security Labels 

安全标签允许选择使用不同的安全模型实现(如SELinux)的访问控制模型,如果你没有使用需要扩展属性的安全模型就别选

Ext4dev/ext4 extended fs support

尚处于开发状态的Ext4 
JBD (ext3) debugging support

仅供开发者使用 
JBD2 (ext4dev/ext4) debugging support

仅供开发者使用 
Reiserfs support 

性能几乎全面超越Ext2(处理稀疏文件比Ext2慢),小文件(小于4k)性能非常突出,创建和删除文件速度最快,处理大量目录和文件(5k-20k)时仍然非常迅速.日志模式建议使用Ordered,追求极速可使用Writeback模式,追求安全可使用Journal模式.建议使用noatime,notail选项挂载分区以提高速度和避免bug.用于NFS和磁盘限额时需要额外的补丁

Enable reiserfs debug mode

启用ReiserFS调试模式,仅供开发者使用 
Stats in /proc/fs/reiserfs

在/proc/fs/reiserfs文件中显示Reiserfs文件系统的状态,仅供开发者使用 

ReiserFS extended attributes

ReiserFS文件系统扩展属性(与inode关联的name:value对)支持 
ReiserFS POSIX Access Control Lists

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

ReiserFS Security Labels

安全标签允许选择使用不同的安全模型实现(如SELinux)的访问控制模型,如果你没有使用需要扩展属性的安全模型就别选了

JFS filesystem support

IBM的JFS文件系统 
XFS filesystem support

碎片最少,多线程并发读写最佳,大文件(>64k)性能最佳,创建和删除文件速度较慢.由于XFS在内存中缓存尽可能多的数据且仅当内存不足时才会将数据刷到磁盘,所以应当仅在确保电力供应不会中断的情况下才使用XFS

Quota support 

XFS的磁盘配额支持 
Security Label support

扩展的安全标签支持.SElinux之类的安全系统会使用到这样的扩展安全属性 
POSIX ACL support 

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

Realtime support 

实时子卷是专门存储文件数据的卷,可以允许将日志与数据分开在不同的磁盘上 
GFS2 file system support

一种用于集群的文件系统 
OCFS2 file system support

一种用于集群的文件系统 
Minix fs support 

老古董文件系统 
ROM file system support

用于嵌入式系统的内存文件系统的支持 
Inotify file change notification support

新式的文件系统的变化通知机制,简洁而强大,用于代替老旧的Dnotify 
Inotify support for userspace

用户空间的Inotify支持 
Quota support 

磁盘配额支持,限制某个用户或者某组用户的磁盘占用空间,Ext2/Ext3/Reiserfs都支持它

Old quota format support

老式的配额格式支持 
Quota format v2 support

新的v2格式允许使用32位的UID/GID 
Dnotify support 

旧式的基于目录的文件变化的通知机制(新机制是Inotify),目前仍然有一些程序依赖它 

Kernel automounter support

内核自动加载远程文件系统(v3,就算选也不选这个旧的) 
Kernel automounter version 4 support (also supports v3)

新的(v4)的内核自动加载远程文件系统的支持,也支持v3 
Filesystem in Userspace support

FUSE允许在用户空间实现一个文件系统,如果你打算开发一个自己的文件系统或者使用一个基于FUSE的文件系统就选吧

CD-ROM/DVD Filesystems

CD-ROM/DVD文件系统 
ISO 9660 CDROM file system support

CD-ROM的标准文件系统 
Microsoft Joliet CDROM extensions

Microsoft对ISO 9660文件系统的Joliet扩展,允许在文件名中使用Unicode字符,也允许长文件名

Transparent decompression extension

Linux对ISO 9660文件系统的扩展,允许将数据透明的压缩存储在CD上 
UDF file system support

某些新式CD/DVD上的文件系统,很少见 
DOS/FAT/NT Filesystems

DOS/Windows的文件系统 
MSDOS fs support 

古老的MSDOS文件系统 
VFAT (Windows-95) fs support

从Win95开始使用的VFAT文件系统 
Default codepage for FAT

默认代码页 
Default iocharset for FAT

默认字符集 
NTFS file system support

从WinNT开始使用的NTFS文件系统 
NTFS debugging support

仅供调试使用 
NTFS write support 

NTFS写入支持 
Pseudo filesystems 

伪文件系统 
/proc file system support

显示系统状态的虚拟文件系统(irq设置,内存使用,加载的设备驱动器,网络状态等),许多程序依赖于它

/proc/kcore support 

系统物理内存的映象 
/proc/vmcore support 

以ELF格式转储的已崩溃内核镜像,仅供调试使用 
Sysctl support (/proc/sys)

显示各种不同的内核参数,并让root用户能交互地更改其中的某些内容 
sysfs file system support

导出内核内部对象及其属性和对象之间的相互关系的文件系统,它把连接在系统上的设备和总线以及驱动程序等组织成为一个分级的文件,内核启动时依靠它挂载根分区,禁用sysfs后必须在内核引导参数中使用设备号指定根分区

Virtual memory file system support (former shm fs)

tmpfs文件系统(以前叫shm[共享内存]文件系统)支持 
Tmpfs POSIX Access Control Lists

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持

HugeTLB file system support

大多数现代计算机体系结构提供对多种内存页面大小的支持(比如IA-32结构支持4K和4M(PAE模式为2M)两种页面).TLB(Translation Lookaside Buffer)是虚拟地址到物理地址的翻译缓冲区,这种缓冲区在处理器上是很宝贵的,操作系统总是尝试将有限的TLB资源发挥到极致.特别是能够轻松获得若干G内存的时候(>4G),这种优化就显得尤为关键.只有开启此选项之后才能提供hugepage支持.

Userspace-driven configuration filesystem

configfs是用户空间驱动的文件系统,提供与sysfs相反的功能 
Miscellaneous filesystems

非主流的杂项文件系统 
Network File Systems 

网络文件系统 
Partition Types 

高级磁盘分区类型,不确定可以全不选 
Native Language Support

本地语言支持.如果你仅仅使用几种主流的Linux文件系统(ext2/3/4,Reiserfs,JFS,XFS),就不需要这个东西.但是如果你需要使用FAT/NTFS分区的话,就需要这个东西了.

Base native language support

如果你启用了本地语言支持,那么这个必选 
Default NLS Option 

默认本地语言,建议使用UTF-8 
{此处省略的部分请按需选择,一般至少需要CP437,ASCII,ISO-8859-1}

Distributed Lock Manager

通用的分布式锁管理器,不明白就不选 
=========================================

Processor type and features中央处理器(CPU)类型及特性）

Symmetric multi-processing support

对称多处理器支持,如果你有多个CPU或者使用的是多核CPU就选上.此时"Enhanced Real Time Clock Support"选项必须开启,"Advanced Power Management"选项必须关闭

Subarchitecture Type 

处理器的子架构,大多数人都应当选择"PC-compatible" 
Processor family 

处理器系列,请按照你实际使用的CPU选择 
Generic x86 support 

通用x86支持,如果你的CPU能够在上述"Processor family"中找到就别选 

HPET Timer Support 

HPET是替代8254芯片的新一代定时器,i686及以上级别的主板都支持,可以安全的选上 

Maximum number of CPUs

支持的最大CPU数,每增加一个内核将增加8K体积 
SMT (Hyperthreading) scheduler support

支持Intel的超线程(HT)技术 
Multi-core scheduler support

针对多核CPU进行调度策略优化 
Preemption Model 

内核抢占模式 
No Forced Preemption (Server)

适合服务器环境的禁止内核抢占 
Voluntary Kernel Preemption (Desktop)

适合普通桌面环境的自愿内核抢占 
Preemptible Kernel (Low-Latency Desktop)

适合运行实时程序的主动内核抢占 
Preempt The Big Kernel Lock

可以抢占大内核锁,应用于实时要求高的场合,不适合服务器环境 
Machine Check Exception

让CPU检测到系统故障时通知内核,以便内核采取相应的措施(如过热关机等) 
Check for non-fatal errors on AMD Athlon/Duron / Intel Pentium 4

每5秒检测一次这些cpu的非致命错误并纠正它们,同时记入日志 
check for P4 thermal throttling interrupt

当P4的cpu过热时显示一条警告消息 
Enable VM86 support 

虚拟X86支持,在DOSEMU下运行16-bit程序或XFree86通过BIOS初始化某些显卡的时候才需要

Toshiba Laptop support

Toshiba笔记本模块支持 
Dell laptop support 

Dell笔记本模块支持 
Enable X86 board specific fixups for reboot

修正某些旧x86主板的重起bug,这种主板基本绝种了 
/dev/cpu/microcode - Intel IA32 CPU microcode support

使用不随Linux内核发行的IA32微代码,你必需有IA32微代码二进制文件,仅对Intel的CPU有效

/dev/cpu/*/msr - Model-specific register support

在多cpu系统中让特权CPU访问x86的MSR寄存器 
/dev/cpu/*/cpuid - CPU information support

能从/dev/cpu/x/cpuid获得CPU的唯一标识符(CPUID) 
Firmware Drivers 

固件驱动程序 
BIOS Enhanced Disk Drive calls determine boot disk

有些BIOS支持从某块特定的硬盘启动(如果BIOS不支持则可能无法启动),目前大多数BIOS还不支持

BIOS update support for DELL systems via sysfs

仅适用于DELL机器 
Dell Systems Management Base Driver

仅适用于DELL机器 
High Memory Support 

最高内存支持,总内存小于等于1G的选"off",大于4G的选"64G" 
Memory split 
如果你不是绝对清楚自己在做什么,不要改动这个选项 
Memory model 
一般选"Flat Memory",其他选项涉及内存热插拔 
64 bit Memory and IO resources

使用64位的内存和IO资源 
Allocate 3rd-level pagetables from highmem

在内存很多(大于4G)的机器上将用户空间的页表放到高位内存区,以节约宝贵的低端内存 

Math emulation 

数学协处理器仿真,486DX以上的cpu就不要选它了 
MTRR (Memory Type Range Register) support

打开它可以提升PCI/AGP总线上的显卡2倍以上的速度,并且可以修正某些BIOS错误 

Boot from EFI support

EFI是一种可代替传统BIOS的技术(目前的Grub/LILO尚不能识别它),但是现在远未普及 

Enable kernel irq balancing

让内核将irq中断平均分配给多个CPU以进行负载均衡,但是要配合irqbanlance守护进程才行

Use register arguments

使用"-mregparm=3"参数编译内核,将前3个参数以寄存器方式进行参数调用,可以生成更紧凑和高效的代码

Enable seccomp to safely compute untrusted bytecode

只有嵌入式系统可以不选 
Timer frequency 

内核时钟频率,桌面推荐"1000 HZ",服务器推荐"100 HZ"或"250 HZ" 

kexec system call 

提供kexec系统调用,可以不必重启而切换到另一个内核 
kernel crash dumps 

被kexec启动后产生内核崩溃转储 
Physical address where the kernel is loaded

内核加载的物理地址,除非你知道自己在做什么,否则不要修改.在提供kexec系统调用的情况下可能要修改它

Support for hot-pluggable CPUs

对热插拔CPU提供支持 
Compat VDSO support 

如果Glibc版本大于等于2.3.3就不选,否则就选上 
==================================================
3----Loadable module support可加载模块支持）

Enable loadable module support

打开可加载模块支持,如果打开它则必须通过"make modules_install"把内核模块安装在/lib/modules/中

Module unloading 

允许卸载已经加载的模块 
Forced module unloading

允许强制卸载正在使用中的模块(比较危险) 
Module versioning support

允许使用其他内核版本的模块(可能会出问题) 
Source checksum for all modules

为所有的模块校验源码,如果你不是自己编写内核模块就不需要它 
Automatic kernel module loading

让内核通过运行modprobe来自动加载所需要的模块,比如可以自动解决模块的依赖关系 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111771
=====================================
（2----General setup常规设置）


Local version - append to kernel release 
在内核版本后面加上自定义的版本字符串(小于64字符),可以用"uname -a"命令看到 
Automatically append version information to the version string

自动在版本字符串后面添加版本信息,编译时需要有perl以及git仓库支持 
Support for paging of anonymous memory (swap) 

使用交换分区或者交换文件来做为虚拟内存 
System V IPC 
System V进程间通信(IPC)支持,许多程序需要这个功能.建议选 
POSIX Message Queues 
POSIX消息队列支持
BSD Process Accounting 
将进程的统计信息写入文件的用户级系统调用,主要包括进程的创建时间/创建者/内存占用等信息 
BSD Process Accounting version 3 file format 

使用新的第三版文件格式,可以包含每个进程的PID和其父进程的PID,但是不兼容老版本的文件格式 
Export task/process statistics through netlink 

通过netlink接口向用户空间导出任务/进程的统计信息,与BSD Process Accounting的不同之处在于这些统计信息在整个任务/进程生存期都是可用的

Enable per-task delay accounting 
在统计信息中包含进程等候系统资源(cpu,IO同步,内存交换等)所花费的时间 
UTS Namespaces 
UTS名字空间支持,不确定可以不选 
Auditing support 
审计支持,某些内核模块(例如SELinux)需要它,只有同时选择其子项才能对系统调用进行审计 
Enable system-call auditing support 
支持对系统调用的审计 
Kernel .config support 
把内核的配置信息编译进内核中,以后可以通过scripts/extract-ikconfig脚本来提取这些信息 
Enable access to .config through /proc/config.gz 

允许通过/proc/config.gz访问内核的配置信息 
Cpuset support 
只有含有大量CPU(大于16个)的SMP系统或NUMA(非一致内存访问)系统才需要它 
Kernel->user space relay support (formerly relayfs)

在某些文件系统上(比如debugfs)提供从内核空间向用户空间传递大量数据的接口 
Initramfs source file(s) 
initrd已经被initramfs取代,如果你不明白这是什么意思,请保持空白 
Optimize for size (Look out for broken compilers!)

编译时优化内核尺寸(使用"-Os"而不是"-O2"参数编译),有时会产生错误的二进制代码 
Enable extended accounting over taskstats 
收集额外的进程统计信息并通过taskstats接口发送到用户空间 
Configure standard kernel features (for small systems)

配置标准的内核特性(为小型系统) 
Enable 16-bit UID system calls 
允许对UID系统调用进行过时的16-bit包装 
Sysctl syscall support 
不需要重启就能修改内核的某些参数和变量,如果你也选择了支持/proc,将能从/proc/sys存取可以影响内核行为的参数或变量 
Load all symbols for debugging/kksymoops 
装载所有的调试符号表信息,仅供调试时选择 
Include all symbols in kallsyms 
在kallsyms中包含内核知道的所有符号,内核将会增大300K 
Do an extra kallsyms pass 
除非你在kallsyms中发现了bug并需要报告这个bug才打开该选项 
Support for hot-pluggable devices 
支持热插拔设备,如usb与pc卡等,Udev也需要它 
Enable support for printk 
允许内核向终端打印字符信息,在需要诊断内核为什么不能运行时选择 
BUG() support 
显示故障和失败条件(BUG和WARN),禁用它将可能导致隐含的错误被忽略 
Enable ELF core dumps 
内存转储支持,可以帮助调试ELF格式的程序 
Enable full-sized data structures for core 

在内核中使用全尺寸的数据结构.禁用它将使得某些内核的数据结构减小以节约内存,但是将会降低性能 
Enable futex support 
快速用户空间互斥体可以使线程串行化以避免竞态条件,也提高了响应速度.禁用它将导致内核不能正确的运行基于glibc的程序 
Enable eventpoll support 
支持事件轮循的系统调用 
Use full shmem filesystem 
完全使用shmem来代替ramfs.shmem是基于共享内存的文件系统(可能用到swap),在启用TMPFS后可以挂载为tmpfs供用户空间使用,它比简单的ramfs先进许多

Use full SLAB allocator 
使用SLAB完全取代SLOB进行内存分配,SLAB是一种优秀的内存分配管理器,推荐使用 
Enable VM event counters for /proc/vmstat 
允许在/proc/vmstat中包含虚拟内存事件记数器 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111755

======================================

7----Bus options (PCI, PCMCIA, EISA, MCA, ISA)总线选项）

PCI support 
PCI支持,如果使用了PCI或PCI Express设备就必选 
PCI access mode 

PCI访问模式,强列建议选"Any"(系统将优先使用"MMConfig",然后使用"BIOS",最后使用"Direct"检测PCI设备)

PCI Express support 

PCI Express支持(目前主要用于显卡和千兆网卡) 
PCI Express Hotplug driver

如果你的主板和设备都支持PCI Express热插拔就可以选上 
Use polling mechanism for hot-plug events

对热插拔事件采用轮询机制,仅用于测试目的 
Root Port Advanced Error Reporting support

由PCI Express AER驱动程序处理发送到Root Port的错误信息 
Message Signaled Interrupts (MSI and MSI-X)

PCI Express支持两类中断:INTx使用传统的IRQ中断,可以与现行的PCI总线的驱动程序和操作系统兼容;MSI则是通过inbound Memory Write触发和发送中断,更适合多CPU系统.可以使用"pci=nomsi"内核引导参数关闭MSI

PCI Debugging 

将PCI调试信息输出到系统日志里 
Interrupts on hypertransport devices

允许本地的hypertransport设备使用中断 
ISA support 
现在基本上没有ISA的设备了,如果你有就选吧 
MCA support 
微通道总线,老旧的IBM的台式机和笔记本上可能会有这种总线 
NatSemi SCx200 support

在使用AMD Geode处理器的机器上才可能有 
PCCARD (PCMCIA/CardBus) support

PCMCIA卡(主要用于笔记本)支持 
Enable PCCARD debugging

仅供调试 
16-bit PCMCIA support

一些老的PCMCIA卡使用16位的CardBus 
32-bit CardBus support

当前的PCMCIA卡基本上都是32位的CardBus 
CardBus yenta-compatible bridge support

使用PCMCIA卡的基本上都需要选择这一项,子项请按照自己实际使用的PCMCIA卡选择 

{省略的部分请按照自己实际使用的PCMCIA卡选择}

PCI Hotplug Support 

PCI热插拔支持,如果你有这样的设备就到子项中去选吧 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111847

================================================
Power management options电源管理选项）

Power Management support

电源管理有APM和ACPI两种标准且不能同时使用.即使关闭该选项,X86上运行的Linux也会在空闲时发出HLT指令将CPU进入睡眠状态

Legacy Power Management API

传统的电源管理API,比如软关机和系统休眠等接口 
Power Management Debug Support

仅供调试使用 
Driver model /sys/devices/.../power/state files

内核帮助文档反对使用该选项,即将被废除 
ACPI (Advanced Configuration and Power Interface) Support

必须运行acpid守护程序ACPI才能起作用.ACPI是为了取代APM而设计的,因此应该尽量使用ACPI而不是APM

AC Adapter 
如果你的系统可以在AC和电池之间转换就可以选 
Battery
通过/proc/acpi/battery向用户提供电池状态信息,用电池的笔记本可以选 

Button 
守护程序捕获Power,Sleep,Lid按钮事件,并根据/proc/acpi/event做相应的动作,软件控制的poweroff需要它

Video 
仅对集成在主板上的显卡提供ACPI2.0支持,且不是所有集成显卡都支持 
Generic Hotkey 

统一的热键驱动,建议不选 
Fan 
允许通过用户层的程序来对系统风扇进行控制(开,关,查询状态),支持它的硬件并不多 
Dock 
支持由ACPI控制的集线器(docking stations) 
Processor 
让ACPI处理空闲状态,并使用ACPI C2和C3处理器状态在空闲时节省电能,同时它还被cpufreq的"Performance-state drivers"选项所依赖

Thermal Zone 
系统温度过高时可以利用ACPI thermal zone及时调整工作状态以避免你的CPU被烧毁 

ASUS/Medion Laptop Extras

ASUS笔记本专用,以提供额外按钮的支持,用户可以通过/proc/acpi/asus来打开或者关闭LCD的背光/调整亮度/定制LED的闪烁指示等功能

IBM ThinkPad Laptop Extras

IBM ThinkPad专用 
Toshiba Laptop Extras

Toshiba笔记本专用 
Disable ACPI for systems before Jan 1st this year

输入四位数的年份,在该年的1月1日前不使用ACPI的功能("0"表示一直使用) 
Debug Statements 

详细的ACPI调试信息,不搞开发就别选 
Power Management Timer Support

这个Timer在所有ACPI兼容的平台上都可用,且不会受PM功能的影响,建议总是启用它.如果你在kernel log中看到了'many lost ticks'那就必须启用它

ACPI0004,PNP0A05 and PNP0A06 Container Driver

支持内存和CPU的热插拔 
Smart Battery System 

支持依赖于I2C的"智能电池".这种电池非常老旧且罕见,还与当前的ACPI标准兼容性差 

APM (Advanced Power Management) BIOS Support

APM在SMP机器上必须关闭,一般来说当前的笔记本都支持ACPI,所以应尽量关闭该该选项 

Ignore USER SUSPEND 

只有NEC Versa M系列的笔记本才需要选择这一项 
Enable PM at boot time

系统启动时即启用APM,选上这个选项能让系统自动的进行电源管理,但常常导致启动时死机 

Make CPU Idle calls when idle

系统空闲时调用空闲指令(halt),只有老式的CPU才需要选它,且对于SMP系统必须关闭 

Enable console blanking using APM

在屏幕空白时关闭LCD背光,事实上对所有的笔记本都无效 
RTC stores time in GMT

将硬件时钟应该设为格林威治时间,否则视为本地时间.建议你使用GMT,这样你无须为时区的改变而担心 

Allow interrupts during APM BIOS calls

允许APM的BIOS调用时中断,IBM Thinkpad的一些新机器需要这项.如果休眠时挂机(包括睡下去就醒不来),可以试试它

Use real mode APM BIOS call to power off

此驱动为某些有Bug的BIOS准备,如果你的系统不能正常关机或关机时崩溃,可以试试它 

CPU Frequency scaling

允许动态改变CPU主频,达到省电和降温的目的,必须同时启用下面的一种governor才行 

Enable CPUfreq debugging

允许对CPUfreq进行调试 
CPU frequency translation statistics

通过sysfs文件系统输出CPU频率变换的统计信息 
CPU frequency translation statistics details

输出详细的CPU频率变换统计信息 
Default CPUFreq governor

默认的CPU频率调节器 
'performance' governor

'性能'优先,静态的将频率设置为cpu支持的最高频率 
'powersave' governor 

'节能'优先,静态的将频率设置为cpu支持的最低频率 
'userspace' governor for userspace frequency scaling

既允许手动调整cpu频率,也允许用户空间的程序动态的调整cpu频率(需要额外的调频软件,比如cpufreqd)

'ondemand' cpufreq policy governor

'立即响应',周期性的考察CPU负载并自动的动态调整cpu频率(不需要额外的调频软件),适合台式机

'conservative' cpufreq governor

'保守',和'ondemand'相似,但是频率的升降是渐变式的(幅度不会很大),更适合用于笔记本/PDA/AMD64环境

ACPI Processor P-States driver

将ACPI2.0的处理器性能状态报告给CPUFreq processor drivers以决定如何调整频率,该选项依赖于ACPI->Processor

{省略的部分请按照自己实际使用的CPU选择}

/proc/acpi/processor/../performance interface

内核帮助文档反对使用该选项,即将被废除 
Relaxed speedstep capability checks

放松对系统的speedstep兼容性检查,仅在某些老旧的Intel系统上需要打开 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111835
===========================================================================
（4----Block layer块设备层）

Enable the block layer

块设备支持,使用硬盘/USB/SCSI设备者必选 
Support for Large Block Devices

仅在使用大于2TB的块设备时需要 
Support for tracing block io actions

块队列IO跟踪支持,它允许用户查看在一个块设备队列上发生的所有事件,可以通过blktrace程序获得磁盘当前的详细统计数据

Support for Large Single Files

仅在可能使用大于2TB的文件时需要 
IO Schedulers 

IO调度器 
Anticipatory I/O scheduler

假设一个块设备只有一个物理查找磁头(例如一个单独的SATA硬盘),将多个随机的小写入流合并成一个大写入流,用写入延时换取最大的写入吞吐量.适用于大多数环境,特别是写入较多的环境(比如文件服务器)

Deadline I/O scheduler

使用轮询的调度器,简洁小巧,提供了最小的读取延迟和尚佳的吞吐量,特别适合于读取较多的环境(比如数据库)

CFQ I/O scheduler 

使用QoS策略为所有任务分配等量的带宽,避免进程被饿死并实现了较低的延迟,可以认为是上述两种调度器的折中.适用于有大量进程的多用户系统

Default I/O scheduler

默认IO调度器 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111793
===============================================================================
（14----Security options安全选项）
Enable access key retention support

在内核中保留authentication token和access key 
Enable the /proc/keys file by which keys may be viewed

允许有权限的进程通过/proc/keys读取所有的key 
Enable different security models

允许内核选择不同的安全模型,如果未选中则内核将使用默认的安全模型 
Socket and Networking Security Hooks

允许安全模型通过Security Hook对Socket与Networking进行访问控制 

XFRM (IPSec) Networking Security Hooks

启用XFRM安全Hook 
Default Linux Capabilities

启用与"默认"Linux的兼容性 
Root Plug Support 

一个简单的Linux安全模块,在特定的USB设备不存在时它简单的禁止一切egid==0的进程运行 

NSA SELinux Support 

美国国家安全局(NSA)开发的安全增强Linux(SELinux),你还需要进行策略配置(checkpolicy)并且对文件系统进行标记(setfiles)

NSA SELinux boot parameter

添加一个内核引导参数以允许在引导时使用'selinux=0'禁用SELinux或'selinux=1'启用SELinux

NSA SELinux boot parameter default value

上述参数的默认值 
NSA SELinux runtime disable

允许在运行时禁用SELinux 
NSA SELinux Development Support

SELinux开发支持 
NSA SELinux AVC Statistics

搜集存取向量(access vector)缓冲区的统计信息并在/selinux/avc/cache_stats中显示出来.这些信息可以用avcstat之类的工具查看

NSA SELinux checkreqprot default value

checkreqprot标志的默认值 
NSA SELinux enable new secmark network controls by default

默认启用新的基于安全标记(secmark)的网络 
NSA SELinux maximum supported policy format version

允许将支持的最高策略格式版本设置为一个特定的数值 
NSA SELinux maximum supported policy format version value

支持的最高策略格式版本的数值
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111979
============================================================================================================
（13----Kernel hacking内核hack选项）
Show timing information on printks

在printk的输出中包含时间信息,可以用来分析内核启动过程各步骤所用时间 
Enable __must_check logic

在编译内核的过程中使用"必须检查"的逻辑,禁用它将不会显示某些警告信息 
Magic SysRq key 

不懂的千万别选 
Enable unused/obsolete exported symbols

导出无用和废弃的符号,这将使内核不必要的增大 
Kernel debugging 

不是内核开发者的别选 
Debug Filesystem 

不是内核开发者的别选 
Compile the kernel with frame unwind information

不是内核开发者的别选 
Run 'make headers_check' when building vmlinux

在编译内核时运行'make headers_check'命令检查内核头文件,当你修改了与用户空间相关的内核头文件后建议启用该选项

Linux Kernel Dump Test Tool Module

不是内核开发者的别选 
Enable doublefault exception handler

允许捕获非常罕见的导致系统无警告重启的doublefault异常,对于调试非常重要
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111953
====================================================================================
（12----Instrumentation Support分析支持）
Profiling support  

对系统的活动进行分析,仅供内核开发者使用 

Kprobes 

仅供内核开发者使用 
=================================
（9----Networking网络）
Networking options 

网络选项 
Network packet debugging

在调试不合格的包时加上额外的附加信息,但在遇到Dos攻击时你可能会被日志淹没 
Packet socket 

这种Socket可以让应用程序(比如tcpdump,iptables)直接与网络设备通讯,而不通过内核中的其它中介协议

Packet socket: mmapped IO

让Packet socket驱动程序使用IO映射机制以使连接速度更快 
Unix domain sockets 

一种仅运行于本机上的效率高于TCP/IP的Socket,简称Unix socket.许多程序都使用它在操作系统内部进行进程间通信(IPC),比如X Window和syslog

Transformation user configuration interface

为IPsec(可在ip层加密)之类的工具提供XFRM用户配置接口支持 
Transformation sub policy support

XFRM子策略支持,仅供开发者使用 
PF_KEY sockets 

用于可信任的密钥管理程序和操作系统内核内部的密钥管理进行通信,IPsec依赖于它 
TCP/IP networking 

TCP/IP协议当然要选 
IP: multicasting 

群组广播,似乎与网格计算有关,仅在使用MBONE的时候才需要 
IP: advanced router 

高级路由,如果想做一个路由器就选吧 
IP: policy routing 

策略路由 
IP: equal cost multipath

用于路由的基于目的地址的负载均衡 
IP: verbose route monitoring

显示冗余的路由监控信息 
IP: kernel level autoconfiguration

在内核启动时自动配置ip地址/路由表等,需要从网络启动的无盘工作站才需要这个东西 
IP: tunneling 

IP隧道,将一个IP报文封装在另一个IP报文内的技术 
IP: GRE tunnels over IP

基于IP的GRE(通用路由封装)隧道 
IP: multicast routing

多重传播路由 
IP: ARP daemon support

这东西尚处于试验阶段就已经被废弃了 
IP: TCP syncookie support

抵抗SYN flood攻击的好东西,要启用它必须同时启用/proc文件系统和"Sysctl support",然后在系统启动并挂载了/proc之后执行"echo 1 >/proc/sys/net/ipv4/tcp_syncookies"命令

IP: AH transformation

IPsec验证头(AH)实现了数据发送方的验证处理,可确保数据既对于未经验证的站点不可用也不能在路由过程中更改

IP: ESP transformation

IPsec封闭安全负载(ESP)实现了发送方的验证处理和数据加密处理,用以确保数据不会被拦截/查看或复制

IP: IPComp transformation

IPComp(IP静荷载压缩协议),用于支持IPsec 
IP: IPsec transport mode

IPsec传输模式,常用于对等通信,用以提供内网安全.数据包经过了加密但IP头没有加密,因此任何标准设备或软件都可查看和使用IP头

IP: IPsec tunnel mode

IPsec隧道模式,用于提供外网安全(包括虚拟专用网络).整个数据包(数据头和负载)都已经过加密处理且分配有新的ESP头/IP头和验证尾,从而能够隐藏受保护站点的拓扑结构

IP: IPsec BEET mode 

IPsec BEET模式 
INET: socket monitoring interface

socket监视接口,一些Linux本地工具(如:包含ss的iproute2)需要使用它 

TCP: advanced congestion control

高级拥塞控制,如果没有特殊需求(比如无线网络)就别选了,内核会自动将默认的拥塞控制设为"Cubic"并将"Reno"作为候补

IP: Virtual Server Configuration

IP虚拟服务器允许你基于多台物理机器构建一台高性能的虚拟服务器,不玩集群就别选了 
The IPv6 protocol 

你要是需要IPv6就选吧 
NetLabel subsystem support

NetLabel子系统为诸如CIPSO与RIPSO之类能够在分组信息上添加标签的协议提供支持,如果你看不懂就别选了

Security Marking 

对网络包进行安全标记,类似于nfmark,但主要是为安全目的而设计,如果你不明白的话就别选 

Network packet filtering (replaces ipchains)

Netfilter可以对数据包进行过滤和修改,可以作为防火墙("packet filter"或"proxy-based")或网关(NAT)或代理(proxy)或网桥使用.选中此选项后必须将"Fast switching"关闭,否则将前功尽弃

Network packet filtering debugging

仅供开发者调试Netfilter使用 
Bridged IP/ARP packets filtering

如果你希望使用一个针对桥接的防火墙就打开它 
Core Netfilter Configuration

核心Netfilter配置(当包流过Chain时如果match某个规则那么将由该规则的target来处理,否则将由同一个Chain中的下一个规则进行匹配,若不match所有规则那么最终将由该Chain的policy进行处理)

Netfilter netlink interface

允许Netfilter在与用户空间通信时使用新的netlink接口.netlink Socket是Linux用户态与内核态交流的主要方法之一,且越来越被重视.

Netfilter NFQUEUE over NFNETLINK interface

通过NFNETLINK接口对包进行排队 
Netfilter LOG over NFNETLINK interface

通过NFNETLINK接口对包记录.该选项废弃了ipt_ULOG和ebg_ulog机制,并打算在将来废弃基于syslog的ipt_LOG和ip6t_LOG模块

Layer 3 Independent Connection tracking

独立于第三层的链接跟踪,通过广义化的ip_conntrack支持其它非IP协议的第三层协议 

Netfilter Xtables support

如果你打算使用ip_tables,ip6_tables,arp_tables之一就必须选上 

"CLASSIFY" target support

允许为包设置优先级,一些排队规则(atm,cbq,dsmark,pfifo_fast,htb,prio)需要使用它

"CONNMARK" target support

类似于"MARK",但影响的是连接标记的值 
"DSCP" target support

允许对ip包头部的DSCP(Differentiated Services Codepoint)字段进行修改,该字段常用于Qos

"MARK" target support

允许对包进行标记(通常配合ip命令使用),这样就可以改变路由策略或者被其它子系统用来改变其行为 

"NFQUEUE" target Support

用于替代老旧的QUEUE(iptables内建的target之一),因为NFQUEUE能支持最多65535个队列,而QUEUE只能支持一个

"NOTRACK" target support

允许规则指定哪些包不进入链接跟踪/NAT子系统 
"SECMARK" target support

允许对包进行安全标记,用于安全子系统 
"CONNSECMARK" target support

针对链接进行安全标记,同时还会将连接上的标记还原到包上(如果链接中的包尚未进行安全标记),通常与SECMARK target联合使用

"comment" match support

允许你在iptables规则集中加入注释 
"connbytes" per-connection counter match support

允许针对单个连接内部每个方向(进/出)匹配已经传送的字节数/包数 
"connmark" connection mark match support

允许针对每个会话匹配先前由"CONNMARK"设置的标记值 
"conntrack" connection tracking match support

连接跟踪匹配,是"state"的超集,它允许额外的链接跟踪信息,在需要设置一些复杂的规则(比如网关)时很有用

"DCCP" protocol match support

DCCP是打算取代UDP的新传输协议,它在UDP的基础上增加了流控和拥塞控制机制,面向实时业务 

"DSCP" match support 

允许对IP包头的DSCP字段进行匹配 
"ESP" match support 

允许对IPSec包中的ESP头进行匹配,使用IPsec的话就选上吧 
"helper" match support

加载特定协议的连接跟踪辅助模块,由该模块过滤所跟踪的连接类型的包,比如ip_conntrack_ftp模块

"length" match support

允许对包的长度进行匹配 
"limit" match support

允许根据包的进出速率进行规则匹配,常和"LOG target"配合使用以抵抗某些Dos攻击 

"mac" address match support

允许根据以太网的MAC进行匹配,常用于无线网络环境 
"mark" match support 

允许对先前由"MARK"标记的特定标记值进行匹配 
IPsec "policy" match support

使用IPsec就选上吧 
Multiple port match support

允许对TCP或UDP包同时匹配多个端口(通常情况下只能匹配一个端口) 
"physdev" match support

允许对到达的或将要离开的物理桥端口进行匹配 
"pkttype" packet type match support

允许对封包目的地址类别(广播/群播/直播)进行匹配 
"quota" match support

允许对总字节数的限额值进行匹配 
"realm" match support

允许对iptables中的路由子系统中的realm值进行匹配 
"sctp" protocol match support

流控制传输协议(SCTP),十年以后也许能够普及的东西 
"state" match support

这是对包进行分类的有力工具,它允许利用连接跟踪信息对连接中处于特定状态的包进行匹配 

"statistic" match support

允许根据一个给定的百分率对包进行周期性的或随机性的匹配 
sring" match support 

允许根据包所承载的数据中包含的特定字符串进行匹配 
 
Connection tracking (required for masq/NAT)

链接跟踪.可用于报文伪装或地址转换,也可用于增强包过滤能力 
Connection tracking flow accounting

允许针对每个连接记录已经传送的字节/包数,常用于connbytes match 
Connection mark tracking support

允许对连接进行标记,与针对单独的包进行标记的不同之处在于它是针对连接流的.CONNMARK target和connmark match需要它的支持

Connection tracking security mark support

允许对连接进行安全标记,通常这些标记包(SECMARK)复制到其所属连接(CONNSECMARK),再从连接复制到其关联的包(SECMARK)

Connection tracking events

连接跟踪事件支持.如果启用这个选项,连接跟踪代码将提供一个notifier链,它可以被其它内核代码用来获知连接跟踪状态的改变

Connection tracking netlink interface

支持基于netlink的用户空间接口 
SCTP protocol connection tracking support

SCTP是IP网面向多媒体通信的新一代的流控制传输协议 
FTP protocol support 

FTP协议 
IRC protocol support 

IRC协议是一种用来实时聊天协议,用过mIRC的人应当不陌生 
NetBIOS name service protocol support

NetBIOS名字服务协议 
TFTP protocol support

TFTP是基于UDP的比FTP简单的文件传输协议 
Amanda backup protocol support

Amanda备份协议 
PPTP protocol support

点对点隧道协议(PPTP)是一种支持多协议虚拟专用网络的网络技术,ADSL用户对它应该很熟悉 

H.323 protocol support

ITU-T提出的用于IP电话的协议 
SIP protocol support 

IETE提出的用于IP电话的协议 
IP Userspace queueing via NETLINK

已废弃 
IP tables support (required for filtering/masq/NAT)

要用iptables就肯定要选上 
IP range match support

允许对ip地址的范围进行匹配 
TOS match support 

允许对ip包头的TOS(Type Of Service)字段进行匹配 
recent match support 

可以创建一个或多个刚刚使用过的ip地址列表,然后根据这些列表进行匹配 
ECN match support 

允许对TCP/IP包头的ECN(Explicit Congestion Notification)字段进行匹配.ECN是一种显式拥塞通知技术,它不但要求路由器支持而且要求端到端主机的支持,其基本思想是当路由器发生早期拥塞时不是丢弃包而是尽量对包进行标记,接收方接到带有ECN提示的包时,通知发送方网络即将发生拥塞,也就是它通过对包的标记提示TCP源即将发生拥塞,从而引发拥塞避免算法

AH match support 

允许对IPSec包头的AH字段进行匹配 
TTL match support 

允许对ip包头的TTL(生存期)字段进行匹配 
Owner match support 

允许对本地生成的包按照其宿主(user,group,process,session)进行匹配 

address type match support

允许对地址类型(单播,本地,广播)进行匹配 
hashlimit match support

是limit的升级,它基于你选择的ip地址与/或端口动态的创建以limit为桶(bucket)的哈希表.它可以创建诸如"为每个特定的目标IP分配10kpps"或"允许每个特定的源IP分配500pps"之类的规则

Packet filtering 

定义filter表以允许对包进行过滤 
REJECT target support

允许返回一个ICMP错误而不是简单的丢弃包 
LOG target support 

允许将符合条件的包头信息通过syslog进行记录 
ULOG target support 

透过netlink socket将符合条件的封包交给用户空间的ulogd守护进程.反对使用该选项,因为它已经被NETFILTER_NETLINK_LOG代替

TCPMSS target support

允许修改TCP包头中的MSS(最大分段长度)选项值 
Full NAT 
允许进行伪装/端口转发以及其它的NAT功能,仅在你需要使用iptables中的nat表时才需要选择

Packet mangling 

在iptables中启用mangle表以便对包进行各种修改,常用于改变包的路由 
raw table support (required for NOTRACK/TRACE)

在iptables中添加一个'raw'表,该表在netfilter框架中非常靠前,并在PREROUTING和OUTPUT链上有钩子,从而可以对收到的数据包在连接跟踪前进行处理

ARP tables support 

ARP表支持.只有在局域网中才有ARP欺骗问题,另外路由器也会遭到ARP欺骗 
ARP packet filtering 

ARP包过滤.对于进入和离开本地的ARP包定义一个filter表,在桥接的情况下还可以应用于被转发ARP包

ARP payload mangling 

允许对ARP包的荷载部分进行修改,比如修改源和目标物理地址 
IPv6: Netfilter Configuration

针对IPv6的Netfilter配置,需要的话可以参考前面IPv4的Netfilter配置进行选择

DECnet: Netfilter Configuration

针对DECnet的Netfilter配置 
Bridge: Netfilter Configuration

针对桥接的Netfilter配置 
DCCP Configuration 

数据报拥塞控制协议在UDP的基础上增加了流控和拥塞控制机制,使数据报协议能够更好地用于流媒体业务的传输

SCTP Configuration 

流控制传输协议是一种新兴的传输层协议.TCP协议一次只能连接一个IP地址而在SCTP协议一次可以连接多个IP地址且可以自动平衡网络负载,一旦某一个IP地址失效会自动将网络负载转移到其他IP地址上

TIPC Configuration 

透明内部进程间通信协议,以共享内存为基础实现任务和资源的调度,专门用于内部集群通信 

Asynchronous Transfer Mode (ATM)

异步传输模式(ATM)支持 
802.1d Ethernet Bridging

802.1d以太网桥 
802.1Q VLAN Support 

802.1Q虚拟局域网 
DECnet Support 

DECnet是一种很生僻的协议 
ANSI/IEEE 802.2 LLC type 2 Support

看不懂可以不选 
The IPX protocol 

IPX协议 
Appletalk protocol support

与Mac机器通信的协议 
CCITT X.25 Packet Layer

大约没人需要这东西 
LAPB Data Link Driver

大约没人需要这东西 
Acorn Econet/AUN protocols

一种被Acorn计算机使用的又老又慢的协议 
WAN router 
广域网路由 
QoS and/or fair queueing

如果你需要Qos或公平队列就选吧 
Network testing 

网络测试,仅供调试使用 
Amateur Radio support

业余无线电支持 
IrDA (infrared) subsystem support

红外线支持,比如无线鼠标或无线键盘 
Bluetooth subsystem support

蓝牙支持 
Generic IEEE 802.11 Networking Stack

通用无线局域网(IEEE 802.11系列协议)支持 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111873
======================================================================
（8----Executable file formats可执行文件格式）
Kernel support for ELF binaries

ELF是开放平台下最常用的二进制文件格式,支持动态连接,支持不同的硬件平台.除非你知道自己在做什么,否则必选

Kernel support for a.out and ECOFF binaries

早期UNIX系统的可执行文件格式,目前已经被ELF格式取代 
Kernel support for MISC binaries

允许插入二进制的封装层到内核中,使用Java,.NET,Python,Lisp等语言编写的程序时需要它
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111863
=================================================================================
（15----Cryptographic options加密选项）
Cryptographic API 

提供核心的加密API支持.这里的加密算法被广泛的应用于驱动程序通信协议等机制中.子选项可以全不选,内核中若有其他部分依赖它,会自动选上

Cryptographic algorithm manager

创建加密模版实例,必须要选 
HMAC support 
为IPSec所必须,可为PPPoE提供压缩支持 
Null algorithms 

NULL加密算法(什么也不做),用于IPsec协议的封装安全载荷模块(ESP) 
MD4 digest algorithm 

老旧的摘要算法,已经过时 
MD5 digest algorithm 

主流摘要算法,128位(已被中国山东大学王小云攻破,可以快速找到碰撞) 
SHA1 digest algorithm

主流摘要算法,160位(已被中国山东大学王小云攻破,可以快速找到碰撞),速度与MD5相当 

SHA256 digest algorithm

更好的摘要算法,256位,速度较SHA1稍慢 
SHA384 and SHA512 digest algorithms

更好的摘要算法,384/512位,速度大约只有SHA1的40-50% 
Whirlpool digest algorithms

最安全的摘要算法,512位,已被列入ISO标准,目前最新版本为3.0(2003年发布) 

Tiger digest algorithms

号称最快的摘要算法,192位,专门为64位CPU进行了优化 
ECB support 
电子密码本,最简单的加密方法 
CBC support 
密码块链,IPSec需要使用它 
DES and Triple DES EDE cipher algorithms

老迈的(DES)和尚佳的(Triple DES)对称加密算法 
Blowfish cipher algorithm

又老又慢的对称加密算法 
Twofish cipher algorithm

很强的对称加密算法,使用较广 
Twofish cipher algorithms (i586)

很强的对称加密算法,使用较广(针对i586的版本) 
Serpent cipher algorithm

很强的对称加密算法 
AES cipher algorithms

最佳的对称加密算法(Rijndael),128/192/256位,强度最高,快速且节省内存 

AES cipher algorithms (i586)

最佳的对称加密算法(Rijndael),128/192/256位,强度最高,快速且节省内存(针对i586的版本)

CAST5 (CAST-128) cipher algorithm

对称加密算法 
CAST6 (CAST-256) cipher algorithm

对称加密算法 
TEA, XTEA and XETA cipher algorithms

较弱的对称加密算法 
ARC4 cipher algorithm

脆弱的流对称加密算法 
Khazad cipher algorithm

对称加密算法 
Anubis cipher algorithm

对称加密算法 
Deflate compression algorithm

压缩算法,当在IPSec中使用IPCOMP协议时才需要 
Michael MIC keyed digest algorithm

摘要算法,仅仅用于校验iSCSI设备传输的数据,因为算法本身比较脆弱 
CRC32c CRC algorithm 

摘要算法,可用于校验iSCSI设备传输的数据 
Testing module 

快速且丑陋的测试模块 
Hardware crypto devices

仅有VIA C7系列处理器支持硬件加密(VIA PadLock高级加密引擎) 
————————————————
版权声明：本文为CSDN博主「liu1164316159」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/liu1164316159/java/article/details/17111993
===============================================================================
（1----Code maturity level options代码成熟度选项）
Prompt for development and/or incomplete code/drivers 

显示尚在开发中或尚未完成的代码与驱动.除非你是测试人员或者开发者,否则请勿选择 

==================================================================

Linux开始支持Thunderbolt 3接口


随着Windows PC和MAC逐渐开始支持新一代高速接口Thunderbolt 3（雷电接口），Linux PC也即将迎来这一科技。戴尔最新推出的XPS 13开发者版本搭载Ubuntu Linux系统，适配了这种接口。通过USB Type-C接口提供支持。Thunderbolt 3是一种可以适配各种外设的新型接口。可以使用存储设备、外接屏幕。它就像USB一样，但是速度快四倍。一个4K的高清电影可以在30秒之内拷贝完成。在Linux上，能用Thunderbolt 3能做的事情很多。通过它用户可以同时外接两个显示器，可以外界显卡，可以在Linux计算机之间搭建对等网络。Thunderbolt 3的概念在去年开始流行，速度可以达到40Gbps，是Thunderbolt 2的两倍。同时，Thunderbolt 3也支持千兆以太网，显示接口，PCI接口等协议。
————————————————
版权声明：本文为CSDN博主「腾讯开发者」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/karamos/java/article/details/80122076


Linux Kernel编程 --- Mailbox驱动框架

（1）mailbox是一种框架，通过消息队列和中断驱动信号处理多处理器间的通讯；
（2）mailbox的实现分为contoller和client。简单的说就是client 可以通过controller提供的channel发送信息给controller；
（3）在drivers/mailbox下实现的都是controller的源码；
具体到某个厂商的硬件，则描述如下：

Kconfig文件：内核开关，用于配置mbox模块是否编译到内核；
config ARM_MHU     
tristate "ARM MHU Mailbox"     
depends on ARM_AMBA     help       
    Say Y here if you want to build the ARM MHU controller driver.  The controller has 3 mailbox channels, the last of which can be  used in Secure mode only.

Makefile文件：根据Kconfig编译相应的模块；

我们知道要实现mailbox的源文件其实只有两个
obj-$(CONFIG_MAILBOX) += mailbox.o
obj-$(CONFIG_ARM_MHU) += arm_mhu.o

其中，mailbox.c 是kernel提供的framework，arm_mhu.c 则是具体厂商的实现

（4）client 通过mbox_send_message给controller发送数据的时候必须指定channel；
        int mbox_send_message(struct mbox_chan *chan, void *mssg)
————————————————
版权声明：本文为CSDN博主「huofengfeihu」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/u010961173/java/article/details/96422441
2.5  Linux内核配置选项

下面以最新的Linux 2.6.20内核为例，介绍比较常用的一些Linux内核配置选项，其他选项读者可以参考系统提供的帮助信息。

需要说明的是，在内核配置中，某项选择Y表示把该项选择进内核，选择M则表示把该项编译成模块，选择N则表示 不选择进内核。在make menuconfig 下，*表示Y，M表示M，空白表示N。在make xconfig下，√表示Y，·表示M，空白表示N。如果某选项在配置菜单中是可选择的，这并不意味着目标系统就支持该功能，当然大部分供选择的选项是目 标系统文持的；同样，配置菜单中没有的选项并不一定就表示目标系统不支持该功能，原因可能是该功能还未在目标系统上测试过，或者是维护人员未将该功能选项 加入到各级系统配置文件的config.in中，具体可以查看内核的英文说明。

2.5.1  General setup

General setup选项为常规安装选项，包括版本信息、虚拟内存、进程间通信、系统调用、审计支持等基本内核配置选项。下面介绍常规安装选项下主要子选项的配置方法。

1）Local version - append to kernel release

在内核后面加上自定义的版本字符串。这些字符在使用uname-a命令时会显示出来。要求字符最多不能超过64位。如果不清楚，则选择N。

2）Automatically append version information to the version string（LOCALVERSION_ AUTO）

自动生成版本信息。这个选项会自动探测内核并且生成相应的版本。在编译时需要有perl及git仓库的支持。在一般情况下，建议选择Y。

3）Support for paging of anonymous memory（swap）

使用交换分区或者交换文件来作为虚拟内存，也就是让计算机好像拥有比实际内存更多的内存空间用来执行很大的程序。Linux中的虚拟内存即SWAP分区，除非不需要SWAP分区，否则这里选择Y。

4）System V IPC（Inter Process Communication，IPC）

System V进程间通信（IPC）支持，许多程序需要这个功能，因此选择Y。中间过程连接是一组功能和系统调用，使得进程能够同步和交换信息。可以用info ipc命令来了解IPC的具体用法。

其中，IPC Namespaces （IPC_NS）子选项表示IPC命名空间，命名空间的作用是区别同名的设备。这个选项也是为不同的服务器提供IPC的多命名，达到一个IPC提供多对象支持的目的。如果不清楚，则选择N。

5）POSIX Message Queues

POSIX（可移植操作系统接口）消息队列是POSIX IPC中的一部分，在通信队列中有较高的优先权来保持通信畅通。如果需要编译和运行在Solaris操作系统上写的 POSIX信息队列程序，则选择Y。同时还需要 mqueue 库来支持这些特性。它是作为一个文件系统存在（mqueue），可以设置它。为保证以后的不同程序的协同稳定。如果不清楚，则选择N。

6）BSD Process Accounting

将进程的统计信息写入文件的用户级系统调用，信息通常包括建立时间、所有者、命令名称、内存使用、控制终端 等。如果选择Y，则用户级别的程序就可以通过特殊的系统调用方式来通知内核把进程统计信息记录到一个文件中，当这个进程存在的时候，信息就会被内核记录进 文件，这对用户级程序非常有用，所以通常选择Y。

其中，BSD Process Accounting version 3 file forma子选项表示使用新的第三版文件格式，通常选择Y。统计信息将会以新的格式（V3）写入，这格式包含进程ID和父进程。注意这个格式不兼容老版本 （V0/V1/V2）的文件格式，所以需要升级相关工具来使用它。

7）Export task/process statistics through netlink（EXPERIMENTAL）

这是一个处于实验阶段的功能，表示通过netlink接口向用户空间导出任务、进程等统计信息，与BSD Process Accounting的不同之处在于这些数据在进程运行的时候就可以通过相关命令访问。如果不清楚，则选择N。

8）UTS Namespaces 

UTS（通用终端系统）命名空间支持。它允许容器，比如Vservers利用UTS命名空间来为不同的服务器提供不同的UTS。如果不清楚，则选择N。

9）Auditing support

审计支持，某些内核模块（例如SELinux）需要它，只有同时选择其子项才能对系统调用进行审计。允许审计 的下层能够被其他内核子系统使用，比如SELinux，它需要这个来进行登录时的声音和视频输出。没有CONFIG_AUDITSYSCALL时（即下一 个选项）无法进行系统调用。

其中，Enable system-call auditing support (AUDITSYSCALL)子选项表示支持对系统调用的审计，允许系统独立地或者通过其他内核的子系统，调用审计支持，比如SELinux。要使用这种 审计的文件系统来查看特性，请确保 INOTIFY 已经被设置。这两个选项，要选择Y就都选择，以便调用其他内核。

10）Kernel.config support

把内核的配置信息编译进内核中，以后可以通过scripts/extract-ikconfig脚本来提取这些信息。

这个选项允许.config文件（即编译Linux时的配置文件）编译进内核中。可以通过内核镜像文件kernel image file，用命令script scripts/extract-ikconfig来提取这些配置信息，作为当前内核重编译或者另一个内核编译的参考。如果内核在运行中，可以通过/proc/config.gz文件来读取。

其中Enable access to .config through/proc/config.gz子选项表示可以通过/proc/config.gz 访问当前内核的.config。这两个选项，要选择Y就都选择，以便调用其他内核。

11）Cpuset support

多CPU支持。这个选项可以建立和管理CPU集群，它可以动态地将系统分割在各个CPU和内存节点中，在各个 节点是独立运行的，这对大型的系统尤其有效。一般只有在含有大量CPU（大于16个）的SMP系统或NUMA（非一致内存访问）系统才需要它。如果不清 楚，则选择N。

12）Kernel->user space relay support（formerly relayfs）

内核系统区和用户区进行传递通信的支持。在某些文件系统上（比如debugfs）提供从内核空间向用户空间传递大量数据的接口。

这个选项在特定的文件系统中提供数据传递接口支持，它可以提供从内核空间到用户空间的大批量的数据传递工具和设施。如果不清楚，则选择N。

13）Initramfs source file(s) 

initrd已经被initramfs取代，选N即可。

14）Optimize for size（Look out for broken compilers!）

这个选项将在GCC命令后用“-Os”代替“-O2”参数，编译时优化内核尺寸，以在编译时优化内核尺寸。

警告：某些GCC版本会产生错误的二进制代码。如果有错，请升级GCC。

这是优化内核大小的功能，一般没必要选。因为一个编译好的内核只有7～10MB，如果空间足够就不要冒出问题的风险来优化内核大小。

15）Configure standard kernel features（for small systems）

配置标准的内核特性（为小型系统）。这个选项可以让内核的基本选项和设置无效或者扭曲。这是用于特定环境中的，它允许“非标准”内核。它是为了编译某些特殊用途的内核使用的，例如引导盘系统。通常选这一选项，也不必关心其子选项。

2.5.2  Loadable module support

Loadable module support即引导模块支持，该选项包括加载模块、卸载模块、模块校验、自动加载模块等引导模块配置相关子选项。本节主要介绍引导模块支持子选项的配置方法。

1）Enable loadable module support 

打开可加载模块支持，如果打开它则必须通过make modules_install把内核模块安装在/lib/modules/中。模块是一小段代码，编译后可在系统内核运行时动态地加入内核，从而为内核 增加一些特性或是对某种硬件进行支持。一般一些不常用到的驱动或特性可以编译为模块以减少内核的体积。在运行时可以使用modprobe命令来加载它到内 核中去（在不需要时还可以移除它）。一些特性是否编译为模块的原则有不常使用的，或是在系统启动时不需要的驱动可以将其编译为模块，如果是一些在系统启动 时就要用到的驱动，比如说文件系统，系统总线的支持就不要编为模块，否则无法启动系统。在启动时不用到的功能编成模块是最有效的方式。可以查看MAN手册 来了解modprobe、lsmod、modinfo、insmod和rmmod。

如果选择了这项，则需要运行make modules_install命令来把模块添加到/lib/modules/目录下，以便 modprobe 可以找到它们。如果不清楚，则选择Y。

2）Module unloading 

允许卸载已经加载的模块。如果选择N，将不能卸载任何模块（有些模块一旦加载就不能卸载，不管是否选择了这个选项）。如果不清楚，则选择Y。

其中，Forced module unloading子选项允许强制卸载正在使用中的模块，即使内核认为这不安全，内核也将会立即移除模块，而不管是否有人在使用它（用rmmod -f命令）。如果不清楚，则选择N。

3）Module versioning support（MODVERSIONS）

允许使用其他内核版本的模块。选这项会添加一些版本信息，来给编译的模块提供独立的特性，以使不同的内核在使用同一模块时区别于它原有的模块。如果不清楚，则选择N。

4）Source checksum for all modules 

为所有的模块校验源码，如果不是自己编写内核模块就不需要它。这个功能是为了防止在编译模块时不小心更改了内核模块的源代码但忘记更改版本号而造成版本冲突。如果不清楚，则选择N。

5）Automatic kernel module loading 

允许内核通过运行modprobe自动加载模块，比如可以自动解决模块的依赖关系。在一般情况下，如果我们的 内核在某些任务中要使用一些被编译为模块的驱动或特性时，我们要先使用modprobe命令来加载它，内核才能使用。如果选择了这个选项，在内核需要一些 模块时它可以自动调用modprobe命令来加载需要的模块。如果不清楚，则选择Y。

2.5.3  Processor type and features

Processor type and features即处理器类型及特性，该模块包括处理器系列、内核抢占模式、抢占式大内核锁、内存模式、使用寄存器参数等处理器配置相关信息。本节介绍其中与嵌入式开发有关的主要子选项的配置方法。

1）Symmetric multi-processing support（SMP）

对称多处理器支持。将支持多个CPU的系统，此时Enhanced Real Time Clock Support选项必须开启，Advanced Power Management选项必须选择N。如果系统只有一个CPU，则选择N。反之，选择Y。如果选择N，内核将会在单个或者多个CPU的机器上运行，但是只 会使用一个CPU。如果选择Y，内核可以在很多（但不是所有）单CPU的机器上运行，在这样的机器上选择N，会使内核运行得更快。如果不清楚，则选择N。

2）Processor family

处理器系列。针对嵌入式系统所使用的处理器类型，选取相应的选项。

3）Preemptible kernel

内核抢占模式。一些优先级很高的程序可以先让一些低优先级的程序执行，即使这些程序是在内核态下执行。从而减 少内核潜伏期，提高系统的响应。当然在一些特殊的点的内核是不可抢占的，比如内核中的调度程序自身在执行时就是不可被抢占的。这个特性可以提高桌面系统、 实时系统的性能。有下面3个选项。

n        No Forced Preemption（Server）：非强迫式抢占。这是传统的Linux抢占式模型，针对于高吞吐量设计。它同样在很多时候会提供很好的响应，但是也 可能会有较长的延迟。如果是要建立服务器或者用于科学运算，或者要最大化内核的运算能力而不理会调度上的延迟，则选这项。

n        Voluntary Kernel Preemption（Desktop）：自动式内核抢占。这个选项通过向内核添加更多的“清晰抢占点”来减少内核延迟。这些新的抢占点以降低吞吐量为代 价，来降低内核的最大延迟，提供更快的应用程序响应。这通过允许低优先级的进程自动抢占来响应事件，即使进程在内核中进行系统调用。这使得应用程序运行得 更“流畅”，即使系统已经是高负荷运转。嵌入式系统里面通常选择N。

n        Preemptible Kernel（Low-Latency Desktop）：可抢占式内核（低延迟桌面）。这个选项通过使所有内核代码（非致命部分）编译为“可抢占”来降低内核延迟。通过允许低优先级进程进行强 制抢占来响应事件，即使这些进程正在进行系统调用或者未达到正常的“抢占点”。这使得应用程序运行得更加“流畅”，即使系统已经是高负荷运转。代价是吞吐 量降低，内核运行开销增大。嵌入式系统编译内核通常选择Y，这样只有很少的延迟。

其中，Preemptible Kernel子选项提供了最快的响应，适合对实时性要求较高的嵌入式系统。

4）Preempt The Big Kernel Lock 

抢占式大内核锁。应用于实时要求高的场合，适合嵌入式系统。这个选项通过让大内核锁变成“可抢占”来降低延迟。构建实时性要求较高的嵌入式系统，通常选择N。

5）Machine Check Exception

机器例外检查。让CPU检测到系统故障时通知内核，以便内核采取相应的措施（如过热关机等）。内核根据问题的 严重程度来决定下一步的行为，比如在命令行上打印警告信息或者关机。处理器必须是 Pentium或者更新版本才能支持这个功能。用cat /proc/cpuinfo来检测CPU是否有mce 标志。

所以使用ARM处理器的嵌入式系统在这里选择N。

6）Memory model

内存模式。一般选Flat Memory（平坦内存模式），Sparse Memory（稀疏内存模式）选项涉及内存热插拔。

7）Use register arguments（REGPARM）

使用寄存器参数。使用-mregparm=3参数编译内核，将前3个参数以寄存器方式进行参数调用，这使 GCC使用更高效的应用程序二进制接口（ABI）来跳过编译时的前3个调用寄存器参数，可以生成更紧凑和高效的代码。如果选择N，这个选项默认的ABI将 会使用。如果不清楚，则选择Y。

8）kexec system call（KEXEC）

kexec系统调用。使用此选项可以不必重启而切换到另一个内核。

kexec是一个用来选择N当前内核，然后开启另一个内核的系统调用。它和重启很像，但是它不访问系统固件。 由于和重启很像，可以启动任何内核，不仅仅是Linux。kexec这个名字是从exec系统调用来的，它只是一个进程，可以确定硬件是否正确，所以这段 代码可能不会正确地进行初始化工作。为慎重起见，在一般情况下，建议选择N。

2.5.4  Networking support 

Networking support即网络支持，该选项配置的是网络协议，内容庞杂，这里就不一一介绍了。只要对网络协议有所了解，应该可以看懂相关帮助文件。如果要开发嵌入 式系统能像PC一样使用各类网络协议，则可以使用默认选项，其中，最常用的TCP/IP networking选项当然要选择。

2.5.5  Device Drivers 

Device Drivers即设备驱动，该选项包括内核所支持的各类硬件设备的配置信息。对于嵌入式系统来说，设备驱动配置选项是最重要的步骤之一，下面详细介绍它们。

1）Generic Driver Options

驱动程序通用选项。包括以下几个子选项。

n        Select only drivers that don't need compile-time external firmware：只显示不需要内核对外部设备的固件做map支持的驱动程序，除非有某些怪异硬件，否则要选择Y。

n        Prevent firmware from being built：不编译固件。固件一般是随硬件的驱动程序提供的，仅在更新固件的时候才需要重新编译。建议选择Y。

n        Userspace firmware loading support：提供某些内核之外的模块需要的用户空间固件加载支持，在内核树之外编译的模块可能需要它。如果不清楚，则选择N。

n        Driver Core verbose debug messages：让驱动程序内核在系统日志中产生冗长的调试信息，仅供调试使用。如果不清楚，则选择N。

2）Connector - unified userspace <-> kernelspace linker 

统一的用户空间和内核空间连接器，工作在netlink socket协议的顶层。如果不确定，则选择N。

其中，Report process events to userspace子选项表示向用户空间报告进程事件。

3）Memory Technology Devices（MTD）

特殊的存储技术装置，如常用于数码相机或嵌入式系统的闪存卡。如果不清楚，则选择N。

4）Parallel port support

并口支持（传统的打印机接口）。如果不清楚，则选择N。

5）Plug and Play support

支持即插即用，若未选，则应当在BIOS中的“PnP OS”选择N。这里的选项与PCI设备无关。包括以下几个子选项。

n        PnP Debug Messages：该选项仅供调试使用。

n        ISA Plug and Play support：ISA设备支持即插即用。如果不清楚，则选择N。

n        Plug and Play BIOS support：Linux使用Plug and Play BIOS规范v1.0A（1994年）中定义的PnPBIOS自动检测主板上的资源和设备，但是其中的某些特性目前尚未实现，比如，事件通知/扩展坞 （Docking Station）信息/ISAPnP服务。如果希望由内核检测主板上的设备并为其分配资源（此时BIOS中的“PnP OS”必须开启）可以选择Y。此外，PnPBIOS还有助于防止主板上的设备与其他总线设备冲突。不过需要注意的是ACPI将会逐渐取代 PnPBIOS（虽然目前两者可以共存），所以如果系统不使用ISA设备并且支持ACPI，建议不要选择Y。将BIOS中的“PnP OS”选择N。

n        Plug and Play BIOS/proc interface：该选项仅供调试使用。如果不清楚，则选择N。

n        Plug and Play ACPI support：让Linux使用PnPACPI自动检测主板上内建的设备并为其分配资源（即使这些设备已被BIOS禁用），它有助于避免设备之间的资源（如中断）冲突。如果不清楚，则选择N。

6）Block devices

块设备。包括以下几个子选项。

n        ormal floppy disk support：通用软驱支持。如果嵌入式系统采用这种设备，则选择Y。

n        XT hard disk support：一种老式产品。如果嵌入式系统采用这种设备，则选择Y。

n        Parallel port IDE device support：通过并口与计算机连接的IDE设备。如果嵌入式系统采用这种设备，则选择Y。

n        Compaq SMART2 support：基于Compaq SMART2控制器的磁盘阵列卡。如果嵌入式系统采用这种设备，则选择Y。

n        Compaq Smart Array 5xxx support：基于Compaq SMART控制器的磁盘阵列卡。如果嵌入式系统采用这种设备，则选择Y。

n        Mylex DAC960/DAC1100 PCI RAID Controller support：一种老式产品。如果嵌入式系统采用这种设备，则选择Y。

n        Micro Memory MM5415 Battery Backed RAM support：一种使用电池做后备电源的内存。如果嵌入式系统采用这种设备，则选择Y。

n        Loopback device support：Loopback是指拿文件来模拟块设备，比如可以将一个iso9660镜像文件挂成一个文件系统。如果嵌入式系统采用这种设备，则选择Y。

n        Cryptoloop Support：使用系统提供的加密API对Loopback设备加密，但不能用于日志型文件系统。如果嵌入式系统采用这种设备，则选择Y。

n        Network block device support：让系统成为网络块设备的客户端。如果不清楚，则选择N。

n        Promise SATA SX8 support：基于Promise公司的SATA SX8控制器的RAID卡。如果嵌入式系统采用这种设备，则选择Y。

n        Low Performance USB Block driver：该选项并非表示支持优盘。一般情况下，建议选择N。

n        RAM disk support：内存中的虚拟磁盘，大小固定（由下面的选项决定，也可给内核传递ramdisk_size＝参数来决定），它的功能和代码都比shmem简单许多。如果嵌入式系统采用RAM disk，则选择Y。

n        Default number of RAM disks：默认RAM disk的数量。一般不必修改。

n        Default RAM disk size（kbytes）：默认RAM disk容量。一般不必修改。

n        Default RAM disk block size（bytes）：每一个RAM disk的默认块大小，设为PAGE_SIZE的值时效率最高。

n        Initial RAM filesystem and RAM disk（initramfs/initrd）support：如果启动系统所必须的模块都在内核里，则选择Y。

n        Packet writing on CD/DVD media：CD/DVD刻录支持。如果嵌入式系统采用这种设备，则选择Y。

n        Free buffers for data gathering：用于收集写入数据的缓冲区个数（每个占用64KB内存），在内存运行的情况下，缓冲区越多性能越好。

n        Enable write caching：为CD－R/W设备启用写入缓冲。由于安全性问题，在一般情况下，建议选择Y。

n        ATA over Ethernet support：以太网ATA设备支持。如果嵌入式系统采用这种设备，则选择Y。

7）Misc devices

杂项设备。如果不清楚，则选择N。

8）ATA/ATAPI/MFM/RLL support

SCSI设备通常是IDE硬盘和ATAPI光驱。纯SCSI系统且不使用这些接口可以选择N。

9）SCSI device support

SCSI设备。如果不清楚，则选择N。

10）Serial ATA and Parallel ATA drivers

SATA与PATA设备。如果不清楚，则选择N。

11）Old CD-ROM drivers（not SCSI，not IDE）

老旧的CD-ROM驱动，这种CD-ROM既不使用SCSI接口，也不使用IDE接口。如果不清楚，则选择N。

12）Multi-device support（RAID and LVM）

多设备支持（RAID和LVM）。RAID和LVM的功能是使多个物理设备组建成一个单独的逻辑磁盘。如果不清楚，则选择N。

13）Fusion MPT device support

Fusion MPT设备支持。如果不清楚，则选择N。

14）IEEE 1394（FireWire）support

IEEE 1394（火线）。如果不清楚，则选择N。

15）I2O device support

I2O（智能I/O）设备使用专门的I/O处理器负责中断处理、缓冲存取、数据传输等烦琐任务以减少CPU占用，一般PC的主板上没有。如果不清楚，则选择N。

16）Network device support

网络设备。包含以下子选项。

n        Network device support：网络设备支持，如果要开发的嵌入式系统需要上网，则选择Y。

n        Intermediate Functional Block support：这是一个中间层驱动，可以用来灵活的配置资源共享。如果不清楚，则选择N。

n        Dummy net driver support：哑接口网络，使用SLIP或PPP传输协议（如ADSL用户）的需要它。如果不清楚，则选择N。

n        Bonding driver support：将多个以太网通道绑定为一个，也就是两块网卡具有相同的IP地址并且聚合成一个逻辑链路工作，可以用来实现负载均衡或硬件冗余。如果不清楚，则选择N。

n        EQL（serial line load balancing）support：串行线路的负载均衡。如果有两个MODEM和两条电话线而且用SLIP或PPP协议，该选项可以让你同时使用这两个 MODEM以达到双倍速度（在网络的另一端也要有同样的设备）。如果不清楚，则选择N。

n        Universal TUN/TAP device driver support：TUN/TAP可以为用户空间提供包的接收和发送服务，比如可以用来虚拟一张网卡或点对点通道。如果不清楚，则选择N。

n        General Instruments Surfboard 1000：Surfboard 1000插卡式Cable Medem（ISA接口），一种老式产品。如果不清楚，则选择N。

n        ARCnet devices：一般人没有ARCnet类型的网卡。如果不清楚，则选择N。

n        PHY device support：数据链路层芯片简称为MAC控制器，物理层芯片简称为PHY，通常的网卡把MAC和PHY的功能做到了一颗芯片中，但也有一些仅含PHY的“软网卡”。如果不清楚，则选择N。

n        Ethernet（10/100Mbit）：目前最广泛的10/100MB网卡。如果不清楚，则选择N。

n        Ethernet（1000 Mbit）：目前已成装机主流的1000MB网卡。如果不清楚，则选择N。

n        Ethernet（10000 Mbit）：高速（万兆）网卡。如果不清楚，则选择N。

n        Token Ring devices：令牌环网设备。如果不清楚，则选择N。

n        Wireless LAN（non-hamradio）：无线LAN。如果不清楚，则选择N。

n        PCMCIA network device support：PCMCIA或CardBus网卡。如果不清楚，则选择N。

n        WAN interfaces：WAN接口。如果不清楚，则选择N。

n        ATM drivers：异步传输模式。如果不清楚，则选择N。

n        FDDI driver support：光纤分布式数据接口。如果不清楚，则选择N。

n        HIPPI driver support：HIPPI（高性能并行接口）是一个在短距离内高速传送大量数据的点对点协议。如果不清楚，则选择N。

n        PLIP（parallel port）support：将并口映射成网络设备，这样两台机器即使没有网卡也可以使用并口通过并行线传输IP数据包。如果不清楚，则选择N。

n        PPP（point-to-point protocol）support：点对点协议，PPP已经基本取代SLIP了，若使用ADSL则要选择Y。如果不清楚，则选择N。

n        PPP multilink support：多重链路协议（RFC1990）允许将多个线路（物理的或逻辑的）组合为一个PPP连接以充分利用带宽，这不但需要pppd的支持，还需要ISP的支持。如果不清楚，则选择N。

n        PPP filtering：允许对通过PPP接口的包进行过滤。如果不清楚，则选择N。

n        PPP support for async serial ports：通过标准异步串口（COM1，COM2）使用PPP，比如使用老式的外置MODEM（非同步MODEM或ISDN MODEM）上网。如果不清楚，则选择N。

n        PPP support for sync tty ports：通过同步tty设备（比如SyncLink适配器）使用PPP，常用于高速租用线路（比如T1/E1）。如果不清楚，则选择N。

n        PPP Deflate compression：为PPP提供Deflate（等价于gzip压缩算法）压缩算法支持，需要通信双方的支持才有效。如果不清楚，则选择N。

n        PPP BSD-Compress compression：为PPP提供BSD（等价于LZW压缩算法，没有gzip高效）压缩算法支持，需要通信双方的支持才有效。如果不清楚，则选择N。

n        PPP MPPE compression（encryption）：为PPP提供MPPE加密协议支持，它被用于微软的P2P隧道协议中。如果不清楚，则选择N。

n        PPP over Ethernet：这就是ADSL用户最常见的PPPoE，也就是在以太网上运行的PPP协议。如果不清楚，则选择N。

n        PPP over ATM：在ATM上运行的PPP。如果不清楚，则选择N。

n        SLIP（serial line）support：一个在串行线上（例如电话线）传输IP数据报的TCP/IP协议。小猫一族的通信协议，与宽带用户无关。如果不清楚，则选择N。

n        CSLIP compressed headers：CSLIP协议比SLIP快，它将TCP/IP头（而非数据）进行压缩传送，需要通信双方的支持才有效。如果不清楚，则选择N。

n        Keepalive and linefill：让SLIP驱动支持RELCOM linefill和keepalive监视，这在信号质量比较差的模拟线路上是个好主意。如果不清楚，则选择N。

n        Six bit SLIP encapsulation：这种线路非常罕见，在一般情况下，建议选择N。

n        Fibre Channel driver support：光纤通道。如果不清楚，则选择N。

n        Traffic Shaper：流量整形，已废弃。在一般情况下，建议选择N。

n        Network console logging support：通过网络记录内核信息。如果不清楚，则选择N。

n        Netpoll support for trapping incoming packets：在一般情况下，建议选择N。

n        Netpoll traffic trapping：在一般情况下，建议选择N。

17）ISDN subsystem

综合业务数字网（Integrated Service Digital Network）。如果不清楚，则选择N。

18）Telephony Support

VoIP支持。如果不清楚，则选择N。

19）Input device support

输入设备。包括以下子选项。

n        Generic input layer（needed for keyboard，mouse）：通用输入层，如果是使用键盘鼠标的，则选择Y。如果不清楚，则选择N。

n        Support for memoryless force-feedback devices：游戏玩家使用的力反馈设备。如果不清楚，则选择N。

n        Mouse interface：鼠标接口。如果不清楚，则选择N。

n        Provide legacy/dev/psaux device：仍然支持作为传统的/dev/psaux设备。如果不清楚，则选择N。

n        Horizontal screen resolution：数字化转换器或图形输入板的水平分辨率。如果不清楚，则选择N。

n        Vertical screen resolution：数字化转换器或图形输入板的垂直分辨率。如果不清楚，则选择N。

n        Joystick interface：游戏杆。如果不使用，则选择N。

n        Touchscreen interface：触摸屏。如果不使用，则选择N。

n        Event interface：能够利用/dev/input/eventX来存取输入设备的事件。如果不清楚，则选择N。

n        Event debugging：该选项仅供调试使用。如果不清楚，则选择N。

n        Keyboards：键盘驱动，一般选个AT键盘即可。如果不清楚，则选择N。

n        Mouse：鼠标驱动，一般选个PS/2鼠标即可。如果不清楚，则选择N。

n        Joysticks：游戏杆驱动。如果不使用，则选择N。

n        Touchscreens：触摸屏驱动。如果不使用，则选择N。

n        Miscellaneous devices：其他杂项驱动，一般选个PC喇叭即可。如果不清楚，则选择N。

n        Hardware I/O ports：硬件I/O端口。如果不清楚，则选择N。

n        Serial I/O support：使用PS/2键盘或鼠标，则选择Y。如果不使用，则选择N。

n        i8042 PC Keyboard controller：PS/2接口的键盘和鼠标。如果不使用，则选择N。

n        Serial port line discipline：串口键盘或鼠标。如果不使用，则选择N。

n        ct82c710 Aux port controller：一种德州仪器TravelMate笔记本上使用QuickPort接口的鼠标。如果不使用，则选择N。

n        Parallel port keyboard adapter：并口键盘或鼠标。如果不使用，则选择N。

n        PCI PS/2 keyboard and PS/2 mouse controller：接在移动式扩展坞（Docking station）上的键盘或鼠标。如果不使用，则选择N。

n        PS/2 driver library：为PS/2接口上的设备提供驱动（比如PS/2鼠标或标准AT键盘）。如果不使用，则选择N。

n        Raw access to serio ports：在一般情况下，建议选择N。

n        Gameport support：类似早年“小霸王”游戏机上的那种手柄。如果不使用，则选择N。

20）Character devices

字符设备。包含以下子选项。

n        Virtual terminal：虚拟终端。嵌入式系统在一般情况下，建议选择N。

n        Support for console on virtual terminal：内核将一个虚拟终端用做系统控制台（将诸如模块错误、内核错误、启动信息之类的警告信息发送到这里，通常是第一个虚拟终端）。嵌入式系统在一般情况下，建议选择N。

n        Support for binding and unbinding console drivers：虚拟终端是通过控制台驱动程序与物理终端相结合的，但在某些系统上可以使用多个控制台驱动程序（如framebuffer控制台驱动程序），该选项使得可以选择其中之一。如果不清楚，则选择N。

n        Non-standard serial port support：非标准串口支持。这样的设备已废弃不用。在一般情况下，建议选择N。

n        Serial drivers：串口驱动。如果有老式的串口鼠标或小猫，则选择Y。否则选择N。

n        Unix98 PTY support：伪终端（PTY）可以模拟一个终端，它由slave（等价于一个物理终端）和master（被一个诸如xterms之类的进程用来读写 slave设备）两部分组成的软设备。如果使用telnet或ssh远程登录者，则选择Y。如果不清楚，则选择N。

n        Legacy（BSD）PTY support：使用过时的BSD风格的/dev/ptyxx作为master，/dev/ttyxx作为slave。这个方案有一些安全问题，建议选择N。

n        Parallel printer support：并口打印机。如果不使用，则选择N。

n        Support for console on line printer：允许将内核信息输出到并口，这样就可以打印出来。如果不清楚，则选择N。

n        Support for user-space parallel port device drivers：/dev/parport设备支持，比如deviceid之类的程序需要使用它。在一般情况下，建议选择N。

n        Texas Instruments parallel link cable support：德州仪器生产的一种使用并行电缆的图形计算器。如果不清楚，则选择N。

n        IPMI：可以利用IPMI远程监视服务器的物理特征（温度、电压、风扇、电源、机箱入侵），它是独立于CPU、BIOS、OS的，只要接通电源就可以实现对服务器的监控。如果不清楚，则选择N。

n        IPMI top-level message handler：IPMI消息处理器，要启用IPMI远程监视，则选择Y。如果不清楚，则选择N。

n        Generate a panic event to all BMCs on a panic：当发生紧急情况（panic）时，IPMI消息处理器将会向每一个已注册的底板管理控制器（BMC）接口生成一个描述该panic的IPMI 事件，这些事件可以引发日志记录、报警、重启、关机等动作。如果不清楚，则选择N。

n        Generate OEM events containing the panic string：当发生紧急情况（panic）时，IPMI消息处理器将会产生OEM类型的事件。如果不清楚，则选择N。

n        Device interface for IPMI：为IPMI消息处理器提供一个IOCTL接口，以便用户空间的进程也可以使用IPMI。如果不清楚，则选择N。

n        IPMI System Interface handler：向系统提供接口（KCS、SMIC），一般用了IPMI就需要选择Y。如果不清楚，则选择N。

n        IPMI WatchDog Timer：启用IPMI WatchDog定时器。如果不清楚，则选择N。

n        IPMI Poweroff：允许IPMI消息处理器选择N。如果不清楚，则选择N。

n        WatchDog Cards：能让系统在出现致命故障后自动重启，如果没有硬件WatchDog，建议使用Hangcheck timer而不是软件WatchDog。如果不清楚，则选择N。

n        Watchdog Timer Support：选择Y。下面的一个Driver之后，再创建一个/dev/ watchDog节点即可拥有一只WatchDog了。更多信息请参考内核帮助。如果不清楚，则选择N。

n        Disable watchDog shutdown on close：一旦WatchDog启动后就禁止将其停止。如果不清楚，则选择N。

n        Software watchDog：软件WatchDog，使用它不需要有任何硬件的支持，但是可靠性没有硬件WatchDog高。如果不清楚，则选择N。

n        Hardware Random Number Generator Core support：硬件随机数发生器内核支持。如果不清楚，则选择N。

n        Intel HW Random Number Generator support：Intel芯片组的硬件随机数发生器。如果不清楚，则选择N。

n        AMD HW Random Number Generator support：AMD芯片组的硬件随机数发生器。如果不清楚，则选择N。

n        AMD Geode HW Random Number Generator support：AMD Geode LX的硬件随机数发生器。如果不清楚，则选择N。

n        VIA HW Random Number Generator support：VIA芯片组的硬件随机数发生器。如果不清楚，则选择N。

n        /dev/nvram support：直接存取主板上CMOS的接口。可能发生安全性问题，建议选择N。

n        Enhanced Real Time Clock Support：启用该选项并创建/dev/RTC文件后就可以通过/proc/driver/RTC访问系统的硬件时钟（RTC），众多功能依赖于它（如SMP、IRQ共享、定时器）。在一般情况下，建议选择Y。

n        Double Talk PC internal speech card support：由RC Systems公司制造的一种语音合成器。如果不清楚，则选择N。

n        Siemens R3964 line discipline：与使用西门子R3964协议的设备同步通信。除非有一些诸如PLC之类的特殊设备，否则在一般情况下，建议选择N。

n        Applicom intelligent fieldbus card support：Applicom international公司生产的用于现场总线连接卡。如果不清楚，则选择N。

n        Sony Vaio Programmable I/O Control Device support：Sony VAIO笔记本上的设备。如果不清楚，则选择N。

n        Ftape，the floppy tape device driver：针对使用磁带的系统。如果不清楚，则选择N。

n        /dev/agpgart（AGP Support）：AGP总线支持，有AGP显卡的还必须从子项中选取符合嵌入式系统所使用显卡型号的驱动。如果不清楚，则选择N。

n        Direct Rendering Manager：DRI允许应用程序以高效安全的方式直接访问图形处理，主要用于硬件3D加速。建议桌面用户选择此方式，同时还必须从子项中选取符合嵌入式系统所使用显卡型号的驱动。如果不清楚，则选择N。

n        PCMCIA character devices：使用PCMCIA接口的字符设备。如果不清楚，则选择N。

n        ACP Modem（Mwave）support：IBM Thinkpad上的一种软猫，一种老式产品。如果不清楚，则选择N。

n        NatSemi SCx200 GPIO Support：松下的一种通用输入、输出（GPIO）芯片。嵌入式系统一般选择Y。

n        NatSemi PC8736x GPIO Support：松下的一种通用输入、输出（GPIO）芯片。嵌入式系统一般选择Y。

n        NatSemi Base GPIO Support：松下的一种通用输入、输出（GPIO）芯片。嵌入式系统一般选择Y。

n        AMD CS5535/CS5536 GPIO：常用于AMD Geode的一种通用输入、输出（GPIO）芯片。嵌入式系统一般选择Y。

n        RAW driver（/dev/raw/rawN）：一种老式设备，已废弃。在一般情况下，建议选择N。

n        HPET－High Precision Event Timer：高精度事件定时器。如果不清楚，则选择N。

n        Allow mmap of HPET：允许对HPET寄存器进行映射。在一般情况下，建议选择Y。

n        Hangcheck timer：宕机检测定时器周期性地检查系统任务调度程序，以确定系统的运行状况，如果超过阈值，计算机将重新启动。它通常可以比WatchDog更好地解决可用性和可靠性问题。如果不清楚，则选择N。

n        TPM devices：基于硬件的“可信赖平台模块”。在一般情况下，建议选择N。

n        Telecom clock driver for MPBL0010 ATCA SBC：在一般情况下，建议选择N。

21）I2C support

I2C是Philips极力推动的微控制应用中使用的低速串行总线协议，可用于监控电压、风扇转速、温度等。SMBus（系统管理总线）是I2C的子集。除硬件传感器外，Video For Linux也需要该模块的支持。包含以下子选项。

n        I2C device interface：I2C设备接口，允许用户空间的程序通过/dev/i2c-*设备文件使用I2C总线。如果不清楚，则选择N。

n        I2C Algorithms：I2C算法支持，可以全选择N。若有其他部分依赖其子项时，建议选择Y。

n        I2C Hardware Bus support：按实际硬件情况选对应的子项即可。

n        Miscellaneous I2C Chip support：其他不常见的产品，按需求选择。如果不清楚，则选择N。

n        I2C Core debugging messages：仅供调试使用。如果不清楚，则选择N。

n        I2C Algorithm debugging messages：仅供调试使用。如果不清楚，则选择N。

n        I2C Bus debugging messages：仅供调试使用。如果不清楚，则选择N。

n        I2C Chip debugging messages：仅供调试使用。如果不清楚，则选择N。

22）SPI support

串行外围接口（SPI）常用于微控制器（MCU）与外围设备（传感器、EEprom、Flash、编码器、模数转换器）之间的通信，比如MMC和SD卡就通常需要使用SPI。

23）Dallas's 1-wire bus

一线总线。如果不清楚，则选择N。

24）Hardware Monitoring support

当前主板大多都有一个监控硬件健康的设备用于监视温度、电压、风扇转速等，请按照嵌入式系统所使用主板实际使用的芯片选择相应的子项。另外，该功能还需要I2C的支持。如果不清楚，则选择N。

25）Multimedia devices

多媒体设备。包括以下子选项。

n        Video For Linux：如果是使用音频/视频设备或FM收音卡的则选择Y。此功能还需要I2C的支持。如果不清楚，则选择N。

n        Enable Video For Linux API 1：使用老旧的V4L第一版API。在一般情况下，建议选择N。

n        Enable Video For Linux API 1 compatible Layer：提供对第一版V4L的兼容。在一般情况下，建议选择N。

n        Video Capture Adapters：视频捕获卡。如果不清楚，则选择N。

n        Enable advanced debug functionality：该选项仅供调试使用。如果不清楚，则选择N。

n        Autoselect pertinent encoders/decoders and other helper chips：为视频卡自动选择所需的编码和解码模块。在一般情况下，建议选择Y。

n        Virtual Video Driver：虚拟视频卡，仅供测试视频程序和调试。如果不清楚，则选择N。

n        SAA5246A，SAA5281 Teletext processor：该选项仅面向欧洲用户，中国用户一般选择N。

n        SAA5249 Teletext processor：该选项仅面向欧洲用户，中国用户一般选择N。

n        V4L USB devices：使用USB接口的视频卡，子选项请根据嵌入式系统实际使用的视频卡选择。

n        Radio Adapters：音频卡，子选项请根据嵌入式系统实际使用的音频卡选择。

n        Digital Video Broadcasting Devices：数字视频广播设备（DVB卡或机顶盒），子选项请根据嵌入式系统实际使用的硬件选择

n        DABUSB driver：USB接口的数字音频广播设备接收器。如果不清楚，则选择N。

26）Graphics support

图形设备/显卡支持。包括以下子选项。

n        Enable firmware EDID：允许访问Video BIOS中的扩展显示器识别数据（EDID）。如果不清楚，则选择N。

n        Support for frame buffer devices：帧缓冲设备是为了让应用程序使用统一的接口操作显示设备而对硬件进行的抽象。如果不清楚，则选择N。

n        Enable Video Mode Handling Helpers：使用GTF和EDID来帮助处理显示模式，可以选择N。若有其他选项依赖于它时，则会自动选择Y。

n        Enable Tile Blitting Support：可以选择N。若有其他选项依赖于它时，会自动选择Y。

n        VGA 16－color graphics support：16色VGA显卡。如果有这样一种老式设备，则选择Y。

n        VESA VGA graphics support：符合VESA 2.0标准的显卡的通用驱动，如果显卡芯片在下面能够找到就可以选择N。

n        Virtual Frame Buffer support：仅供调试使用。

n        Console display driver support：控制台显示驱动。如果不清楚，则选择N。

n        VGA text console：文本控制台。如果不清楚，则选择N。

n        Enable Scrollback Buffer in System RAM：在内存中开辟额外的屏幕缓冲区，这将允许回滚屏幕。如果不清楚，则选择N。

n        Scrollback Buffer Size（in KB）：在内存中开辟的额外屏幕缓冲区大小。如果不清楚，则选择N。

n        Video mode selection support：允许在内核启动时使用vga＝选择文本模式，如果希望一行能够显示更多字符的话可以打开它。如果不清楚，则选择N。

n        MDA text console（dual-headed）：如果有老式的单色显卡并且作为第二块显卡使用以实现双头显示，则选择Y。如果不清楚，则选择N。

n        Framebuffer Console support：基于Framebuffer的控制台驱动，服务器可以选择N。

n        Framebuffer Console Rotation：显示画面旋转，它可能大大降低显示速度，建议选择N。

n        Select compiled-in fonts：选择内建字体。如果不清楚，则选择N。

n        VGA 8x8 font：高分辨率下的小字体。如果不清楚，则选择N。

n        VGA 8x16 font：低分辨率下的大字体。如果不清楚，则选择N。

n        Logo configuration：启动时显示Linux的logo（一幅企鹅图像），喜欢炫一下的则选择Y。

n        Backlight＆LCD device support：LCD显示器支持。如果不清楚，则选择N。

27）Sound

声卡。包括以下子选项。

n        Advanced Linux Sound Architecture：使用声卡者选择Y。

n        Sequencer support：音序器支持（MIDI必需），除非确定不需要，否则请选择Y。

n        Sequencer dummy client：除非要同时连接到多个MIDI设备或应用程序，否则一般选择N。

n        OSS Mixer API：OSS混音器API仿真，许多程序目前仍然需要使用它。在一般情况下，建议选择Y。

n        OSS PCM（digital audio）API：OSS数字录音（PCM）API模拟，许多程序目前仍然需要使用它。在一般情况下，建议选择Y。

n        OSS PCM（digital audio）API-Include plugin system：在一般情况下，建议选择N。

n        OSS Sequencer API：OSS音序器支持，许多程序目前仍然需要使用它。在一般情况下，建议选择Y。

n        RTC Timer support：为ALSA启用RTC定时器支持。在一般情况下，建议选择Y。

n        Use RTC as default sequencer timer：将RTC当做默认的时序脉冲发生器。如果不清楚，则选择N。

n        Dynamic device file minor numbers：仅供拥有多个声卡的用户选择。如果不清楚，则选择N。

n        Support old ALSA API：支持已被废弃的老版本ALSA API。如果不清楚，则选择N。

n        Verbose procfs contents：仅供调试使用。

n        Verbose printk：仅供调试使用。

n        Debug：仅供调试使用。

n        Generic devices：通用设备。如果不清楚，则选择N。

n        Dummy（/dev/null）soundcard：仅供调试使用。

n        Virtual MIDI soundcard：虚拟MIDI驱动，允许将使用原始MIDI设备的应用程序连接到音序器客户端。如果不清楚，则选择N。

n        PCI devices：PCI接口的声卡，请按实际使用的声卡选择子项。

n        USB devices：USB接口的声卡，请按实际使用的声卡选择子项。

n        PCMCIA devices：PCMCIA接口的声卡，请按实际使用的声卡选择子项。

n        Open Sound System：在一般情况下，建议选择N。

28）USB support

USB支持。包括以下子选项。

n        Support for Host-side USB：主机端（Host-side）USB支持。通用串行总线（USB）是一个串行总线子系统规范，它比传统的串口速度更快并且特性更丰富（供电、热插 拔，最多可接127个设备等），有望在将来统一PC外设接口。USB的“Host”（主机）被称为“根”（也可以理解为是主板上的USB控制器），外部设 备被称为“叶子”，而内部的节点则称为HUB（集线器）。基本上只要想使用任何USB设备都必须选择此项。另外，还需要从下面选择Y。至少一个Host Controller Driver（HCD），比如适用于USB 1.1的UHCI HCD support或OHCI HCD support，适用于USB 2.0的EHCI HCD（USB 2.0）support。如果拿不准的话把他们全部选择Y，一般也不会出问题。如果系统有设备端的USB接口（也就是系统可以作为叶子使用），请到USB Gadget中进行选择。

n        USB verbose debug messages：仅供调试使用。

n        USB device filesystem：在/proc/bus/USB里列出当前连接的USB设备（mount-t USBfs none/proc/bus/USB），这样用户空间的程序就可以直接访问这些USB设备。如果要使用USB设备的话就必须选择Y。

n        Enforce USB bandwidth allocation：执行USB带宽分配限制，禁止打开占用USB总线带宽超过90％的设备，选择N可能会导致某些设备无法正常工作。

n        Dynamic USB minor allocation：除非有超过16个同类型的USB设备，否则选择N。

n        USB selective suspend/resume and wakeup：USB设备的挂起和恢复。在一般情况下，建议选择N。

n        EHCI HCD（USB 2.0）support：USB 2.0支持（大多数2002年以后的主板都支持）。如果此项选择Y，一般来说OHCI或UHCI驱动选项同时需要也选择Y。

n        Full speed ISO transactions：由于USB 2.0支持低速（1.5Mbps）、全速（12Mbps）、高速（480Mbps）3种规格的外部设备，为了将全/低速设备对高速设备可用带宽的影响减到 最小，在USB 2.0集线器中提供了一种事务转换（Transaction Translator）机制，该机制支持在HUB连接的是全/低速设备的情况下，允许主控制器与HUB之间以高速传输所有设备的数据，从而节省不必要的等 待。如果没有外置的USB集线器可以选择N。

n        Root Hub Transaction Translators：带有USB 2.0接口的主板上都有一个根集线器（Root Hub），以允许在无须额外购买HUB的情况下就可以提供多个USB插口，其中的某些产品还在其中集成了事务转换（Transaction Translator）功能，这样就不需要再额外使用一个兼容OHCI或UHCI的控制器来兼容USB 1.1，即使不太清楚嵌入式系统所使用主板上的根集线器是否集成了事务转换功能，也可以安全地选择此项。

n        Improved Transaction Translator scheduling：如果有一个高速USB 2.0 HUB并且某些接在这个HUB上的低速或全速设备不能正常工作（显示'cannot submit datapipe: error-28'或'error-71'错误），可以考虑选择Y。

n        ISP116X HCD support：ISP1160/ISP1161主机USB控制器，是符合USB 2.0全速规范的单片主机控制器和设备控制器，支持OHCI标准。

n        OHCI HCD support：开放主机控制接口（OHCI）是主要针对嵌入式系统的USB 1.1主机控制器规范。如果不清楚，则选择N。

n        UHCI HCD（most Intel and VIA）support：通用主机控制器接口（UHCI）是主要针对PC的USB 1.1主机控制器规范。另外，EHCI也可能需要它。如果不清楚，则选择N。

n        Elan U132 Adapter Host Controller：如果嵌入式系统采用这种设备，则选择Y。

n        SL811HS HCD support：如果嵌入式系统采用这种设备，则选择Y。

n        USB Bluetooth TTY support：USB蓝牙TTY设备支持。如果嵌入式系统采用这种设备，则选择Y。

n        USB MIDI support：USB MIDI设备支持。如果嵌入式系统采用这种设备，则选择Y。

n        USB MODEM（CDC ACM）support：USB接口的猫或ISDN适配器。如果嵌入式系统采用这种设备，则选择Y。

n        USB Printer support：USB打印机。如果嵌入式系统采用这种设备，则选择Y。

n        USB Mass Storage support：USB存储设备（优盘、USB硬盘、USB软盘、USB CD-ROM、USB磁带、memory sticks、数码相机、读卡器等）。该选项依赖于SCSI device support，且大部分情况下还依赖于SCSI disk support（比如优盘或USB硬盘）。如果嵌入式系统采用这种设备，则选择Y。

n        USB Mass Storage verbose debug：仅供调试使用。

n        The shared table of common（或usual）storage devices：该模块包含一张记录了常用USB存储设备及其驱动的表格，这样无须重新编译模块即可在切换这些设备时自动邦定对应的驱动（还需要对 /etc/modprobe。conf进行相应的设置）。如果不清楚，则选择N。

n        USB Human Interface Device（full HID）support：USB人机界面设备（鼠标、键盘、游戏杆、手写板等操作计算机的设备），该驱动不能和USB HID Boot Protocol drivers同时使用。如果不清楚，则选择N。

n        HID input layer support：如果有USB接口的鼠标、键盘、游戏杆、手写板等输入设备，则选择Y。

n        Enable support for iBook/PowerBook special keys：苹果iBooks/PowerBooks键盘上的Fn/Numlock等功能键支持。如果不清楚，则选择N。

n        Force feedback support：力反馈设备。如果不清楚，则选择N。

n        /dev/hiddev raw HID device support：如果有USB监控装置或不间断电源（UPS）之类的非输入设备就选择Y。

n        USB HID Boot Protocol drivers：如果有绝对的把握确信不为嵌入式系统所使用的键盘和鼠标使用通常的HID驱动，而要使用Boot Protocol模式的HID驱动（常见于嵌入式环境），则选择Y。

n        Aiptek 6000U/8000U tablet support：一种手写板。如果嵌入式系统采用这种设备，则选择Y。

n        Wacom Intuos/Graphire tablet support：一种手写/绘图板。如果嵌入式系统采用这种设备，则选择Y。

n        Acecad Flair tablet support：一种数控绘图板。如果嵌入式系统采用这种设备，则选择Y。

n        KB Gear JamStudio tablet support：一种手写/绘图板。如果嵌入式系统采用这种设备，则选择Y。

n        Griffin PowerMate and Contour Jog support：一种具有调节音量、滚动文本、视频快进/快退等功能的产品。如果嵌入式系统采用这种设备，则选择Y。

n        USB Touchscreen Driver：USB触摸屏驱动。如果嵌入式系统采用USB触摸屏硬件，则选择Y。

n        Yealink USB-p1k voip phone：一种VoIP电话。如果嵌入式系统采用这种设备，则选择Y。

n        X-Box gamepad support：X-Box游戏板。如果嵌入式系统采用这种设备，则选择Y。

n        ATI/X10 USB RF remote control：一种USB远程控制设备。如果嵌入式系统采用这种设备，则选择Y。

n        ATI/Philips USB RF remote control：一种USB远程控制设备。如果嵌入式系统采用这种设备，则选择Y。

n        Keyspan DMR USB remote control：一种USB远程控制设备。如果嵌入式系统采用这种设备，则选择Y。

n        Apple USB Touchpad support：苹果机上的触摸板。如果嵌入式系统采用这种设备，则选择Y。

n        USB Mustek MDC800 Digital Camera support：一种数码相机。如果嵌入式系统采用这种设备，则选择Y。

n        Microtek X6USB scanner support：一种扫描仪。如果嵌入式系统采用这种设备，则选择Y。

n        USB Network Adapters：USB网络适配器，如果有这种设备请根据嵌入式系统实际使用的硬件选择子项。

n        USB Monitor：USB流量监控。在一般情况下，建议选择N。

n        USS720 parport driver：一种USB接口转并口的转换设备。如果嵌入式系统采用这种设备，则选择Y。

n        USB Serial Converter support：USB接口转串口的转换设备。如果嵌入式系统采用这种设备，则选择Y。

n        EMI 6｜2m USB Audio interface support：一种USB音频设备。如果嵌入式系统采用这种设备，则选择Y。

n        EMI 2｜6 USB Audio interface support：一种USB音频设备。如果嵌入式系统采用这种设备，则选择Y。

n        ADU devices from Ontrak Control Systems：Ontrak Control Systems公司的一种自动拨号设备。如果嵌入式系统采用这种设备，则选择Y。

n        USB Auerswald ISDN support：一种ISDN设备。如果嵌入式系统采用这种设备，则选择Y。

n        USB Diamond Rio500 support：一种MP3播放器。如果嵌入式系统采用这种设备，则选择Y。

n        USB Lego Infrared Tower support：一种无线发射机。如果嵌入式系统采用这种设备，则选择Y。

n        USB LCD driver support：USB液晶显示器。如果嵌入式系统采用这种设备，则选择Y。

n        USB LED driver support：USB发光二极管。如果嵌入式系统采用这种设备，则选择Y。

n        Cypress CY7C63xxx USB driver support：德国AK Modul-Bus Computer GmbH公司的一种产品。如果嵌入式系统采用这种设备，则选择Y。

n        Cypress USB thermometer driver support：一种温度计。如果嵌入式系统采用这种设备，则选择Y。

n        USB Phidgets drivers：来自Phidgets公司的各种USB产品。如果嵌入式系统采用这种设备，则选择Y。

n        Siemens ID USB Mouse Fingerprint sensor support：西门子公司的一种指纹传感器。如果嵌入式系统采用这种设备，则选择Y。

n        Elan PCMCIA CardBus Adapter USB Client：Elan公司的一种USB转PCMCIA的适配器。如果嵌入式系统采用这种设备，则选择Y。

n        Apple Cinema Display support：苹果公司的一种Cinema Display。如果嵌入式系统采用这种设备，则选择Y。

n        USB 2.0 SVGA dongle support（Net2280/SiS315）：一种软件狗。如果嵌入式系统采用这种设备，则选择Y。

n        USB LD driver：USB LD驱动。如果嵌入式系统采用USB LD硬件，则选择Y。

n        PlayStation 2 Trance Vibrator driver support：SONY的PS2上面的“入迷振荡器”，类似于力反馈手柄。如果嵌入式系统采用这种设备，则选择Y。

n        USB testing driver：这是一种测试中的驱动。在一般情况下，建议选择N。

n        USB DSL modem support：对USB DSL猫的支持。如果嵌入式系统采用这种设备，则选择Y。

n        USB Gadget Support：USB杂项支持。如果不清楚，则选择N。

29）MMC/SD Card support

MMC/SD卡支持。如果嵌入式系统采用此类设备，则选择Y。

30）LED devices

发光二级管（LED）设备。如果嵌入式系统采用此类设备，则选择Y。

31）InfiniBand support

InfiniBand是一个通用的高性能I/O规范，它使得存储区域网中以更低的延时传输I/O消息和集群通信消息并且提供很好的伸缩性。用于Linux服务器集群系统。如果不清楚，则选择N。

32）EDAC-error detection and reporting（RAS）

错误检测与纠正（EDAC）的目标是发现并报告，甚至纠正在计算机系统中发生的错误，这些错误是由CPU或芯片组报告的底层错误（内存错误、缓存错误、PCI错误、温度过高等）。在一般情况下，建议选择Y。如果这些代码报告了一个错误，请到以下网站查看更多信息。

n        http://bluesmoke.Sourceforge.net/。

n        http://buttersideup.com/edacwiki/。

该选项包括以下子选项。

n        Debugging：仅供调试使用。

n        Main Memory EDAC（Error Detection And Correction）reporting：一些系统能够检测和修正主内存中的错误，EDAC能够报告这些信息（EDAC自己检测到的或者根据ECC得到 的）。EDAC还会尽量检测这些错误发生在哪里，以便于替换损坏的内存。建议选择并按照实际使用的芯片组选取子项。

n        Error detecting method：错误检测方法，当前只有一个Poll for errors（错误轮询）可用。如果不清楚，则选择N。

33）Real Time Clock

所有的PC主板都包含一个电池动力的实时时钟芯片，以便在断电后仍然能够继续保持时间，RTC通常与CMOS集成在一起，因此BIOS可以从中读取当前时间。该选项包括以下子选项。

n        RTC class：通用RTC类支持，选择此项后就可以在操作系统中使用一个或多个RTC设备，还必须从下面启用一个或多个RTC接口。如果不清楚，则选择N。

n        Set system time from RTC on startup：系统启动时使用从指定的RTC设备中读取的时间来设定系统时间，通常这将有助于避免不必要的文件系统检测程序（fsck）的运行。在一般情况下，建议选择Y。

n        The RTC to read the time from：指定具体从哪个RTC设备中读取时间。如果不清楚，则选择N。

n        RTC debug support：仅供调试使用。

n        sysfs：允许通过sysfs接口使用RTC，允许多个RTC设备，也就是/sys/class/RTC/ RTC0_N。如果不清楚，则选择N。

n        proc：允许通过proc接口使用RTC，仅允许一个RTC设备，也就是/proc/driver/RTC。如果不清楚，则选择N。

n        dev：允许通过dev接口使用RTC，允许多个RTC设备，也就是udev设置的/dev/RTC0_N，建议建立一个指向其中之一的软连接/dev/RTC，某些程序（比如hwclock）需要使用/dev/RTC。如果不清楚，则选择N。

n        RTC UIE emulation on dev interface：该选项的作用是，如果底层RTC芯片接口没有提供RTC_UIE支持，就仿真一个RTC_UIE。如果不清楚，则选择N。

34）DMA Engine support

从Intel Bensley双核服务器平台开始引入的数据移动加速（Data Movement Acceleration）引擎，它将某些传输数据的操作从CPU转移到专用硬件，从而可以进行异步传输并减轻CPU负载。Intel已将此项技术变为开 放的标准，将来应当会有更多的厂商支持。该选项包括以下子选项。

n        TCP receive copy offload：通过在网络栈中利用DMA引擎来减少接收数据包时的copy-to-user操作，以释放CPU资源，这是DMA引擎目前最主要的用途。如果不清楚，则选择N。

n        Intel I/OAT DMA support：Intel I/O加速技术（Intel I/O Acceleration Technology）中的DMA支持，基于Intel Bensley的新一代服务器平台都支持它。如果不清楚，则选择N
Code maturity level options
代码成熟度选项

Prompt for development and/or incomplete code/drivers 

显示尚在开发中或尚未完成的代码与驱动.除非你是测试人员或者开发者,否则请勿选择 

General setup
常规设置

Local version - append to kernel release 

在内核版本后面加上自定义的版本字符串(小于64字符),可以用"uname -a"命令看到 

Automatically append version information to the version string 

自动在版本字符串后面添加版本信息,编译时需要有perl以及git仓库支持 

Support for paging of anonymous memory (swap) 

使用交换分区或者交换文件来做为虚拟内存 

System V IPC 

System V进程间通信(IPC)支持,许多程序需要这个功能.必选,除非你知道自己在做什么 

IPC Namespaces 

IPC命名空间支持,不确定可以不选 

POSIX Message Queues 

POSIX消息队列,这是POSIX IPC中的一部分 

BSD Process Accounting 

将进程的统计信息写入文件的用户级系统调用,主要包括进程的创建时间/创建者/内存占用等信息 

BSD Process Accounting version 3 file format 

使用新的第三版文件格式,可以包含每个进程的PID和其父进程的PID,但是不兼容老版本的文件格式 

Export task/process statistics through netlink 

通过netlink接口向用户空间导出任务/进程的统计信息,与BSD Process Accounting的不同之处在于这些统计信息在整个任务/进程生存期都是可用的 

Enable per-task delay accounting 

在统计信息中包含进程等候系统资源(cpu,IO同步,内存交换等)所花费的时间 

UTS Namespaces 

UTS名字空间支持,不确定可以不选 

Auditing support 

审计支持,某些内核模块(例如SELinux)需要它,只有同时选择其子项才能对系统调用进行审计 

Enable system-call auditing support 

支持对系统调用的审计 

Kernel .config support 

把内核的配置信息编译进内核中,以后可以通过scripts/extract-ikconfig脚本来提取这些信息 

Enable access to .config through /proc/config.gz 

允许通过/proc/config.gz访问内核的配置信息 

Cpuset support 

只有含有大量CPU(大于16个)的SMP系统或NUMA(非一致内存访问)系统才需要它 

Kernel->user space relay support (formerly relayfs) 

在某些文件系统上(比如debugfs)提供从内核空间向用户空间传递大量数据的接口 

Initramfs source file(s) 

initrd已经被initramfs取代,如果你不明白这是什么意思,请保持空白 

Optimize for size (Look out for broken compilers!) 

编译时优化内核尺寸(使用"-Os"而不是"-O2"参数编译),有时会产生错误的二进制代码 

Enable extended accounting over taskstats 

收集额外的进程统计信息并通过taskstats接口发送到用户空间 

Configure standard kernel features (for small systems) 

配置标准的内核特性(为小型系统) 

Enable 16-bit UID system calls 

允许对UID系统调用进行过时的16-bit包装 

Sysctl syscall support 

不需要重启就能修改内核的某些参数和变量,如果你也选择了支持/proc,将能从/proc/sys存取可以影响内核行为的参数或变量 

Load all symbols for debugging/kksymoops 

装载所有的调试符号表信息,仅供调试时选择 

Include all symbols in kallsyms 

在kallsyms中包含内核知道的所有符号,内核将会增大300K 

Do an extra kallsyms pass 

除非你在kallsyms中发现了bug并需要报告这个bug才打开该选项 

Support for hot-pluggable devices 

支持热插拔设备,如usb与pc卡等,Udev也需要它 

Enable support for printk 

允许内核向终端打印字符信息,在需要诊断内核为什么不能运行时选择 

BUG() support 

显示故障和失败条件(BUG和WARN),禁用它将可能导致隐含的错误被忽略 

Enable ELF core dumps 

内存转储支持,可以帮助调试ELF格式的程序 

Enable full-sized data structures for core 

在内核中使用全尺寸的数据结构.禁用它将使得某些内核的数据结构减小以节约内存,但是将会降低性能 

Enable futex support 

快速用户空间互斥体可以使线程串行化以避免竞态条件,也提高了响应速度.禁用它将导致内核不能正确的运行基于glibc的程序 

Enable eventpoll support 

支持事件轮循的系统调用 

Use full shmem filesystem 

启用shmem支持.shmem是基于共享内存的文件系统(可能用到swap),在启用TMPFS后可以挂载为tmpfs供用户空间使用,它比简单的ramfs先进许多 

Use full SLAB allocator 

使用SLAB完全取代SLOB进行内存分配,SLAB是一种优秀的内存分配管理器,推荐使用 

Enable VM event counters for /proc/vmstat 

允许在/proc/vmstat中包含虚拟内存事件记数器 

Loadable module support
可加载模块支持

Enable loadable module support 

打开可加载模块支持,如果打开它则必须通过"make modules_install"把内核模块安装在/lib/modules/中 

Module unloading 

允许卸载已经加载的模块 

Forced module unloading 

允许强制卸载正在使用中的模块(比较危险) 

Module versioning support 

允许使用其他内核版本的模块(可能会出问题) 

Source checksum for all modules 

为所有的模块校验源码,如果你不是自己编写内核模块就不需要它 

Automatic kernel module loading 

让内核通过运行modprobe来自动加载所需要的模块,比如可以自动解决模块的依赖关系 

Block layer
块设备层

Enable the block layer 

块设备支持,使用硬盘/USB/SCSI设备者必选 

Support for Large Block Devices 

仅在使用大于2TB的块设备时需要 

Support for tracing block io actions 

块队列IO跟踪支持,它允许用户查看在一个块设备队列上发生的所有事件,可以通过blktrace程序获得磁盘当前的详细统计数据 

Support for Large Single Files 

仅在可能使用大于2TB的文件时需要 

IO Schedulers 

IO调度器 

Anticipatory I/O scheduler 

假设一个块设备只有一个物理查找磁头(例如一个单独的SATA硬盘),将多个随机的小写入流合并成一个大写入流,用写入延时换取最大的写入吞吐量.适用于大多数环境,特别是写入较多的环境(比如文件服务器) 

Deadline I/O scheduler 

使用轮询的调度器,简洁小巧,提供了最小的读取延迟和尚佳的吞吐量,特别适合于读取较多的环境(比如数据库) 

CFQ I/O scheduler 

使用QoS策略为所有任务分配等量的带宽,避免进程被饿死并实现了较低的延迟,可以认为是上述两种调度器的折中.适用于有大量进程的多用户系统 

Default I/O scheduler 

默认IO调度器 

Processor type and features
中央处理器(CPU)类型及特性

Symmetric multi-processing support 

对称多处理器支持,如果你有多个CPU或者使用的是多核CPU就选上.此时"Enhanced Real Time Clock Support"选项必须开启,"Advanced Power Management"选项必须关闭 

Subarchitecture Type 

处理器的子架构,大多数人都应当选择"PC-compatible" 

Processor family 

处理器系列,请按照你实际使用的CPU选择 

Generic x86 support 

通用x86支持,如果你的CPU能够在上述"Processor family"中找到就别选 

HPET Timer Support 

HPET是替代8254芯片的新一代定时器,i686及以上级别的主板都支持,可以安全的选上 

Maximum number of CPUs 

支持的最大CPU数,每增加一个内核将增加8K体积 

SMT (Hyperthreading) scheduler support 

支持Intel的超线程(HT)技术 

Multi-core scheduler support 

针对多核CPU进行调度策略优化 

Preemption Model 

内核抢占模式 

No Forced Preemption (Server) 

适合服务器环境的禁止内核抢占 

Voluntary Kernel Preemption (Desktop) 

适合普通桌面环境的自愿内核抢占 

Preemptible Kernel (Low-Latency Desktop) 

适合运行实时程序的主动内核抢占 

Preempt The Big Kernel Lock 

可以抢占大内核锁,应用于实时要求高的场合,不适合服务器环境 

Machine Check Exception 

让CPU检测到系统故障时通知内核,以便内核采取相应的措施(如过热关机等) 

Check for non-fatal errors on AMD Athlon/Duron / Intel Pentium 4 

每5秒检测一次这些cpu的非致命错误并纠正它们,同时记入日志 

check for P4 thermal throttling interrupt 

当P4的cpu过热时显示一条警告消息 

Enable VM86 support 

虚拟X86支持,在DOSEMU下运行16-bit程序或XFree86通过BIOS初始化某些显卡的时候才需要 

Toshiba Laptop support 

Toshiba笔记本模块支持 

Dell laptop support 

Dell笔记本模块支持 

Enable X86 board specific fixups for reboot 

修正某些旧x86主板的重起bug,这种主板基本绝种了 

/dev/cpu/microcode - Intel IA32 CPU microcode support 

使用不随Linux内核发行的IA32微代码,你必需有IA32微代码二进制文件,仅对Intel的CPU有效 

/dev/cpu/*/msr - Model-specific register support 

在多cpu系统中让特权CPU访问x86的MSR寄存器 

/dev/cpu/*/cpuid - CPU information support 

能从/dev/cpu/x/cpuid获得CPU的唯一标识符(CPUID) 

Firmware Drivers 

固件驱动程序 

BIOS Enhanced Disk Drive calls determine boot disk 

有些BIOS支持从某块特定的硬盘启动(如果BIOS不支持则可能无法启动),目前大多数BIOS还不支持 

BIOS update support for DELL systems via sysfs 

仅适用于DELL机器 

Dell Systems Management Base Driver 

仅适用于DELL机器 

High Memory Support 

最高内存支持,总内存小于等于1G的选"off",大于4G的选"64G" 

Memory split 

如果你不是绝对清楚自己在做什么,不要改动这个选项 

Memory model 

一般选"Flat Memory",其他选项涉及内存热插拔 

64 bit Memory and IO resources 

使用64位的内存和IO资源 

Allocate 3rd-level pagetables from highmem 

在内存很多(大于4G)的机器上将用户空间的页表放到高位内存区,以节约宝贵的低端内存 

Math emulation 

数学协处理器仿真,486DX以上的cpu就不要选它了 

MTRR (Memory Type Range Register) support 

打开它可以提升PCI/AGP总线上的显卡2倍以上的速度,并且可以修正某些BIOS错误 

Boot from EFI support 

EFI是一种可代替传统BIOS的技术(目前的Grub/LILO尚不能识别它),但是现在远未普及 

Enable kernel irq balancing 

让内核将irq中断平均分配给多个CPU以进行负载均衡,但是要配合irqbanlance守护进程才行 

Use register arguments 

使用"-mregparm=3"参数编译内核,将前3个参数以寄存器方式进行参数调用,可以生成更紧凑和高效的代码 

Enable seccomp to safely compute untrusted bytecode 

只有嵌入式系统可以不选 

Timer frequency 

内核时钟频率,桌面推荐"1000 HZ",服务器推荐"100 HZ"或"250 HZ" 

kexec system call 

提供kexec系统调用,可以不必重启而切换到另一个内核 

kernel crash dumps 

被kexec启动后产生内核崩溃转储 

Physical address where the kernel is loaded 

内核加载的物理地址,除非你知道自己在做什么,否则不要修改.在提供kexec系统调用的情况下可能要修改它 

Support for hot-pluggable CPUs 

对热插拔CPU提供支持 

Compat VDSO support 

如果Glibc版本大于等于2.3.3就不选,否则就选上 

Power management options
电源管理选项

Power Management support 

电源管理有APM和ACPI两种标准且不能同时使用.即使关闭该选项,X86上运行的Linux也会在空闲时发出HLT指令将CPU进入睡眠状态 

Legacy Power Management API 

传统的电源管理API,比如软关机和系统休眠等接口 

Power Management Debug Support 

仅供调试使用 

Driver model /sys/devices/.../power/state files 

内核帮助文档反对使用该选项,即将被废除 

ACPI (Advanced Configuration and Power Interface) Support 

必须运行acpid守护程序ACPI才能起作用.ACPI是为了取代APM而设计的,因此应该尽量使用ACPI而不是APM 

AC Adapter 

如果你的系统可以在AC和电池之间转换就可以选 

Battery 

通过/proc/acpi/battery向用户提供电池状态信息,用电池的笔记本可以选 

Button 

守护程序捕获Power,Sleep,Lid按钮事件,并根据/proc/acpi/event做相应的动作,软件控制的poweroff需要它 

Video 

仅对集成在主板上的显卡提供ACPI2.0支持,且不是所有集成显卡都支持 

Generic Hotkey 

统一的热键驱动,建议不选 

Fan 

允许通过用户层的程序来对系统风扇进行控制(开,关,查询状态),支持它的硬件并不多 

Dock 

支持由ACPI控制的集线器(docking stations) 

Processor 

让ACPI处理空闲状态,并使用ACPI C2和C3处理器状态在空闲时节省电能,同时它还被cpufreq的"Performance-state drivers"选项所依赖 

Thermal Zone 

系统温度过高时可以利用ACPI thermal zone及时调整工作状态以避免你的CPU被烧毁 

ASUS/Medion Laptop Extras 

ASUS笔记本专用,以提供额外按钮的支持,用户可以通过/proc/acpi/asus来打开或者关闭LCD的背光/调整亮度/定制LED的闪烁指示等功能 

IBM ThinkPad Laptop Extras 

IBM ThinkPad专用 

Toshiba Laptop Extras 

Toshiba笔记本专用 

Disable ACPI for systems before Jan 1st this year 

输入四位数的年份,在该年的1月1日前不使用ACPI的功能("0"表示一直使用) 

Debug Statements 

详细的ACPI调试信息,不搞开发就别选 

Power Management Timer Support 

这个Timer在所有ACPI兼容的平台上都可用,且不会受PM功能的影响,建议总是启用它.如果你在kernel log中看到了'many lost ticks'那就必须启用它 

ACPI0004,PNP0A05 and PNP0A06 Container Driver 

支持内存和CPU的热插拔 

Smart Battery System 

支持依赖于I2C的"智能电池".这种电池非常老旧且罕见,还与当前的ACPI标准兼容性差 

APM (Advanced Power Management) BIOS Support 

APM在SMP机器上必须关闭,一般来说当前的笔记本都支持ACPI,所以应尽量关闭该该选项 

Ignore USER SUSPEND 

只有NEC Versa M系列的笔记本才需要选择这一项 

Enable PM at boot time 

系统启动时即启用APM,选上这个选项能让系统自动的进行电源管理,但常常导致启动时死机 

Make CPU Idle calls when idle 

系统空闲时调用空闲指令(halt),只有老式的CPU才需要选它,且对于SMP系统必须关闭 

Enable console blanking using APM 

在屏幕空白时关闭LCD背光,事实上对所有的笔记本都无效 

RTC stores time in GMT 

将硬件时钟应该设为格林威治时间,否则视为本地时间.建议你使用GMT,这样你无须为时区的改变而担心 

Allow interrupts during APM BIOS calls 

允许APM的BIOS调用时中断,IBM Thinkpad的一些新机器需要这项.如果休眠时挂机(包括睡下去就醒不来),可以试试它 

Use real mode APM BIOS call to power off 

此驱动为某些有Bug的BIOS准备,如果你的系统不能正常关机或关机时崩溃,可以试试它 

CPU Frequency scaling 

允许动态改变CPU主频,达到省电和降温的目的,必须同时启用下面的一种governor才行 

Enable CPUfreq debugging 

允许对CPUfreq进行调试 

CPU frequency translation statistics 

通过sysfs文件系统输出CPU频率变换的统计信息 

CPU frequency translation statistics details 

输出详细的CPU频率变换统计信息 

Default CPUFreq governor 

默认的CPU频率调节器 

'performance' governor 

'性能'优先,静态的将频率设置为cpu支持的最高频率 

'powersave' governor 

'节能'优先,静态的将频率设置为cpu支持的最低频率 

'userspace' governor for userspace frequency scaling 

既允许手动调整cpu频率,也允许用户空间的程序动态的调整cpu频率(需要额外的调频软件,比如cpufreqd) 

'ondemand' cpufreq policy governor 

'立即响应',周期性的考察CPU负载并自动的动态调整cpu频率(不需要额外的调频软件),适合台式机 

'conservative' cpufreq governor 

'保守',和'ondemand'相似,但是频率的升降是渐变式的(幅度不会很大),更适合用于笔记本/PDA/AMD64环境 

ACPI Processor P-States driver 

将ACPI2.0的处理器性能状态报告给CPUFreq processor drivers以决定如何调整频率,该选项依赖于ACPI->Processor 

{省略的部分请按照自己实际使用的CPU选择} 

/proc/acpi/processor/../performance interface 

内核帮助文档反对使用该选项,即将被废除 

Relaxed speedstep capability checks 

放松对系统的speedstep兼容性检查,仅在某些老旧的Intel系统上需要打开 

Bus options (PCI, PCMCIA, EISA, MCA, ISA)
总线选项

PCI support 

PCI支持,如果使用了PCI或PCI Express设备就必选 

PCI access mode 

PCI访问模式,强列建议选"Any"(系统将优先使用"MMConfig",然后使用"BIOS",最后使用"Direct"检测PCI设备) 

PCI Express support 

PCI Express支持(目前主要用于显卡和千兆网卡) 

PCI Express Hotplug driver 

如果你的主板和设备都支持PCI Express热插拔就可以选上 

Use polling mechanism for hot-plug events 

对热插拔事件采用轮询机制,仅用于测试目的 

Root Port Advanced Error Reporting support 

由PCI Express AER驱动程序处理发送到Root Port的错误信息 

Message Signaled Interrupts (MSI and MSI-X) 

充许设备通过PCI总线写入内存堆栈产生一个中断而不是使用默认的IRQ中断,建议不选 

PCI Debugging 

将PCI调试信息输出到系统日志里 

Interrupts on hypertransport devices 

允许本地的hypertransport设备使用中断 

ISA support 

现在基本上没有ISA的设备了,如果你有就选吧 

MCA support 

微通道总线,老旧的IBM的台式机和笔记本上可能会有这种总线 

NatSemi SCx200 support 

在使用AMD Geode处理器的机器上才可能有 

PCCARD (PCMCIA/CardBus) support 

PCMCIA卡(主要用于笔记本)支持 

Enable PCCARD debugging 

仅供调试 

16-bit PCMCIA support 

一些老的PCMCIA卡使用16位的CardBus 

32-bit CardBus support 

当前的PCMCIA卡基本上都是32位的CardBus 

CardBus yenta-compatible bridge support 

使用PCMCIA卡的基本上都需要选择这一项,子项请按照自己实际使用的PCMCIA卡选择 

{省略的部分请按照自己实际使用的PCMCIA卡选择} 

PCI Hotplug Support 

PCI热插拔支持,如果你有这样的设备就到子项中去选吧 

Executable file formats
可执行文件格式

Kernel support for ELF binaries 

ELF是开放平台下最常用的二进制文件格式,支持动态连接,支持不同的硬件平台.除非你知道自己在做什么,否则必选 

Kernel support for a.out and ECOFF binaries 

早期UNIX系统的可执行文件格式,目前已经被ELF格式取代 

Kernel support for MISC binaries 

允许插入二进制的封装层到内核中,使用Java,.NET,Python,Lisp等语言编写的程序时需要它 

Networking
网络

Networking options 

网络选项 

Network packet debugging 

在调试不合格的包时加上额外的附加信息,但在遇到Dos攻击时你可能会被日志淹没 

Packet socket 

这种Socket可以让应用程序(比如tcpdump,iptables)直接与网络设备通讯,而不通过内核中的其它中介协议 

Packet socket: mmapped IO 

让Packet socket驱动程序使用IO映射机制以使连接速度更快 

Unix domain sockets 

一种仅运行于本机上的效率高于TCP/IP的Socket,简称Unix socket.许多程序都使用它在操作系统内部进行进程间通信(IPC),比如X Window和syslog 

Transformation user configuration interface 

为IPsec(可在ip层加密)之类的工具提供XFRM用户配置接口支持 

Transformation sub policy support 

XFRM子策略支持,仅供开发者使用 

PF_KEY sockets 

用于可信任的密钥管理程序和操作系统内核内部的密钥管理进行通信,IPsec依赖于它 

TCP/IP networking 

TCP/IP协议当然要选 

IP: multicasting 

群组广播,似乎与网格计算有关,仅在使用MBONE的时候才需要 

IP: advanced router 

高级路由,如果想做一个路由器就选吧 

IP: policy routing 

策略路由 

IP: equal cost multipath 

用于路由的基于目的地址的负载均衡 

IP: verbose route monitoring 

显示冗余的路由监控信息 

IP: kernel level autoconfiguration 

在内核启动时自动配置ip地址/路由表等,需要从网络启动的无盘工作站才需要这个东西 

IP: tunneling 

IP隧道,将一个IP报文封装在另一个IP报文内的技术 

IP: GRE tunnels over IP 

基于IP的GRE(通用路由封装)隧道 

IP: multicast routing 

多重传播路由 

IP: ARP daemon support 

这东西尚处于试验阶段就已经被废弃了 

IP: TCP syncookie support 

抵抗SYN flood攻击的好东西,要启用它必须同时启用/proc文件系统和"Sysctl support",然后在系统启动并挂载了/proc之后执行"echo 1 >/proc/sys/net/ipv4/tcp_syncookies"命令 

IP: AH transformation 

IPsec验证头(AH)实现了数据发送方的验证处理,可确保数据既对于未经验证的站点不可用也不能在路由过程中更改 

IP: ESP transformation 

IPsec封闭安全负载(ESP)实现了发送方的验证处理和数据加密处理,用以确保数据不会被拦截/查看或复制 

IP: IPComp transformation 

IPComp(IP静荷载压缩协议),用于支持IPsec 

IP: IPsec transport mode 

IPsec传输模式,常用于对等通信,用以提供内网安全.数据包经过了加密但IP头没有加密,因此任何标准设备或软件都可查看和使用IP头 

IP: IPsec tunnel mode 

IPsec隧道模式,用于提供外网安全(包括虚拟专用网络).整个数据包(数据头和负载)都已经过加密处理且分配有新的ESP头/IP头和验证尾,从而能够隐藏受保护站点的拓扑结构 

IP: IPsec BEET mode 

IPsec BEET模式 

INET: socket monitoring interface 

socket监视接口,一些Linux本地工具(如:包含ss的iproute2)需要使用它 

TCP: advanced congestion control 

高级拥塞控制,如果没有特殊需求(比如无线网络)就别选了,内核会自动将默认的拥塞控制设为"Cubic"并将"Reno"作为候补 

IP: Virtual Server Configuration 

IP虚拟服务器允许你基于多台物理机器构建一台高性能的虚拟服务器,不玩集群就别选了 

The IPv6 protocol 

你要是需要IPv6就选吧 

NetLabel subsystem support 

NetLabel子系统为诸如CIPSO与RIPSO之类能够在分组信息上添加标签的协议提供支持,如果你看不懂就别选了 

Security Marking 

对网络包进行安全标记,类似于nfmark,但主要是为安全目的而设计,如果你不明白的话就别选 

Network packet filtering (replaces ipchains) 

Netfilter可以对数据包进行过滤和修改,可以作为防火墙("packet filter"或"proxy-based")或网关(NAT)或代理(proxy)或网桥使用.选中此选项后必须将"Fast switching"关闭,否则将前功尽弃 

Network packet filtering debugging 

仅供开发者调试Netfilter使用 

Bridged IP/ARP packets filtering 

如果你希望使用一个针对桥接的防火墙就打开它 

Core Netfilter Configuration 

核心Netfilter配置(当包流过Chain时如果match某个规则那么将由该规则的target来处理,否则将由同一个Chain中的下一个规则进行匹配,若不match所有规则那么最终将由该Chain的policy进行处理) 

Netfilter netlink interface 

允许Netfilter在与用户空间通信时使用新的netlink接口.netlink Socket是Linux用户态与内核态交流的主要方法之一,且越来越被重视 

Netfilter NFQUEUE over NFNETLINK interface 

通过NFNETLINK接口对包进行排队 

Netfilter LOG over NFNETLINK interface 

通过NFNETLINK接口对包记录.该选项废弃了ipt_ULOG和ebg_ulog机制,并打算在将来废弃基于syslog的ipt_LOG和ip6t_LOG模块 

Layer 3 Independent Connection tracking 

独立于第三层的链接跟踪,通过广义化的ip_conntrack支持其它非IP协议的第三层协议 

Netfilter Xtables support 

如果你打算使用ip_tables,ip6_tables,arp_tables之一就必须选上 

"CLASSIFY" target support 

允许为包设置优先级,一些排队规则(atm,cbq,dsmark,pfifo_fast,htb,prio)需要使用它 

"CONNMARK" target support 

类似于"MARK",但影响的是连接标记的值 

"DSCP" target support 

允许对ip包头部的DSCP(Differentiated Services Codepoint)字段进行修改,该字段常用于Qos 

"MARK" target support 

允许对包进行标记(通常配合ip命令使用),这样就可以改变路由策略或者被其它子系统用来改变其行为 

"NFQUEUE" target Support 

用于替代老旧的QUEUE(iptables内建的target之一),因为NFQUEUE能支持最多65535个队列,而QUEUE只能支持一个 

"NOTRACK" target support 

允许规则指定哪些包不进入链接跟踪/NAT子系统 

"SECMARK" target support 

允许对包进行安全标记,用于安全子系统 

"CONNSECMARK" target support 

针对链接进行安全标记,同时还会将连接上的标记还原到包上(如果链接中的包尚未进行安全标记),通常与SECMARK target联合使用 

"comment" match support 

允许你在iptables规则集中加入注释 

"connbytes" per-connection counter match support 

允许针对单个连接内部每个方向(进/出)匹配已经传送的字节数/包数 

"connmark" connection mark match support 

允许针对每个会话匹配先前由"CONNMARK"设置的标记值 

"conntrack" connection tracking match support 

连接跟踪匹配,是"state"的超集,它允许额外的链接跟踪信息,在需要设置一些复杂的规则(比如网关)时很有用 

"DCCP" protocol match support 

DCCP是打算取代UDP的新传输协议,它在UDP的基础上增加了流控和拥塞控制机制,面向实时业务 

"DSCP" match support 

允许对IP包头的DSCP字段进行匹配 

"ESP" match support 

允许对IPSec包中的ESP头进行匹配,使用IPsec的话就选上吧 

"helper" match support 

加载特定协议的连接跟踪辅助模块,由该模块过滤所跟踪的连接类型的包,比如ip_conntrack_ftp模块 

"length" match support 

允许对包的长度进行匹配 

"limit" match support 

允许根据包的进出速率进行规则匹配,常和"LOG target"配合使用以抵抗某些Dos攻击 

"mac" address match support 

允许根据以太网的MAC进行匹配,常用于无线网络环境 

"mark" match support 

允许对先前由"MARK"标记的特定标记值进行匹配 

IPsec "policy" match support 

使用IPsec就选上吧 

Multiple port match support 

允许对TCP或UDP包同时匹配多个端口(通常情况下只能匹配一个端口) 

"physdev" match support 

允许对到达的或将要离开的物理桥端口进行匹配 

"pkttype" packet type match support 

允许对封包目的地址类别(广播/群播/直播)进行匹配 

"quota" match support 

允许对总字节数的限额值进行匹配 

"realm" match support 

允许对iptables中的路由子系统中的realm值进行匹配 

"sctp" protocol match support 

流控制传输协议(SCTP),十年以后也许能够普及的东西 

"state" match support 

这是对包进行分类的有力工具,它允许利用连接跟踪信息对连接中处于特定状态的包进行匹配 

"statistic" match support 

允许根据一个给定的百分率对包进行周期性的或随机性的匹配 

"string" match support 

允许根据包所承载的数据中包含的特定字符串进行匹配 

"tcpmss" match support 

允许根据TCP SYN包头中的MSS(最大分段长度)选项的值进行匹配 

IP: Netfilter Configuration 

针对IPv4的Netfilter配置 

Connection tracking (required for masq/NAT) 

链接跟踪.可用于报文伪装或地址转换,也可用于增强包过滤能力 

Connection tracking flow accounting 

允许针对每个连接记录已经传送的字节/包数,常用于connbytes match 

Connection mark tracking support 

允许对连接进行标记,与针对单独的包进行标记的不同之处在于它是针对连接流的.CONNMARK target和connmark match需要它的支持 

Connection tracking security mark support 

允许对连接进行安全标记,通常这些标记包(SECMARK)复制到其所属连接(CONNSECMARK),再从连接复制到其关联的包(SECMARK) 

Connection tracking events 

连接跟踪事件支持.如果启用这个选项,连接跟踪代码将提供一个notifier链,它可以被其它内核代码用来获知连接跟踪状态的改变 

Connection tracking netlink interface 

支持基于netlink的用户空间接口 

SCTP protocol connection tracking support 

SCTP是IP网面向多媒体通信的新一代的流控制传输协议 

FTP protocol support 

FTP协议 

IRC protocol support 

IRC协议是一种用来实时聊天协议,用过mIRC的人应当不陌生 

NetBIOS name service protocol support 

NetBIOS名字服务协议 

TFTP protocol support 

TFTP是基于UDP的比FTP简单的文件传输协议 

Amanda backup protocol support 

Amanda备份协议 

PPTP protocol support 

点对点隧道协议(PPTP)是一种支持多协议虚拟专用网络的网络技术,ADSL用户对它应该很熟悉 

H.323 protocol support 

ITU-T提出的用于IP电话的协议 

SIP protocol support 

IETE提出的用于IP电话的协议 

IP Userspace queueing via NETLINK 

已废弃 

IP tables support (required for filtering/masq/NAT) 

要用iptables就肯定要选上 

IP range match support 

允许对ip地址的范围进行匹配 

TOS match support 

允许对ip包头的TOS(Type Of Service)字段进行匹配 

recent match support 

可以创建一个或多个刚刚使用过的ip地址列表,然后根据这些列表进行匹配 

ECN match support 

允许对TCP/IP包头的ECN(Explicit Congestion Notification)字段进行匹配.ECN是一种显式拥塞通知技术,它不但要求路由器支持而且要求端到端主机的支持,其基本思想是当路由器发生早期拥塞时不是丢弃包而是尽量对包进行标记,接收方接到带有ECN提示的包时,通知发送方网络即将发生拥塞,也就是它通过对包的标记提示TCP源即将发生拥塞,从而引发拥塞避免算法 

AH match support 

允许对IPSec包头的AH字段进行匹配 

TTL match support 

允许对ip包头的TTL(生存期)字段进行匹配 

Owner match support 

允许对本地生成的包按照其宿主(user,group,process,session)进行匹配 

address type match support 

允许对地址类型(单播,本地,广播)进行匹配 

hashlimit match support 

是limit的升级,它基于你选择的ip地址与/或端口动态的创建以limit为桶(bucket)的哈希表.它可以创建诸如"为每个特定的目标IP分配10kpps"或"允许每个特定的源IP分配500pps"之类的规则 

Packet filtering 

定义filter表以允许对包进行过滤 

REJECT target support 

允许返回一个ICMP错误而不是简单的丢弃包 

LOG target support 

允许将符合条件的包头信息通过syslog进行记录 

ULOG target support 

透过netlink socket将符合条件的封包交给用户空间的ulogd守护进程.反对使用该选项,因为它已经被NETFILTER_NETLINK_LOG代替 

TCPMSS target support 

允许修改TCP包头中的MSS(最大分段长度)选项值 

Full NAT 

允许进行伪装/端口转发以及其它的NAT功能,仅在你需要使用iptables中的nat表时才需要选择 

Packet mangling 

在iptables中启用mangle表以便对包进行各种修改,常用于改变包的路由 

raw table support (required for NOTRACK/TRACE) 

在iptables中添加一个'raw'表,该表在netfilter框架中非常靠前,并在PREROUTING和OUTPUT链上有钩子,从而可以对收到的数据包在连接跟踪前进行处理 

ARP tables support 

ARP表支持.只有在局域网中才有ARP欺骗问题,另外路由器也会遭到ARP欺骗 

ARP packet filtering 

ARP包过滤.对于进入和离开本地的ARP包定义一个filter表,在桥接的情况下还可以应用于被转发ARP包 

ARP payload mangling 

允许对ARP包的荷载部分进行修改,比如修改源和目标物理地址 

IPv6: Netfilter Configuration 

针对IPv6的Netfilter配置,需要的话可以参考前面IPv4的Netfilter配置进行选择 

DECnet: Netfilter Configuration 

针对DECnet的Netfilter配置 

Bridge: Netfilter Configuration 

针对桥接的Netfilter配置 

DCCP Configuration 

数据报拥塞控制协议在UDP的基础上增加了流控和拥塞控制机制,使数据报协议能够更好地用于流媒体业务的传输 

SCTP Configuration 

流控制传输协议是一种新兴的传输层协议.TCP协议一次只能连接一个IP地址而在SCTP协议一次可以连接多个IP地址且可以自动平衡网络负载,一旦某一个IP地址失效会自动将网络负载转移到其他IP地址上 

TIPC Configuration 

透明内部进程间通信协议,以共享内存为基础实现任务和资源的调度,专门用于内部集群通信 

Asynchronous Transfer Mode (ATM) 

异步传输模式(ATM)支持 

802.1d Ethernet Bridging 

802.1d以太网桥 

802.1Q VLAN Support 

802.1Q虚拟局域网 

DECnet Support 

DECnet是一种很生僻的协议 

ANSI/IEEE 802.2 LLC type 2 Support 

看不懂可以不选 

The IPX protocol 

IPX协议 

Appletalk protocol support 

与Mac机器通信的协议 

CCITT X.25 Packet Layer 

大约没人需要这东西 

LAPB Data Link Driver 

大约没人需要这东西 

Acorn Econet/AUN protocols 

一种被Acorn计算机使用的又老又慢的协议 

WAN router 

广域网路由 

QoS and/or fair queueing 

如果你需要Qos或公平队列就选吧 

Network testing 

网络测试,仅供调试使用 

Amateur Radio support 

业余无线电支持 

IrDA (infrared) subsystem support 

红外线支持,比如无线鼠标或无线键盘 

Bluetooth subsystem support 

蓝牙支持 

Generic IEEE 802.11 Networking Stack 

通用无线局域网(IEEE 802.11系列协议)支持 

Device Drivers
设备驱动程序

Generic Driver Options 

驱动程序通用选项 

Select only drivers that don't need compile-time external firmware 

只显示那些不需要内核对外部设备的固件作map支持的驱动程序,除非你有某些怪异硬件,否则请选上 

Prevent firmware from being built 

不编译固件.固件一般是随硬件的驱动程序提供的,仅在更新固件的时候才需要重新编译.建议选上 

Userspace firmware loading support 

提供某些内核之外的模块需要的用户空间固件加载支持,在内核树之外编译的模块可能需要它 

Driver Core verbose debug messages 

让驱动程序核心在系统日志中产生冗长的调试信息,仅供调试 

Connector - unified userspace <-> kernelspace linker 

统一的用户空间和内核空间连接器,工作在netlink socket协议的顶层.不确定可以不选 

Report process events to userspace 

向用户空间报告进程事件(fork,exec,id变化(uid,gid,suid) 

Memory Technology Devices (MTD) 

特殊的存储技术装置,如常用于数码相机或嵌入式系统的闪存卡 

Parallel port support 

并口支持(传统的打印机接口) 

Plug and Play support 

即插即用支持,若未选则应当在BIOS中关闭"PnP OS".这里的选项与PCI设备无关 

PnP Debug Messages 

该选项仅供调试使用 

ISA Plug and Play support 

ISA设备即插即用支持 

Plug and Play BIOS support 

Linux使用"Plug and Play BIOS"规范v1.0A(1994年)中定义的PNPBIOS自动检测主板上的资源和设备,但是其中的某些特性目前尚未实现,比如:事件通知/扩展坞(Docking Station)信息/ISAPNP服务.如果你希望由内核检测主板上的设备并为其分配资源(此时BIOS中的"PnP OS"必须开启)可以选上,此外,PNPBIOS还有助于防止主板上的设备与其他总线设备冲突.不过需要注意的是ACPI将会逐渐取代PNPBIOS(虽然目前两者可以共存),所以如果你的系统不使用ISA设备并且支持ACPI,建议你不要选中该选项并将BIOS中的"PnP OS"关闭 

Plug and Play BIOS /proc interface 

该选项仅供调试使用 

Plug and Play ACPI support 

让Linux使用PNPACPI自动检测主板上内建的设备并为其分配资源(即使这些设备已被BIOS禁用),它有助于避免设备之间的资源(如中断)冲突 

Block devices 

块设备 

Normal floppy disk support 

通用软驱支持 

XT hard disk support 

古董级产品 

Parallel port IDE device support 

通过并口与计算机连接的IDE设备,比如某些老旧的外接光驱或硬盘之类 

Compaq SMART2 support 

基于Compaq SMART2控制器的磁盘阵列卡 

Compaq Smart Array 5xxx support 

基于Compaq SMART控制器的磁盘阵列卡 

Mylex DAC960/DAC1100 PCI RAID Controller support 

古董级产品 

Micro Memory MM5415 Battery Backed RAM support 

一种使用电池做后备电源的内存 

Loopback device support 

Loopback是指拿文件来模拟块设备,比如可以将一个iso9660镜像文件挂成一个文件系统 

Cryptoloop Support 

使用系统提供的加密API对Loopback设备加密,但不能用于日志型文件系统 

Network block device support 

让你的电脑成为网络块设备的客户端 

Promise SATA SX8 support 

基于Promise公司的SATA SX8控制器的RAID卡 

Low Performance USB Block driver 

它不是用来支持U盘的,不懂的就别选 

RAM disk support 

内存中的虚拟磁盘,大小固定(由下面的选项决定,也可给内核传递"ramdisk_size=参数"来决定),它的功能和代码都比shmem简单许多 

Default number of RAM disks 

默认RAM disk的数量 

Default RAM disk size (kbytes) 

仅在你真正知道它的含义时才允许修改 

Default RAM disk block size (bytes) 

每一个RAM disk的默认块大小,设为PAGE_SIZE的值时效率最高 

Initial RAM filesystem and RAM disk (initramfs/initrd) support 

如果启动计算机所必须的模块都在内核里的话可以不选此项 

Packet writing on CD/DVD media 

CD/DVD刻录支持 

Free buffers for data gathering 

用于收集写入数据的缓冲区个数(每个占用64Kb内存),缓冲区越多性能越好 

Enable write caching 

为CD-R/W设备启用写入缓冲,目前这是一个比较危险的选项 

ATA over Ethernet support 

以太网ATA设备支持 

Misc devices 

杂项设备 

ATA/ATAPI/MFM/RLL support 

通常是IDE硬盘和ATAPI光驱.纯SCSI系统且不使用这些接口可以不选 

Max IDE interfaces 

最大IDE接口数,两个IDE插槽一般相当于4个接口 

Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support 

EIDE支持是当然要选的,否则540MB以上的硬盘都不认识而且不支持主从设备 

Support for SATA (deprecated; conflicts with libata SATA driver) 

反对使用,该选项与libata SATA驱动有冲突 

Use old disk-only driver on primary interface 

没人用这些古董了 

Include IDE/ATA-2 DISK support 

ATA-2支持,除非你的硬盘是古董,否则必选 

Use multi-mode by default 

如果不确定就别选,除非出现帮助中指出的错误 

PCMCIA IDE support 

通过PCMCIA卡与计算机连接的IDE设备,比如某些外置硬盘或光驱 

Include IDE/ATAPI CDROM support 

有IDE光驱的就选 

Include IDE/ATAPI TAPE support 

有IDE磁带的就选 

Include IDE/ATAPI FLOPPY support 

有IDE软驱的就选 

SCSI emulation support 

SCSI仿真,以前刻录光碟时需要,现在不需要了 

IDE Taskfile Access 

对介质进行直接的原始访问,它是一个复杂且有效的测试和校验硬件的方案,可以在驱动层之下执行数据恢复工作 

generic/default IDE chipset support 

通用IDE芯片组支持 

CMD640 chipset bugfix/support 

586以前的主板上常用,毛病多多 

PNP EIDE support 

外接的即插即用EIDE卡支持 

PCI IDE chipset support 

基于PCI总线的IDE芯片组支持,帮助IDE驱动自动检测和配置所有基于PCI的IDE接口 

Sharing PCI IDE interrupts support 

与其他PCI设备共享中断,一来可能冲突,二来降低性能,不选为妙 

Boot off-board chipsets first support 

不使用外接IDE控制器的就别选,使用外接IDE控制器的注意看帮助 

Generic PCI IDE Chipset Support 

通用的PCI IDE芯片组支持,如果你的芯片组在下面能找到就别选 

OPTi 82C621 chipset enhanced support 

OPTi 82C621 EIDE控制器 

RZ1000 chipset bugfix/support 

486/586年代的玩艺 

Generic PCI bus-master DMA support 

通用的PCI总线控制器DMA支持,586以上的系统都支持 

Force enable legacy 2.0.X HOSTS to use DMA 

历史遗留问题,别管它,不选 

Use PCI DMA by default when available 

默认启用DMA,586以上的系统都支持,建议选择 

Enable DMA only for disks 

只对硬盘启用DMA,若你的光驱不支持DMA就选上 

{此处省略的部分按照自己主板上实际使用的芯片组进行选择} 

Other IDE chipset support 

其它IDE芯片组支持(多数需要在引导时指定特定的内核参数),如果你使用这样的芯片组就按实际情况选择子项吧 

IGNORE word93 Validation BITS 

ATA-4和ATA-5规范中对于如何在80针的数据线上探测解释的不明确,导致了两种不同标准的产品同时出现,这可能导致ATA-66/100降低为ATA-33,若出现这个问题,可以打开这个选项忽略这种不同,但是又有可能导致另外的问题 

Old hard disk (MFM/RLL/IDE) driver 

旧版本的MFM/RLL/IDE驱动,不建议使用 

SCSI device support 

SCSI设备 

RAID Transport Class 

用于SCSI设备的软件RAID支持,需要配合外部工具 

SCSI device support 

有任何SCSI/SATA/USB/光纤/FireWire/IDE-SCSI仿真设备之一就必须选上 

legacy /proc/scsi/ support 

一些老的刻录程序可能需要它 

SCSI disk support 

SCSI硬盘或U盘 

SCSI tape support 

SCSI磁带 

SCSI OnStream SC-x0 tape support 

另一种SCSI磁带 

SCSI CDROM support 

SCSI CDROM 

Enable vendor-specific extensions 

仅在古董级的SCSI CDROM设备上才需要 

SCSI generic support 

若有SCSI硬盘/CD-ROM/tape之外的SCSI设备才需要选择 

SCSI media changer support 

一种SCSI备份设备 

Probe all LUNs on each SCSI device 

在每个SCSI设备上探测逻辑设备数.只在一个SCSI设备上有多个逻辑设备(模拟多个SCSI设备,比如多口读卡器)时才需要选它,一般的SCSI设备不需要 

Verbose SCSI error reporting 

以易读的方式报告SCSI错误,内核将会增大12K 

SCSI logging facility 

启用SCSI日志(默认并不开启,需要在挂载/proc后执行echo "scsi log token [level]" > /proc/scsi/scsi命令才能打开日志),可用于跟踪和捕获SCSI设备的错误 

SCSI Transports 

SCSI接口类型,下面的子项可以全不选,内核中若有其他部分依赖它,会自动选上 

Parallel SCSI (SPI) Transport Attributes 

传统且常见的并行SCSI(Ultra320/160之类) 

FiberChannel Transport Attributes 

光纤通道 

iSCSI Transport Attributes 

iSCSI是利用TCP/IP网络传送SCSI命令和数据的I/O技术 

SAS Transport Attributes 

串行SCSI传输属性支持(SAS对于的关系SPI犹如SATA对于ATA) 

SAS Domain Transport Attributes 

为使用了SAS Domain的驱动程序提供帮助 

Compile the SAS Domain Transport Attributes in debug mode 

仅供调试使用 

SCSI low-level drivers 

底层SCSI驱动程序,按你实际使用的产品选择 

iSCSI Initiator over TCP/IP 

用于iSCSI在TCP/IP网络上传播的起动程序 

{此处省略的部分按照自己实际使用的控制器进行选择,仅用一个例子解说子项} 

Adaptec AIC79xx U320 support 

以基于PCI-X的Adaptec Ultra 320 SCSI控制器为例解说子项 

Maximum number of TCQ commands per device 

每个SCSI设备的标记指令队列的最大长度(上限253).上限越高性能越好,但是对于SCSI设备较多的系统来说可能造成内存分配失败.此值还可以通过tag_info内核引导参数指定 

Initial bus reset delay in milli-seconds 

初始总线reset之后的延时微秒数(默认5000) 

Enable Read Streaming for All Targets 

对所有的标记队列启用Read Streaming(可以增强效能,但是在一些Adaptec早期的U320产品上有缺陷),此特性还可以通过rd_strm内核引导参数指定 

Compile in Debugging Code 

仅用于调试 

Debug code enable mask (16383 for all debugging) 

出错代码的掩码,0表示禁止所有,16383表示打开所有 

Decode registers during diagnostics 

将出错代码的解释内容编译进去,这样就不需要查看aic7xxx.reg中的出错代码表以确定出错代码的含意了 

PCMCIA SCSI adapter support 

通过PCMCIA卡与计算机连接的SCSI设备 

Serial ATA and Parallel ATA drivers 

SATA与PATA设备 

ATA device support 

SATA或PATA接口的硬盘或光驱等设备 

AHCI SATA support 

SATA高级主机控制器接口.要使用NCQ功能就必须选中它,另外BIOS中的SATA工作模式亦要选AHCI模式 

Generic ATA support 

基于新的ATA层的通用ATA控制器驱动,仅在你的芯片组在列表中找不到时才需要 

{此处省略的部分按照自己主板上实际使用的芯片组进行选择} 

Old CD-ROM drivers (not SCSI, not IDE) 

老旧的CD-ROM驱动,这种CD-ROM既不使用SCSI接口,也不使用IDE接口 

Multi-device support (RAID and LVM) 

多设备支持(RAID和LVM).RAID和LVM的功能是使多个物理设备组建成一个单独的逻辑磁盘 

RAID support 

软件RAID(需要使用外部工具),若你有硬件RAID控制器,可以不选 

Linear (append) mode 

追加模式(简单的将一个分区追加在另一个分区之后) 

RAID-0 (striping) mode 

RAID-0(等量分割)模式 

RAID-1 (mirroring) mode 

RAID-1(镜像)模式 

RAID-10 (mirrored striping) mode 

RAID 0 1模式 

RAID-4/RAID-5/RAID-6 mode 

这些模式比较复杂,一般不用 

Support adding drives to a raid-5 array 

RAID-5阵列可以通过添加额外的驱动器进行扩展(restriping),这个选项允许在线进行这样的操作,同时要求mdadm的版本大于2.4.1 

Multipath I/O support 

多路IO支持是指在服务器和存储设备之间使用冗余的物理路径组件创建"逻辑路径",如果这些组件发生故障并造成路径失败,多路径逻辑将为I/O使用备用路径以使应用程序仍然可以访问其数据 

Faulty test module for MD 

用于MD(Multi-device)的缺陷测试模块 

Device mapper support 

Device-mapper是一个底层的卷管理器,不用LVM就别选了 

Fusion MPT device support 

Fusion MPT设备支持 

IEEE 1394 (FireWire) support 

IEEE 1394(火线) 

I2O device support 

I2O(智能IO)设备使用专门的I/O处理器负责中断处理/缓冲存取/数据传输等烦琐任务以减少CPU占用,一般的主板上没这种东西 

Network device support 

网络设备 

Network device support 

网络设备支持,当然要选啦 

Intermediate Functional Block support 

这是一个中间层驱动,可以用来灵活的配置资源共享,看不懂的可以不选 

Dummy net driver support 

哑接口网络,使用SLIP或PPP传输协议(如ADSL用户)的需要它 

Bonding driver support 

将多个以太网通道绑定为一个,也就是两块网卡具有相同的IP地址并且聚合成一个逻辑链路工作,可以用来实现负载均衡或硬件冗余 

EQL (serial line load balancing) support 

串行线路的负载均衡.如果有两个MODEM和两条电话线而且用SLIP或PPP协议,该选项可以让您同时使用这两个MODEM以达到双倍速度(在网络的另一端也要有同样的设备) 

Universal TUN/TAP device driver support 

TUN/TAP可以为用户空间提供包的接收和发送服务,比如可以用来虚拟一张网卡或点对点通道 

General Instruments Surfboard 1000 

SURFboard 1000插卡式Cable Medem(ISA接口),这玩意大概早就绝种了 

ARCnet devices 

一般人没有ARCnet类型的网卡 

PHY device support 

数据链路层芯片简称为MAC控制器,物理层芯片简称之为PHY,通常的网卡把MAC和PHY的功能做到了一颗芯片中,但也有一些仅含PHY的"软网卡" 

Ethernet (10 or 100Mbit) 

目前最广泛的10/100M网卡 

Ethernet (1000 Mbit) 

目前已成装机主流的1000M网卡 

Ethernet (10000 Mbit) 

万兆网卡无福消受啦 

Token Ring devices 

令牌环网设备 

Wireless LAN (non-hamradio) 

无线LAN 

PCMCIA network device support 

PCMCIA或CardBus网卡 

Wan interfaces 

WAN接口 

ATM drivers 

异步传输模式 

FDDI driver support 

光纤分布式数据接口 

HIPPI driver support 

HIPPI(高性能并行接口)是一个在短距离内高速传送大量数据的点对点协议 

PLIP (parallel port) support 

将并口映射成网络设备,这样两台机器即使没有网卡也可以使用并口通过并行线传输IP数据包 

PPP (point-to-point protocol) support 

点对点协议,PPP已经基本取代SLIP了,用ADSL的可要仔细选择了 

PPP multilink support 

多重链路协议(RFC1990)允许你将多个线路(物理的或逻辑的)组合为一个PPP连接一充分利用带宽,这不但需要pppd的支持,还需要ISP的支持 

PPP filtering 

允许对通过PPP接口的包进行过滤 

PPP support for async serial ports 

通过标准异步串口(COM1,COM2)使用PPP,比如使用老式的外置modem(非同步modem或ISDN modem)上网 

PPP support for sync tty ports 

通过同步tty设备(比如SyncLink适配器)使用PPP,常用于高速租用线路(比如T1/E1) 

PPP Deflate compression 

为PPP提供Deflate(等价于gzip压缩算法)压缩算法支持,需要通信双方的支持才有效 

PPP BSD-Compress compression 

为PPP提供BSD(等价于LZW压缩算法,没有gzip高效)压缩算法支持,需要通信双方的支持才有效 

PPP MPPE compression (encryption) 

为PPP提供MPPE加密协议支持,它被用于微软的P2P隧道协议中 

PPP over Ethernet 

这就是ADSL用户最常见的PPPoE啦,也就是在以太网上跑的PPP协议 

PPP over ATM 

在ATM上跑的PPP 

SLIP (serial line) support 

一个在串行线上(例如电话线)传输IP数据报的TCP/IP协议.小猫一族的通讯协议,与宽带用户无关 

CSLIP compressed headers 

CSLIP协议比SLIP快,它将TCP/IP头(而非数据)进行压缩传送,需要通信双方的支持才有效 

Keepalive and linefill 

让SLIP驱动支持RELCOM linefill和keepalive监视,这在信号质量比较差的模拟线路上是个好主意 

Six bit SLIP encapsulation 

这种线路非常罕见,不要选它 

Fibre Channel driver support 

光纤通道 

Traffic Shaper 

流量整形,已废弃 

Network console logging support 

通过网络记录内核信息 

Netpoll support for trapping incoming packets 

不知道Netpoll是什么的可以不选 

Netpoll traffic trapping 

不知道Netpoll是什么的可以不选 

ISDN subsystem 

综合业务数字网(Integrated Service Digital Network) 

Telephony Support 

VoIP支持 

Input device support 

输入设备 

Generic input layer (needed for keyboard,mouse...) 

通用输入层,要使用键盘鼠标的就必选 

Support for memoryless force-feedback devices 

游戏玩家使用的力反馈设备 

Mouse interface 

鼠标接口 

Provide legacy /dev/psaux device 

仍然支持作为传统的/dev/psaux设备 

Horizontal screen resolution 

数字化转换器或图形输入板的水平分辩率 

Vertical screen resolution 

数字化转换器或图形输入板的垂直分辨率 

Joystick interface 

游戏杆 

Touchscreen interface 

触摸屏 

Event interface 

能够利用/dev/input/eventX来存取输入设备的事件 

Event debugging 

该选项仅供调试 

Keyboards 

键盘驱动,一般选个AT键盘即可 

Mouse 

鼠标驱动,一般选个PS/2鼠标即可 

Joysticks 

游戏杆驱动 

Touchscreens 

触摸屏驱动 

Miscellaneous devices 

其他杂项驱动,一般选个PC喇叭即可 

Hardware I/O ports 

硬件I/O端口 

Serial I/O support 

使用PS/2键盘或鼠标的就必选 

i8042 PC Keyboard controller 

PS/2接口的键盘和鼠标 

Serial port line discipline 

串口键盘或鼠标 

ct82c710 Aux port controller 

一种德州仪器TravelMate笔记本上使用QuickPort接口的鼠标 

Parallel port keyboard adapter 

并口键盘或鼠标 

PCI PS/2 keyboard and PS/2 mouse controller 

接在移动式扩展坞(Docking station)上的键盘或鼠标 

PS/2 driver library 

为PS/2接口上的设备提供驱动(比如PS/2鼠标或标准AT键盘) 

Raw access to serio ports 

不是hacker就别选了 

Gameport support 

就是早年"小霸王"游戏机上的那种手柄 

Character devices 

字符设备 

Virtual terminal 

虚拟终端.除非是嵌入式系统,否则必选 

Support for console on virtual terminal 

内核将一个虚拟终端用作系统控制台(将诸如模块错误/内核错误/启动信息之类的警告信息发送到这里,通常是第一个虚拟终端).除非是嵌入式系统,否则必选 

Support for binding and unbinding console drivers 

虚拟终端是通过控制台驱动程序与物理终端相结合的,但在某些系统上可以使用多个控制台驱动程序(如framebuffer控制台驱动程序),该选项使得你可以选择其中之一 

Non-standard serial port support 

非标准串口支持.这样的设备早就绝种了 

Serial drivers 

串口驱动.如果你有老式的串口鼠标或小猫之类的就选吧 

Unix98 PTY support 

伪终端(PTY)可以模拟一个终端,它由slave(等价于一个物理终端)和master(被一个诸如xterms之类的进程用来读写slave设备)两部分组成的软设备.使用telnet或ssh远程登录者必选 

Legacy (BSD) PTY support 

使用过时的BSD风格的/dev/ptyxx作为master,/dev/ttyxx作为slave,这个方案有一些安全问题,建议不选 

Parallel printer support 

并口打印机 

Support for console on line printer 

允许将内核信息输出到并口,这样就可以打印出来 

Support for user-space parallel port device drivers 

/dev/parport设备支持,比如deviceid之类的程序需要使用它,大部分人可以关闭该选项 

Texas Instruments parallel link cable support 

德州仪器生产的一种使用并行电缆的图形计算器,如果你不知道这是什么设备就别选了 

IPMI 

可以利用IPMI远程监视服务器的物理特征(温度,电压,风扇,电源,机箱入侵),它是独立于CPU,BIOS,OS的,只要接通电源就可以实现对服务器的监控 

IPMI top-level message handler 

IPMI消息处理器,要启用IPMI远程监视这个就必选 

Generate a panic event to all BMCs on a panic 

当发生紧急情况(panic)时,IPMI消息处理器将会向每一个已注册的底板管理控制器(BMC)接口生成一个描述该panic的IPMI事件,这些事件可以引发日志记录/报警/重启/关机等动作 

Generate OEM events containing the panic string 

当发生紧急情况(panic)时,IPMI消息处理器将会产生OEM类型的事件 

Device interface for IPMI 

为IPMI消息处理器提供一个IOCTL接口已便用户空间的进程也可以使用IPMI 

IPMI System Interface handler 

向系统提供接口(KCS,SMIC),一般你用了IPMI就需要选上 

IPMI Watchdog Timer 

启用IPMI Watchdog定时器 

IPMI Poweroff 

允许IPMI消息处理器关闭机器 

Watchdog Cards 

能让系统在出现致命故障后自动重启,如果没有硬件Watchdog,建议使用Hangcheck timer而不是软件Watchdog 

Watchdog Timer Support 

选中它并选中下面的一个Driver之后,再创建一个/dev/watchdog节点即可拥有一只Watchdog了.更多信息请参考内核帮助 

Disable watchdog shutdown on close 

一旦Watchdog启动后就禁止将其停止 

Software watchdog 

软件Watchdog,使用它不需要有任何硬件的支持,但是可靠性没有硬件Watchdog高 

{此处省略的硬件Watchdog部分请按照自己主板实际使用的芯片(可能在南桥中)进行选择} 

Hardware Random Number Generator Core support 

硬件随机数发生器核心支持 

Intel HW Random Number Generator support 

Intel芯片组的硬件随机数发生器 

AMD HW Random Number Generator support 

AMD芯片组的硬件随机数发生器 

AMD Geode HW Random Number Generator support 

AMD Geode LX的硬件随机数发生器 

VIA HW Random Number Generator support 

VIA芯片组的硬件随机数发生器 

/dev/nvram support 

直接存取主板上CMOS的接口,太危险了!建议别选 

Enhanced Real Time Clock Support 

启用该选项并创建/dev/rtc文件后就可以通过/proc/driver/rtc访问系统的硬件时钟(RTC),众多功能依赖于它(如SMP,IRQ共享,定时器),建议选择 

Double Talk PC internal speech card support 

由RC Systems公司制造的一种语音合成器 

Siemens R3964 line discipline 

与使用西门子R3964协议的设备同步通信,除非你有一些诸如PLC之类的特殊设备,否则别选 

Applicom intelligent fieldbus card support 

Applicom international公司生产的用于现场总线连接卡 

Sony Vaio Programmable I/O Control Device support 

Sony VAIO笔记本上的东西 

Ftape, the floppy tape device driver 

还使用磁带的就选吧 

/dev/agpgart (AGP Support) 

AGP总线支持,有AGP显卡的还必须从子项中选取符合自己显卡型号的驱动 

Direct Rendering Manager 

DRI允许应用程序以高效安全的方式直接访问图形处理,主要用于硬件3D加速.桌面用户建议选择,同时还必须从子项中选取符合自己显卡型号的驱动 

PCMCIA character devices 

使用PCMCIA接口的字符设备,如果你有这种设备就到子项中去选吧 

ACP Modem (Mwave) support 

IBM Thinkpad上的一种软猫,古董产品 

NatSemi SCx200 GPIO Support 

松下的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 

NatSemi PC8736x GPIO Support 

松下的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 

NatSemi Base GPIO Support 

松下的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 

AMD CS5535/CS5536 GPIO 

常用于AMD Geode的一种通用输入输出(GPIO)芯片,常用于嵌入式系统 

RAW driver (/dev/raw/rawN) 

已废弃 

HPET - High Precision Event Timer 

高精度事件定时器 

Allow mmap of HPET 

允许对HPET寄存器进行映射,建议选中 

Hangcheck timer 

宕机检测定时器周期性地检查系统任务调度程序以确定系统的运行状况,如果超过阈值,计算机将重新启动.它通常可以比Watchdog更好地解决可用性和可靠性问题 

TPM devices 

基于硬件的"可信赖平台模块",与数字霸权管理是一路货,全不选 

Telecom clock driver for MPBL0010 ATCA SBC 

没见过这种硬件,不选 

I2C support 

I2C是Philips极力推动的微控制应用中使用的低速串行总线协议,可用于监控电压/风扇转速/温度等.SMBus(系统管理总线)是I2C的子集.除硬件传感器外"Video For Linux"也需要该模块的支持 

I2C device interface 

I2C设备接口,允许用户空间的程序通过/dev/i2c-*设备文件使用I2C总线 

I2C Algorithms 

I2C算法,可以全不选,若有其他部分依赖其子项时,会自动选上 

I2C Hardware Bus support 

按实际硬件情况选对应的子项即可 

Miscellaneous I2C Chip support 

其他不常见的产品,按需选择 

I2C Core debugging messages 

仅供调试 

I2C Algorithm debugging messages 

仅供调试 

I2C Bus debugging messages 

仅供调试 

I2C Chip debugging messages 

仅供调试 

SPI support 

串行外围接口(SPI)常用于微控制器(MCU)与外围设备(传感器,eeprom,flash,编码器,模数转换器)之间的通信,比如MMC和SD卡就通常需要使用SPI 

Dallas's 1-wire bus 

一线总线 

Hardware Monitoring support 

当前主板大多都有一个监控硬件健康的设备用于监视温度/电压/风扇转速等,请按照自己主板实际使用的芯片选择相应的子项.另外,该功能还需要I2C的支持 

Multimedia devices 

多媒体设备 

Video For Linux 

要使用音频/视频设备或FM收音卡的就必选,此功能还需要I2C的支持 

Enable Video For Linux API 1 

使用老旧的V4L第一版API,反对使用 

Enable Video For Linux API 1 compatible Layer 

提供对第一版V4L的兼容,建议不选 

Video Capture Adapters 

视频捕获卡 

Enable advanced debug functionality 

该选项仅供调试 

Autoselect pertinent encoders/decoders and other helper chips 

为视频卡自动选择所需的编码和解码模块,建议选择 

Virtual Video Driver 

虚拟视频卡,仅供测试视频程序和调试 

SAA5246A, SAA5281 Teletext processor 

该选项仅对欧洲用户有意义,中国用户不需要 

SAA5249 Teletext processor 

该选项仅对欧洲用户有意义,中国用户不需要 

{此处省略的硬件请按照自己实际使用的芯片进行选择} 

V4L USB devices 

使用USB接口的视频卡,子项请按照自己实际使用的视频卡选择 

Radio Adapters 

音频卡,子项请按照自己实际使用的音频卡选择 

Digital Video Broadcasting Devices 

数字视频广播设备(DVB卡或机顶盒),子项请按自己实际使用的硬件选择 

DABUSB driver 

USB接口的数字音频广播设备接收器 

Graphics support 

图形设备/显卡支持 

Enable firmware EDID 

允许访问Video BIOS中的扩展显示器识别数据(EDID),使用Matrox显卡的建议关闭,建议桌面用户选择 

Support for frame buffer devices 

帧缓冲设备是为了让应用程序使用统一的接口操作显示设备而对硬件进行的抽象,建议桌面用户选择 

Enable Video Mode Handling Helpers 

使用GTF和EDID来帮助处理显示模式,可以不选,若有其他选项依赖于它时,会自动选上 

Enable Tile Blitting Support 

可以不选,若有其他选项依赖于它时,会自动选上 

VGA 16-color graphics support 

16色VGA显卡.如果你有这种古董就选吧 

VESA VGA graphics support 

符合VESA 2.0标准的显卡的通用驱动,如果显卡芯片在下面能够找到就可以不选 

{此处省略的硬件请按照自己实际使用的显卡芯片进行选择} 

Virtual Frame Buffer support 

仅供调试使用 

Console display driver support 

控制台显示驱动 

VGA text console 

文本控制台,必选 

Enable Scrollback Buffer in System RAM 

在内存中开辟额外的屏幕缓冲区,这将允许你回滚屏幕 

Scrollback Buffer Size (in KB) 

在内存中开辟的额外屏幕缓冲区大小 

Video mode selection support 

允许在内核启动时使用"vga="选择文本模式,如果你希望一行能够显示更多字符的话可以打开它 

MDA text console (dual-headed) 

如果你有古董级别的单色显卡并且作为第二块显卡使用以实现双头显示就选上吧 

Framebuffer Console support 

基于framebuffer的控制台驱动,服务器可以不选 

Framebuffer Console Rotation 

显示画面旋转,它可能大大降低显示速度,建议不选 

Select compiled-in fonts 

选择内建字体 

VGA 8x8 font 

高分辨率下的小字体 

VGA 8x16 font 

底分辨率下的大字体 

{其它字体省略} 

Logo configuration 

启动时显示linux的logo(一幅企鹅图像),喜欢炫一下的就选吧 

Backlight & LCD device support 

LCD显示器支持,一般无需选择 

Sound 

声卡 

Advanced Linux Sound Architecture 

使用声卡者必选 

Sequencer support 

音序器支持(MIDI必需),除非你确定不需要,否则请选上 

Sequencer dummy client 

除非你要同时连接到多个MIDI设备或应用程序,否则请不要选择 

OSS Mixer API 

OSS混音器API仿真,许多程序目前仍然需要使用它,建议选择 

OSS PCM (digital audio) API 

OSS数字录音(PCM)API模拟,许多程序目前仍然需要使用它,建议选择 

OSS PCM (digital audio) API - Include plugin system 

建议不选 

OSS Sequencer API 

OSS音序器支持,许多程序目前仍然需要使用它,建议选择 

RTC Timer support 

为ALSA启用RTC定时器支持,建议选择 

Use RTC as default sequencer timer 

将RTC当作默认的时序脉冲发生器 

Dynamic device file minor numbers 

仅供拥有多个声卡的用户选择 

Support old ALSA API 

支持已被废弃的老版本ALSA API 

Verbose procfs contents 

仅供调试使用 

Verbose printk 

仅供调试使用 

Debug 

仅供调试使用 

Generic devices 

通用设备 

Dummy (/dev/null) soundcard 

仅供调试 

Virtual MIDI soundcard 

虚拟MIDI驱动,允许将使用原始MIDI设备的应用程序连接到音序器客户端,如果你不知道MIDI是什么就别选 

{此处省略的硬件请按照自己实际使用的声卡芯片进行选择} 

PCI devices 

PCI接口的声卡,请按实际使用的声卡选择子项 

USB devices 

USB接口的声卡,请按实际使用的声卡选择子项 

PCMCIA devices 

PCMCIA接口的声卡,请按实际使用的声卡选择子项 

Open Sound System 

反对使用 

USB support 

USB支持 

Support for Host-side USB 

主机端(Host-side)USB支持.通用串行总线(USB)是一个串行总线子系统规范,它比传统的串口速度更快并且特性更丰富(供电,热插拔,最多可接127个设备等),有望在将来一统PC外设接口.USB的"Host"(主机)被称为"根"(也可以理解为是主板上的USB控制器),外部设备被称为"叶子",而内部的节点则称为"hub"(集线器).基本上只要你想使用任何USB设备都必须选中此项.另外,你还需要从下面选中至少一个"Host Controller Driver"(HCD),比如适用于USB1.1的"UHCI HCD support"或"OHCI HCD support",适用于USB2.0的"EHCI HCD (USB 2.0) support".如果你拿不准的话把他们全部选中一般也不会出问题.如果你的系统有设备端的USB接口(也就是你的系统可以作为"叶子"使用),请到"USB Gadget"中进行选择. 

USB verbose debug messages 

仅供调试使用 

USB device filesystem 

在/proc/bus/usb里列出当前连接的usb设备(mount -t usbfs none /proc/bus/usb),这样用户空间的程序就可以直接访问这些USB设备,基本上你要使用USB设备的话就必须选中此项 

Enforce USB bandwidth allocation 

执行usb带宽分配限制,禁止打开占用usb总线带宽超过90%的设备,关闭该选项可能会导致某些设备无法正常工作 

Dynamic USB minor allocation 

除非你有超过16个同类型的USB设备,否则不要选择 

USB selective suspend/resume and wakeup 

usb设备的挂起和恢复,毛病多多且许多设备尚未支持它,建议不选 

EHCI HCD (USB 2.0) support 

USB 2.0支持(大多数2002年以后的主板都支持).如果你选中了此项,一般来说你还需要选中OHCI或UHCI驱动 

Full speed ISO transactions 

由于USB 2.0支持低速(1.5Mbps)/全速(12Mbps)/高速(480Mbps)三种规格的外部设备,为了将全/低速设备对高速设备可用带宽的影响减到最小,在USB2.0集线器中提供了一种事务转换(Transaction Translator)机制,该机制支持在Hub连接的是全/低速设备的情况下,允许主控制器与Hub之间以高速传输所有设备的数据,从而节省不必要的等待.如果你没有外置的USB集线器就无需选择 

Root Hub Transaction Translators 

带有USB 2.0接口的主板上都有一个"根集线器"(Root Hub)以允许在无需额外购买hub的情况下就可以提供多个USB插口,其中的某些产品还在其中集成了事务转换(Transaction Translator)功能,这样就不需要再额外使用一个兼容OHCI或UHCI的控制器来兼容USB 1.1,即使你不太清楚自己主板上的根集线器是否集成了事务转换功能也可以安全的选中此项 

Improved Transaction Translator scheduling 

如果你有一个高速USB 2.0 hub并且某些接在这个hub上的低速或全速设备不能正常工作(显示'cannot submit datapipe: error -28'或'error -71'错误),可以考虑选上 

ISP116X HCD support 

ISP1160/ISP1161主机USB控制器,是符合USB2.0全速规范的单片主机控制器和设备控制器,支持OHCI标准 

OHCI HCD support 

开放主机控制接口(OHCI)是主要针对嵌入式系统的USB 1.1主机控制器规范 

UHCI HCD (most Intel and VIA) support 

通用主机控制器接口(UHCI)是主要针对PC机的USB 1.1主机控制器规范.另外,EHCI也可能需要它 

Elan U132 Adapter Host Controller 

如果你有这种硬件就选吧 

SL811HS HCD support 

如果你有这种硬件就选吧 

USB Bluetooth TTY support 

USB蓝牙TTY设备支持 

USB MIDI support 

USB MIDI设备支持 

USB Modem (CDC ACM) support 

USB接口的猫或ISDN适配器 

USB Printer support 

USB打印机 

USB Mass Storage support 

USB存储设备(U盘,USB硬盘,USB软盘,USB CD-ROM,USB磁带,memory sticks,数码相机,读卡器等等).该选项依赖于'SCSI device support',且大部分情况下还依赖于'SCSI disk support'(比如U盘或USB硬盘) 

USB Mass Storage verbose debug 

仅供调试使用 

{省略的部分请按照自己实际使用的硬件选, 择(事实上大部分人都没有这些设备,可以全不选)} 

The shared table of common (or usual) storage devices 

该模块包含一张记录了常用USB存储设备及其驱动的表格,这样你无需重新编译模块即可在切换这些设备时自动邦定对应的驱动(还需要对/etc/modprobe.conf进行相应的设置).不确定的建议不选 

USB Human Interface Device (full HID) support 

USB人机界面设备(鼠标/键盘/游戏杆/手写版等人操作计算机的设备),该驱动不能和"USB HID Boot Protocol drivers"同时使用 

HID input layer support 

如果你有USB接口的鼠标/键盘/游戏杆/手写板等输入设备就必选 

Enable support for iBook/PowerBook special keys 

苹果iBooks/PowerBooks键盘上的Fn/Numlock等功能键支持 

Force feedback support 

力反馈设备 

/dev/hiddev raw HID device support 

如果你有USB监控装置或不间断电源(UPS)之类的非输入设备就选上 

USB HID Boot Protocol drivers 

如果你有绝对的把握确信不为自己的键盘和鼠标使用通常的HID驱动,而要使用Boot Protocol模式的HID驱动(常见于嵌入式环境)就选吧 

Aiptek 6000U/8000U tablet support 

一种手写板 

Wacom Intuos/Graphire tablet support 

一种手写/绘图板 

Acecad Flair tablet support 

一种数控绘图板 

KB Gear JamStudio tablet support 

一种手写/绘图板 

Griffin PowerMate and Contour Jog support 

一种具有调节音量/滚动文本/视频快进快退等功能的产品 

USB Touchscreen Driver 

USB触摸屏驱动 

Yealink usb-p1k voip phone 

一种VoIP电话 

X-Box gamepad support 

X-Box游戏板 

ATI / X10 USB RF remote control 

一种usb远程控制设备 

ATI / Philips USB RF remote control 

一种usb远程控制设备 

Keyspan DMR USB remote control 

一种usb远程控制设备 

Apple USB Touchpad support 

苹果机上的触摸板 

USB Mustek MDC800 Digital Camera support 

一种数码相机 

Microtek X6USB scanner support 

一种扫描仪 

USB Network Adapters 

USB网络适配器,如果你有这种设备请按自己实际使用的硬件选择子项 

USB Monitor 

usb流量监控,一般没必要选它 

USS720 parport driver 

一种USB接口转并口的转换设备 

USB Serial Converter support 

USB接口转串口的转换设备 

EMI 6|2m USB Audio interface support 

一种USB音频设备 

EMI 2|6 USB Audio interface support 

一种USB音频设备 

ADU devices from Ontrak Control Systems 

Ontrak Control Systems公司的一种自动拨号设备 

USB Auerswald ISDN support 

一种ISDN设备 

USB Diamond Rio500 support 

一种mp3播放机 

USB Lego Infrared Tower support 

一种无线发射机 

USB LCD driver support 

USB液晶显示器 

USB LED driver support 

USB发光二极管 

Cypress CY7C63xxx USB driver support 

德国AK Modul-Bus Computer GmbH公司的一种产品,不知道是用来干什么的 

Cypress USB thermometer driver support 

一种温度计?? 

USB Phidgets drivers 

来自Phidgets公司的各种USB产品 

Siemens ID USB Mouse Fingerprint sensor support 

西门子公司的一种指纹传感器 

Elan PCMCIA CardBus Adapter USB Client 

Elan公司的一种USB转PCMCIA的适配器 

Apple Cinema Display support 

苹果公司的一种Cinema Display 

USB 2.0 SVGA dongle support (Net2280/SiS315) 

一种软件狗 

USB LD driver 

USB LD驱动 

PlayStation 2 Trance Vibrator driver support 

SONY的PS2上面的"入迷振荡器"(类似于力反馈手柄) 

USB testing driver 

测试中的驱动,别选 

USB DSL modem support 

USB DSL猫 

USB Gadget Support 

其他各种杂七杂八的usb小玩艺 

MMC/SD Card support 

MMC/SD卡支持 

LED devices 

发光二级管(LED)设备 

InfiniBand support 

InfiniBand是一个通用的高性能I/O规范,它使得存储区域网中以更低的延时传输I/O消息和集群通讯消息并且提供很好的伸缩性.用于Linux服务器集群系统 

EDAC - error detection and reporting (RAS) 

错误检测与纠正(EDAC)的目标是发现并报告甚至纠正在计算机系统中发生的错误,这些错误是由CPU或芯片组报告的底层错误(内存错误/缓存错误/PCI错误/温度过高,等等),建议选择.如果这些代码报告了一个错误,请到http://bluesmoke.sourceforge.net/和http://buttersideup.com/edacwiki查看更多信息 

Debugging 

仅供调试使用 

Main Memory EDAC (Error Detection And Correction) reporting 

一些系统能够检测和修正主内存中的错误,EDAC能够报告这些信息(EDAC自己检测到的或者根据ECC得到的).EDAC还会尽量检测这些错误发生在哪里以便于替换损坏的内存.建议选择并按照你实际使用的芯片组选取子项 

Error detecting method 

错误检测方法,当前只有一个"Poll for errors"(错误轮询)可用 

Real Time Clock 

所有的PC机主板都包含一个电池动力的实时时钟芯片,以便在断电后仍然能够继续保持时间,RTC通常与CMOS集成在一起,因此BIOS可以从中读取当前时间 

RTC class 

通用RTC类支持,选中此项后你就可以在操作系统中使用一个或多个RTC设备(你还必须从下面启用一个或多个RTC接口) 

Set system time from RTC on startup 

系统启动时使用从指定的RTC设备中读取的时间来设定系统时间,通常这将有助于避免不必要的文件系统检测程序(fsck)的运行,建议选择 

The RTC to read the time from 

指定具体从哪个RTC设备中读取时间 

RTC debug support 

仅供调试使用 

sysfs 

允许通过sysfs接口使用RTC,允许多个RTC设备,也就是/sys/class/rtc/rtc0~N 

proc 

允许通过proc接口使用RTC,仅允许一个RTC设备,也就是/proc/driver/rtc 

dev 

允许通过dev接口使用RTC,允许多个RTC设备,也就是"udev"设置的/dev/rtc0~N,建议你建立一个指向其中之一的软连接/dev/rtc,某些程序(比如hwclock)需要使用/dev/rtc 

RTC UIE emulation on dev interface 

如果底层rtc芯片驱动没有提供RTC_UIE就仿真一个RTC_UIE.那些请求将产生每秒一次的更新请求以用来同步[这个选项的意思我也搞不清楚究竟时啥意思,翻译的也可能有误] 

{此处省略的RTC驱动请按照自己实际使用的RTC芯片进行选择} 

DMA Engine support 

从Intel Bensley双核服务器平台开始引入的数据移动加速(Data Movement Acceleration)引擎,它将某些传输数据的操作从CPU转移到专用硬件,从而可以进行异步传输并减轻CPU负载.Intel已将此项技术变为开放的标准,将来应当会有更多的厂商支持 

Network: TCP receive copy offload 

通过在网络栈中利用DMA引擎来减少接收数据包时的copy-to-user操作以释放CPU资源,这是DMA引擎目前最主要的用途 

Intel I/OAT DMA support 

Intel I/O加速技术(Intel I/O Acceleration Technology)中的DMA支持,基于Intel Bensley的新一代服务器平台都支持它 

File systems
文件系统
强烈建议在选择之前先看看各种文件系统的比较

Second extended fs support 

Ext2文件系统是Linux的标准文件系统,擅长处理稀疏文件 

Ext2 extended attributes 

Ext2文件系统扩展属性(与inode关联的name:value对)支持 

Ext2 POSIX Access Control Lists 

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持 

Ext2 Security Labels 

安全标签允许选择使用不同的安全模型实现(如SELinux)的访问控制模型,如果你没有使用需要扩展属性的安全模型就别选 

Ext2 execute in place support 

程序在写入存储介质时就已经分配好运行时的地址,因此不需要载入内存即可在芯片内执行,一般仅在嵌入式系统上才有这种设备 

Ext3 journalling file system support 

Ext3性能平庸,使用journal日志模式时数据完整性非常好(但怪异的是此时多线程并发读写速度却最快) 

Ext3 extended attributes 

Ext3文件系统扩展属性(与inode关联的name:value对)支持 

Ext3 POSIX Access Control Lists 

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持 

Ext3 Security Labels 

安全标签允许选择使用不同的安全模型实现(如SELinux)的访问控制模型,如果你没有使用需要扩展属性的安全模型就别选 

Ext4dev/ext4 extended fs support 

尚处于开发状态的Ext4 

JBD (ext3) debugging support 

仅供开发者使用 

JBD2 (ext4dev/ext4) debugging support 

仅供开发者使用 

Reiserfs support 

性能几乎全面超越Ext2(处理稀疏文件比Ext2慢),小文件(小于4k)性能非常突出,创建和删除文件速度最快,处理大量目录和文件(5k-20k)时仍然非常迅速.日志模式建议使用Ordered,追求极速可使用Writeback模式,追求安全可使用Journal模式.建议使用noatime,notail选项挂载分区以提高速度和避免bug.用于NFS和磁盘限额时需要额外的补丁 

Enable reiserfs debug mode 

启用ReiserFS调试模式,仅供开发者使用 

Stats in /proc/fs/reiserfs 

在/proc/fs/reiserfs文件中显示Reiserfs文件系统的状态,仅供开发者使用 

ReiserFS extended attributes 

ReiserFS文件系统扩展属性(与inode关联的name:value对)支持 

ReiserFS POSIX Access Control Lists 

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持 

ReiserFS Security Labels 

安全标签允许选择使用不同的安全模型实现(如SELinux)的访问控制模型,如果你没有使用需要扩展属性的安全模型就别选了 

JFS filesystem support 

IBM的JFS文件系统 

XFS filesystem support 

碎片最少,多线程并发读写最佳,大文件(>64k)性能最佳,创建和删除文件速度较慢.由于XFS在内存中缓存尽可能多的数据且仅当内存不足时才会将数据刷到磁盘,所以应当仅在确保电力供应不会中断的情况下才使用XFS 

Quota support 

XFS的磁盘配额支持 

Security Label support 

扩展的安全标签支持.SElinux之类的安全系统会使用到这样的扩展安全属性 

POSIX ACL support 

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持 

Realtime support 

实时子卷是专门存储文件数据的卷,可以允许将日志与数据分开在不同的磁盘上 

GFS2 file system support 

一种用于集群的文件系统 

OCFS2 file system support 

一种用于集群的文件系统 

Minix fs support 

老古董文件系统 

ROM file system support 

用于嵌入式系统的内存文件系统的支持 

Inotify file change notification support 

新式的文件系统的变化通知机制,简洁而强大,用于代替老旧的Dnotify 

Inotify support for userspace 

用户空间的Inotify支持 

Quota support 

磁盘配额支持,限制某个用户或者某组用户的磁盘占用空间,Ext2/Ext3/Reiserfs都支持它 

Old quota format support 

老式的配额格式支持 

Quota format v2 support 

新的v2格式允许使用32位的UID/GID 

Dnotify support 

旧式的基于目录的文件变化的通知机制(新机制是Inotify),目前仍然有一些程序依赖它 

Kernel automounter support 

内核自动加载远程文件系统(v3,就算选也不选这个旧的) 

Kernel automounter version 4 support (also supports v3) 

新的(v4)的内核自动加载远程文件系统的支持,也支持v3 

Filesystem in Userspace support 

FUSE允许在用户空间实现一个文件系统,如果你打算开发一个自己的文件系统或者使用一个基于FUSE的文件系统就选吧 

CD-ROM/DVD Filesystems 

CD-ROM/DVD文件系统 

ISO 9660 CDROM file system support 

CD-ROM的标准文件系统 

Microsoft Joliet CDROM extensions 

Microsoft对ISO 9660文件系统的Joliet扩展,允许在文件名中使用Unicode字符,也允许长文件名 

Transparent decompression extension 

Linux对ISO 9660文件系统的扩展,允许将数据透明的压缩存储在CD上 

UDF file system support 

某些新式CD/DVD上的文件系统,很少见 

DOS/FAT/NT Filesystems 

DOS/Windows的文件系统 

MSDOS fs support 

古老的MSDOS文件系统 

VFAT (Windows-95) fs support 

从Win95开始使用的VFAT文件系统 

Default codepage for FAT 

默认代码页 

Default iocharset for FAT 

默认字符集 

NTFS file system support 

从WinNT开始使用的NTFS文件系统 

NTFS debugging support 

仅供调试使用 

NTFS write support 

NTFS写入支持 

Pseudo filesystems 

伪文件系统 

/proc file system support 

显示系统状态的虚拟文件系统(irq设置,内存使用,加载的设备驱动器,网络状态等),许多程序依赖于它 

/proc/kcore support 

系统物理内存的映象 

/proc/vmcore support 

以ELF格式转储的已崩溃内核镜像,仅供调试使用 

Sysctl support (/proc/sys) 

显示各种不同的内核参数,并让root用户能交互地更改其中的某些内容 

sysfs file system support 

导出内核内部对象及其属性和对象之间的相互关系的文件系统,它把连接在系统上的设备和总线以及驱动程序等组织成为一个分级的文件,内核启动时依靠它挂载根分区,禁用sysfs后必须在内核引导参数中使用设备号指定根分区 

Virtual memory file system support (former shm fs) 

tmpfs文件系统(以前叫shm[共享内存]文件系统)支持 

Tmpfs POSIX Access Control Lists 

POSIX ACL(访问控制列表)支持,可以更精细的针对每个用户进行访问控制,需要外部库和程序的支持 

HugeTLB file system support 

仅仅能够在某些罕见的体系结构上使用的文件系统 

Userspace-driven configuration filesystem 

configfs是用户空间驱动的文件系统,提供与sysfs相反的功能 

Miscellaneous filesystems 

非主流的杂项文件系统 

Network File Systems 

网络文件系统 

Partition Types 

高级磁盘分区类型,不确定可以全不选 

Native Language Support 

本地语言支持 

Base native language support 

基础本地语言,必选 

Default NLS Option 

默认本地语言,建议使用UTF-8 

{此处省略的部分请按需选择,一般至少需要CP437,ASCII,ISO-8859-1} 

Distributed Lock Manager 

通用的分布式锁管理器,不明白就不选 

Instrumentation Support
分析支持

Profiling support 

对系统的活动进行分析,仅供内核开发者使用 

Kprobes 

仅供内核开发者使用 

Kernel hacking
内核hack选项

Show timing information on printks 

在printk的输出中包含时间信息,可以用来分析内核启动过程各步骤所用时间 

Enable __must_check logic 

在编译内核的过程中使用"必须检查"的逻辑,禁用它将不会显示某些警告信息 

Magic SysRq key 

不懂的千万别选 

Enable unused/obsolete exported symbols 

导出无用和废弃的符号,这将使内核不必要的增大 

Kernel debugging 

不是内核开发者的别选 

Debug Filesystem 

不是内核开发者的别选 

Compile the kernel with frame unwind information 

不是内核开发者的别选 

Run 'make headers_check' when building vmlinux 

在编译内核时运行'make headers_check'命令检查内核头文件,当你修改了与用户空间相关的内核头文件后建议启用该选项 

Linux Kernel Dump Test Tool Module 

不是内核开发者的别选 

Enable doublefault exception handler 

允许捕获非常罕见的导致系统无警告重启的doublefault异常,对于调试非常重要 

Security options
安全选项
这里的选项不明白的建议不要选,否则有可能弄巧成拙.

Enable access key retention support 

在内核中保留authentication token和access key 

Enable the /proc/keys file by which keys may be viewed 

允许有权限的进程通过/proc/keys读取所有的key 

Enable different security models 

允许内核选择不同的安全模型,如果未选中则内核将使用默认的安全模型 

Socket and Networking Security Hooks 

允许安全模型通过Security Hook对Socket与Networking进行访问控制 

XFRM (IPSec) Networking Security Hooks 

启用XFRM安全Hook 

Default Linux Capabilities 

启用与"默认"Linux的兼容性 

Root Plug Support 

一个简单的Linux安全模块,在特定的USB设备不存在时它简单的禁止一切egid==0的进程运行 

NSA SELinux Support 

美国国家安全局(NSA)开发的安全增强Linux(SELinux),你还需要进行策略配置(checkpolicy)并且对文件系统进行标记(setfiles) 

NSA SELinux boot parameter 

添加一个内核引导参数以允许在引导时使用'selinux=0'禁用SELinux或'selinux=1'启用SELinux 

NSA SELinux boot parameter default value 

上述参数的默认值 

NSA SELinux runtime disable 

允许在运行时禁用SELinux 

NSA SELinux Development Support 

SELinux开发支持 

NSA SELinux AVC Statistics 

搜集存取向量(access vector)缓冲区的统计信息并在/selinux/avc/cache_stats中显示出来.这些信息可以用avcstat之类的工具查看 

NSA SELinux checkreqprot default value 

checkreqprot标志的默认值 

NSA SELinux enable new secmark network controls by default 

默认启用新的基于安全标记(secmark)的网络 

NSA SELinux maximum supported policy format version 

允许将支持的最高策略格式版本设置为一个特定的数值 

NSA SELinux maximum supported policy format version value 

支持的最高策略格式版本的数值 

Cryptographic options
加密选项

Cryptographic API 

提供核心的加密API支持.这里的加密算法被广泛的应用于驱动程序通信协议等机制中.子选项可以全不选,内核中若有其他部分依赖它,会自动选上 

Cryptographic algorithm manager 

创建加密模版实例,必须要选 

HMAC support 

为IPSec所必须,可为PPPoE提供压缩支持 

Null algorithms 

NULL加密算法(什么也不做),用于IPsec协议的封装安全载荷模块(ESP) 

MD4 digest algorithm 

老旧的摘要算法,已经过时 

MD5 digest algorithm 

主流摘要算法,128位(已被中国山东大学王小云攻破,可以快速找到碰撞) 

SHA1 digest algorithm 

主流摘要算法,160位(已被中国山东大学王小云攻破,可以快速找到碰撞),速度与MD5相当 

SHA256 digest algorithm 

更好的摘要算法,256位,速度较SHA1稍慢 

SHA384 and SHA512 digest algorithms 

更好的摘要算法,384/512位,速度大约只有SHA1的40-50% 

Whirlpool digest algorithms 

最安全的摘要算法,512位,已被列入ISO标准,目前最新版本为3.0(2003年发布) 

Tiger digest algorithms 

号称最快的摘要算法,192位,专门为64位CPU进行了优化 

ECB support 

电子密码本,最简单的加密方法 

CBC support 

密码块链,IPSec需要使用它 

DES and Triple DES EDE cipher algorithms 

老迈的(DES)和尚佳的(Triple DES)对称加密算法 

Blowfish cipher algorithm 

又老又慢的对称加密算法 

Twofish cipher algorithm 

很强的对称加密算法,使用较广 

Twofish cipher algorithms (i586) 

很强的对称加密算法,使用较广(针对i586的版本) 

Serpent cipher algorithm 

很强的对称加密算法 

AES cipher algorithms 

最佳的对称加密算法(Rijndael),128/192/256位,强度最高,快速且节省内存 

AES cipher algorithms (i586) 

最佳的对称加密算法(Rijndael),128/192/256位,强度最高,快速且节省内存(针对i586的版本) 

CAST5 (CAST-128) cipher algorithm 

对称加密算法 

CAST6 (CAST-256) cipher algorithm 

对称加密算法 

TEA, XTEA and XETA cipher algorithms 

较弱的对称加密算法 

ARC4 cipher algorithm 

脆弱的流对称加密算法 

Khazad cipher algorithm 

对称加密算法 

Anubis cipher algorithm 

对称加密算法 

Deflate compression algorithm 

压缩算法,当在IPSec中使用IPCOMP协议时才需要 

Michael MIC keyed digest algorithm 

摘要算法,仅仅用于校验iSCSI设备传输的数据,因为算法本身比较脆弱 

CRC32c CRC algorithm 

摘要算法,可用于校验iSCSI设备传输的数据 

Testing module 

快速且丑陋的测试模块 

Hardware crypto devices 

仅有VIA C7系列处理器支持硬件加密(VIA PadLock高级加密引擎) 

Library routines
库子程序
仅有那些不包含在内核原码中的第三方内核模块才可能需要,可以全不选,内核中若有其他部分依赖它,会自动选上

CRC-CCITT functions 

传送8-bit字符,欧洲标准 

CRC16 functions 

传送8-bit字符,美国标准 

CRC32 functions 

用于点对点的同步数据传输中,传输网络数据包所必须的 

CRC32c (Castagnoli, et al) Cyclic Redundancy-Check 

用于点对点的同步数据传输中,比如iSCSI设备 

 

Load an Alternate Configuration File 

读入一个外部配置文件 

Save Configuration to an Alternate File 

将配置保存到一个外部文件 
接着 intel 显卡要如下配置： 

Device Drivers ---> 
Graphics support ---> 
 /dev/agpgart (AGP Support) ---> 
 <*> Intel 440LX/BX/GX, I8xx and E7x05 chipset support 
 Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) ---> 
 <*> Intel 830M, 845G, 852GM, 855GM, 865G (i915 driver) 
i915 driver 
[*] Enable modesetting on intel by default 

nvidia 显卡要如下配置 
[plain] view plaincopyprint? 
( 激活 DRM ) 
Device Drivers ---> 
Graphics support ---> 
<*> Direct Rendering Manager ---> 

(Nouveau is currently in the Staging drivers section) 
Device Drivers ---> 
Staging drivers ---> 
[ ] Exclude Staging drivers from being built 
<*> Nouveau (nVidia) cards 


Linux用来支持各种体系结构的源代码包含大约4500个C语言程序，存放在270个左右的子目录下，总共大约包含200万行代码，大概占用58MB磁盘空间。 

源代码所有在目录：/usr/src/linux (大部分linux发行版本中) 

init 内核初始化代码 
kernel 内核核心部分：进程、定时、程序执行、信号、模块。。。 
mm 内存处理 
arch 平台相关代码 
   i386 IBM的PC体系结构 
      kernel 内核核心部分 
      mm 内存管理 
      math-emu 浮点单元软件仿真 
      lib 硬件相关工具函数 
      boot 引导程序 
         compressed 压缩内核处理 
         tools 生成压缩内核映像的程序 
   alpha 康柏的Alpha体系结构 
   s390 IBM的System/390体系结构 
   sparc Sun的SPARC体系结构 
   sparc64 Sun的Ultra-SPARC体系结构 
   mips SGI的MIPS体系结构 
   ppc Motorola-IBM的基于PowerPC的体系结构 
   m68k Motorola的基于MC680x0的体系结构 
   arm 基于ARM处理器的体系结构 
fs 文件系统 
   proc /proc虚拟文件系统 
   devpts /dev/pts虚拟文件系统 
   ext2 Linux本地的Ext2文件系统 
   isofs ISO9660文件系统（CD-ROM） 
   nfs 网络文件系统（NFS） 
   nfsd 集成的网络文件系统服务器 
   fat 基于FAT的文件系统的通用代码 
   msdos 微软的MS-DOS文件系统 
   vfat 微软的Windows文件系统（VFAT） 
   nls 本地语言支持 
   ntfs 微软的Windows NT文件系统 
   smbfs 微软的Windows服务器消息块（SMB）文件系统 
   umsdos UMSDOS文件系统 
   minix MINIX文件系统 
   hpfs IBM的OS/2文件系统 
   sysv SystemV、SCO、Xenix、Coherent和Version7文件系统 
   ncpfs Novell的Netware核心协议（NCP0 
   ufs UnixBSD、SunOs、FreeBSD、NetBSD、OpenBSD和NeXTStep文件系统 
   affs Amiga的快速文件系统（FFS） 
   coda Coda网络文件系统 
   hfs 苹果的Macintosh文件系统 
   adfs Acorn磁盘填充文件系统 
   efs SGI IRIX的EFS文件系统 
   qnx4 QNX4 OS使用不的文件系统 
   romfs 只读小文件系统 
   autofs 目录自动装载程序的支持 
   lockd 远程文件锁定的支持 
Net 网络代码 
Ipc System V的进程间通信 
Drivers 设备驱动程序 
   block 块设备驱动程序 
      paride 从并口访问IDE设备的支持 
   scsi SCSI设备驱动程序 
   char 字符设备驱动程序 
      joystick 游戏杆 
      ftape 磁带流设备 
      hfmodem 无线电设备 
      ip2 IntelliPort的多端口串行控制器 
   net 网卡设备 
   sound 音频卡设备 
   video 视频卡设备 
   cdrom 专用CD-ROM设备（除ATAPI和SCSI之外） 
   isd0n ISDN设备 
   apl000 富士的AP1000设备 
   macintosh 苹果的Macintosh设备 
   sgi SGI的设备 
   fc4 光纤设备 
   acorn Acorn的设备 
   misc 杂项设备 
   pnp 即插即用的支持 
   usb 通用串行总线（USB）的支持 
   pci PCI总线的支持 
   sbus Sun的SPARC SBus的支持 
   nubus 苹果的Macintosh Nubus的支持 
   zorro Amiga的Zorro总线的支持 
   dio 惠普的HP300 DIO总线的支持 
   tc Sun的TurboChannel支持（尚未完成） 
Lib 通用内核函数 
Include 头文件（.h） 
   linux 内核核心部分 
      lockd 远程文件加锁 
      nfsd 集成的网络文件服务器 
      sunrpc Sun的远程过程调用 
      byteorder 字节交换函数 
      modules 模块支持 
   asm-generic 平台无关低级头文件 
   asm-i386 IBM的PC体系结构 
   asm-alpha 康柏的Alpha体系结构 
   asm-mips SGI的MIPS体系结构 
   asm-m68k Motorola-IBM的基于PowerPC的体系结构 
   asm-ppc Motorola-IBM的PowerPC体系结构 
   asm-s390 IBM的System/390体系结构 
   asm-sparc Sun的SPARC体系结构 
   asm-sparc64 Sun的Ultra-SPARC体系结构 
   asm-arm 基于ARM处理器的体系结构 
   net 网络 
   scsi SCSI支持 
   video 视频卡支持 
   config 定义内核配置的宏所在的头文件 
scripts 生成内核映像的外部程序 
Documentation有关内核各个部分的通用解释和注释的文本文件